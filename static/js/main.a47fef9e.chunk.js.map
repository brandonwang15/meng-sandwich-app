{"version":3,"sources":["components/context/app_context.js","constants.js","components/modules/Sandwich.js","components/modules/StarButton.js","components/modules/FilterableSandwichContainer.js","components/modules/DraggableSandwich.js","components/modules/Navbar.js","components/modules/NutritionFacts.js","data/all_condiments.js","components/modules/CondimentCard.js","data/all_modules.js","reducers/sandwiches.js","reducers/index.js","misc/SandwichObjects.js","store.js","components/modules/sandwich/FillingSlot.js","actions/index.js","components/modules/sandwich/SandwichFrame.js","components/modules/sandwich/DraggableFilling.js","components/modules/sandwich/FillingsBank.js","components/pages/SandwichPage.js","data/preset_curricula.js","components/pages/PresetCurricula.js","components/pages/Home.js","components/pages/AllModules.js","components/modules/FilterableCondimentContainer.js","components/pages/AllCondiments.js","components/modules/SandwichHolder.js","components/modules/CurriculumBuilder.js","components/pages/BuildYourOwn.js","components/App.js","reportWebVitals.js","index.js"],"names":["React","createContext","ItemTypes","SANDWICH","FILLING","Sandwich","className","this","props","data","title","short_description","tags","toString","to","uid","sandwichUID","Component","defaultProps","contextType","AppContext","StarButton","isStarred","context","isSandwichStarred","console","log","onClick","toggleStarSandwich","FilterableSandwichContainer","onFilterTextChanged","bind","onStarButtonClicked","getVisibleSandwichIndices","state","starFilter","filterText","newSandwichIndicesToShow","trim","Array","sandwichData","all_modules","length","keys","forEach","value","index","isSandwichMatching","push","filter","searchText","toLowerCase","join","includes","setState","e","target","indicesToShow","filteredModules","draggableMode","id","type","placeholder","onChange","map","module","canDrag","isSandwichDraggable","DraggableSandwich","useDrag","item","collect","monitor","isDragging","begin","end","didDrop","getDropResult","drag","ref","style","opacity","cursor","Navbar","NutritionFacts","sandwiches","allTags","Set","sw","Object","tag","add","from","numSandwiches","wich","getCoveredTags","CondimentCard","condimentData","condiments","initialState","action","JSON","stringify","undefined","sandwich","contents","combineReducers","CustomSandwichData","numSlots","requiredFillings","optionalFillings","SandwichFillingData","isRequired","store","createStore","rootReducer","optional_teacher_fillings","required_fillings","class_num","createInitialReduxStoreState","FillingSlot","connectDropTarget","fillingObject","fillingTarget","drop","component","getItem","fillingIndex","fillingState","getState","dispatch","connect","thisFilling","DropTarget","dropTarget","SandwichFrame","holderList","i","customSandwichData","DraggableFilling","filling","FillingsBank","isFillingPickedAlready","fillingContents","pickedFillings","values","fillingsList","numOptional","ownProps","thisSandwichData","SandwichPage","DndProvider","backend","HTML5Backend","resources","resource","href","process","url","text","role","suggested_condiments","curricula_presets","PresetCurricula","Error","module_uid","curricula","presetCurricula","getCurriculaData","sequence","updateSandwichInUserCurriculum","getSandwichData","loadPresetCurriculaInUserCurricula","Home","AllModules","FilterableCondimentContainer","newIndicesToShow","isMatching","AllCondiments","SandwichHolder","heldSandwich","curriculumSandwiches","isSandwichSlotEmpty","deleteSandwichFromUserCurriculum","sandwichTarget","CurriculumBuilder","clearUserCurriculum","isSandwichInUserCurriculum","BuildYourOwn","EMPTY_SANDWICH_DATA","App","starSandwich","unstarSandwich","curriculumSlots","starredSandwiches","newValue","has","newStarredSandwiches","delete","newData","previousState","currentProps","newCurriculumSandwiches","setElementInCurriculumSandwiches","Provider","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a47fef9e.chunk.js","sourcesContent":["import React from 'react';\n\nexport default React.createContext({}); ","const ItemTypes = {\n    SANDWICH: 'sandwich',\n    FILLING: 'filling,'\n};\n\nexport default ItemTypes; ","import React, { Component } from 'react';\nimport './Sandwich.css';\n\nimport {\n    NavLink\n} from \"react-router-dom\";\n\nimport AppContext from \"../context/app_context\";\nimport PropTypes from 'prop-types';\nimport StarButton from './StarButton';\n\nclass Sandwich extends React.Component {\n\n\n    render() {\n        return (\n            <div className=\"Sandwich-container\" >\n                <h3>{this.props.data.title}</h3>\n                <p><em>{this.props.data.short_description}</em></p>\n                <p>Tags: {this.props.data.tags.toString()}</p>\n                <NavLink to={\"/sandwich/\"+this.props.data.uid}>See More</NavLink>\n                <p>UID: {this.props.data.uid}</p>\n                <StarButton sandwichUID={this.props.data.uid}/>\n            </div>\n        )\n    }\n}\n\nSandwich.propTypes = {\n    data: PropTypes.object.isRequired,\n}\n\nSandwich.defaultProps = {\n    data: {\n        \"uid\": -1,\n        \"title\": \"N/A\",\n        \"tags\": []\n    }\n}\n\nSandwich.contextType = AppContext;\n\nexport default Sandwich;","import React, { Component } from 'react';\n\nimport AppContext from \"../context/app_context\";\nimport PropTypes from 'prop-types';\n\n// function StarButton(props) {\n//     return (\n//         <AppContext.Consumer>\n        \n//         {value => \n//             value.curriculumSandwiches.array.forEach(element => \n//                 <p>a</p>\n//             )\n//             // <button className={value.isSandwichStarred(props.sandwichUID) ? \"btn primary\" : \"btn warning\"} onClick={() => value.toggleStarSandwich(props.sandwichUID)}>Star</button>}\n        \n//         </AppContext.Consumer>\n//     ) \n// }\n\nclass StarButton extends React.Component {\n    render() {\n        let isStarred = this.context.isSandwichStarred(this.props.sandwichUID)\n        console.log(this.props.sandwichUID + \": \"+isStarred.toString())\n        return (\n            <button className={isStarred ? \"btn btn-warning\" : \"btn btn-secondary\"} onClick={() => this.context.toggleStarSandwich(this.props.sandwichUID)}>{isStarred ? \"Unstar\" : \"Star\"}</button>\n        )\n    }\n}\n\nStarButton.propTypes = {\n    sandwichUID: PropTypes.number.isRequired,\n}\n\nStarButton.contextType = AppContext;\n\nexport default StarButton;","import React, { Component } from \"react\";\nimport DraggableSandwich from \"./DraggableSandwich\";\nimport Sandwich from \"./Sandwich\";\nimport PropTypes from 'prop-types';\nimport AppContext from \"../context/app_context\"\nimport './FilterableSandwichContainer.css';\n\nclass FilterableSandwichContainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.onFilterTextChanged = this.onFilterTextChanged.bind(this);\n        this.onStarButtonClicked = this.onStarButtonClicked.bind(this);\n        this.getVisibleSandwichIndices = this.getVisibleSandwichIndices.bind(this);\n\n        this.state = {\n            starFilter: false,\n            filterText: \"\",\n        };\n    }\n\n    getVisibleSandwichIndices() {\n        let newSandwichIndicesToShow = []\n\n        // Apply filterText filter\n        console.log(\"filterText: %s\", this.state.filterText)\n        if (this.state.filterText.trim() === \"\") {\n            console.log(\"show all\");\n\n            newSandwichIndicesToShow = [...Array(this.props.sandwichData.all_modules.length).keys()];\n        } else {\n            this.props.sandwichData.all_modules.forEach((value, index) => {    \n                if (this.isSandwichMatching(value, this.state.filterText)) {\n                    newSandwichIndicesToShow.push(index);\n                }\n            });\n        }\n\n        // Apply star filter\n        newSandwichIndicesToShow = newSandwichIndicesToShow.filter((index) => {\n            let uid = this.props.sandwichData.all_modules[index].uid\n            let passesStarFilter = (!this.state.starFilter || this.context.isSandwichStarred(uid))\n\n            return passesStarFilter\n        })\n\n        return newSandwichIndicesToShow\n    }\n\n    isSandwichMatching(data, searchText) {\n        searchText = searchText.toLowerCase();\n        // check tags for match\n        if (data.tags.join(\" \").toLowerCase().includes(searchText)) {\n            return true;\n        }\n\n        // check title for match\n        if (data.title.toLowerCase().includes(searchText)) {\n            return true;\n        }\n\n        // TODO: add more matching conditions\n        return false;\n    }\n\n    onStarButtonClicked() {\n        this.setState({ \n            starFilter: !this.state.starFilter,\n        });\n\n    }\n\n    onFilterTextChanged(e) {\n        const searchText = e.target.value;\n        this.setState({\n            filterText: searchText,\n        })\n    }\n\n    render() {\n        let indicesToShow = this.getVisibleSandwichIndices()\n\n        let filteredModules = this.props.sandwichData.all_modules.filter((value, index) => {\n            return indicesToShow.includes(index);\n        });\n\n        if (this.props.draggableMode) {\n            return (\n                <>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-sm-2\">\n                                Filter:\n                            </div>\n                            <div className=\"col-sm-8\">\n                                <input id=\"searchField\" type=\"text\" className=\"form-control\" placeholder=\"Add search terms!\" onChange={this.onFilterTextChanged} />\n                            </div>\n                            <div className=\"col-sm-2\">\n                                <button className={this.state.starFilter ? \"btn btn-warning\" : \"btn btn-dark\"} onClick={this.onStarButtonClicked}>{this.state.starFilter ? \"Starred Only\" : \"Starred + Unstarred\"}</button>\n                            </div>\n                        </div>\n\n                        <div className=\"Scrollable-container\">\n                            <div className=\"row\">\n                                {filteredModules.map((module) => {\n                                    let sandwichDiv = <div className=\"col-sm-4\" key={module.uid}>\n                                        <DraggableSandwich\n                                            data={module}\n                                            canDrag={!this.props.isSandwichDraggable(module.uid)}\n                                        />\n                                    </div>;\n                                    return sandwichDiv;\n                                }\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                </>\n            )\n\n\n        } else {\n            return (\n                <>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-sm-2\">\n                                Filter:\n                            </div>\n                            <div className=\"col-sm-8\">\n                                <input id=\"searchField\" type=\"text\" className=\"form-control\" placeholder=\"Add search terms!\" onChange={this.onFilterTextChanged} />\n                            </div>\n                        </div>\n                        <div className=\"container\">\n                            <div key={module.uid} className=\"row\">\n                                {filteredModules.map((module) =>\n                                    <div className=\"col-sm-4\">\n                                        <Sandwich\n                                            data={module}\n                                        />\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                </>\n            )\n        }\n    }\n}\n\nFilterableSandwichContainer.propTypes = {\n    sandwichData: PropTypes.object.isRequired,\n    draggableMode: PropTypes.bool.isRequired,\n    // TODO: this whole draggable flow is a candidate for refactoring\n    isSandwichDraggable: PropTypes.func, // a function that determines whether the sandwich with the given uid is draggable\n}\n\nFilterableSandwichContainer.contextType = AppContext\n\n\nexport default FilterableSandwichContainer;","import React, { Component } from 'react';\nimport './DraggableSandwich.css';\n\nimport PropTypes from 'prop-types';\n\nimport ItemTypes from \"../../constants\";\n\nimport { useDrag } from 'react-dnd';\n\nimport {\n    NavLink\n} from \"react-router-dom\";\nimport StarButton from './StarButton';\n\n// Draggable component that displays a 'thumbnail' card for the given sandwich object.\nfunction DraggableSandwich(props) {\n    const [{isDragging}, drag] = useDrag({\n        item: { type: ItemTypes.SANDWICH },\n        collect: monitor => ({\n            isDragging: !!monitor.isDragging(),\n        }),\n        canDrag: () => props.canDrag,\n        begin: () => {\n            return props.data;\n        },\n        end: (item, monitor) => {\n            console.log(\"DraggableSandwich: END DRAG. didDrop=%s; dropResult=%s.\", monitor.didDrop(), monitor.getDropResult());\n        },\n        });\n\n    return (\n        <div className={\"Draggable-sandwich-container \" + (props.canDrag ? \"enabled\" : \"disabled\")}\n            ref={drag}\n            style={{\n                opacity: isDragging ? 0.5 : 1,\n                cursor: 'move',\n            }}\n        >\n            <h3>{props.data.title}</h3>\n            <p>UID: {props.data.uid}</p>\n            <p>Tags: {props.data.tags.toString()}</p>\n            <p><NavLink to={\"/sandwich/\"+props.data.uid}>See More</NavLink></p>\n            <p><StarButton sandwichUID={props.data.uid}></StarButton></p>\n        </div>\n    )\n}\n\nDraggableSandwich.propTypes = {\n    data: PropTypes.object.isRequired,\n    canDrag: PropTypes.bool.isRequired,\n}\n\nDraggableSandwich.defaultProps = {\n    data: {\n        \"uid\": -1,\n        \"title\": \"N/A\",\n        \"tags\": []\n    }\n}\n\nexport default DraggableSandwich;","import './Navbar.css';\nimport React, { Component } from \"react\";\nimport {\n    BrowserRouter as Router,\n    NavLink\n} from \"react-router-dom\";\n\nclass Navbar extends React.Component {\n    // TODO: figure out how to get NavLinks working\n    render() {\n        return (\n                <div className=\"Navbar\">\n                    <nav>\n                    <ul>\n                        <NavLink to=\"/home\">Home</NavLink> \n                        {' '}|{' '}\n                        <NavLink to=\"/builder\">Build Your Curriculum</NavLink>\n                        {' '}|{' '}\n                        <NavLink to=\"/presets\">Preset Curriculum</NavLink>\n                        {' '}|{' '}\n                        <NavLink to=\"/all\">All Modules</NavLink>\n                        {' '}|{' '}\n                        <NavLink to=\"/condiments\">All Condiments</NavLink>\n                    </ul>\n                    </nav>\n\n                </div>\n        )\n    }\n}\n\nexport default Navbar;","import React, { Component } from \"react\";\nimport './NutritionFacts.js';\nimport './NutritionFacts.css';\nimport PropTypes from 'prop-types';\n\nclass NutritionFacts extends React.Component {\n    \n    // returns set of tags as a list\n    getCoveredTags(sandwiches) {\n        let allTags = new Set();\n\n        sandwiches.forEach(sw => {\n            if (Object.keys(sw).length !== 0) {\n                sw.tags.forEach(tag => allTags.add(tag));\n            }\n        });\n\n        return Array.from(allTags);\n    }\n\n    render() {\n        let numSandwiches = 0;\n\n        this.props.sandwichData.forEach((wich) => {\n            if (Object.keys(wich).length > 0) {\n                numSandwiches++;\n            }\n        });\n\n\n        return (<div className=\"container border border-nutrition-outline\">\n            <div className=\"row border-bottom border-nutrition-hr-thick\">\n                <div className=\"col-sm border-bottom\">\n                    <h3>Nutrition Facts</h3>\n                </div>\n            </div>\n            <div className=\"row border-bottom border-nutrition-hr-med\">\n                <div className=\"col-9\">\n                    # of modules:\n                </div>\n                <div className=\"col-3\">\n                    {numSandwiches}\n                </div>\n            </div>\n            <div className=\"row border-bottom border-nutrition-hr-thin text-left\">\n                <div className=\"col-12\">\n                    Tags covered:\n                </div>\n                <div className=\"col-12\" style={{\"fontSize\": \"12px\"}}>\n                    <em>\n                        {this.getCoveredTags(this.props.sandwichData).join(', ')}\n                    </em>\n                </div>\n            </div>\n            <div className=\"row border-bottom border-nutrition-hr-thin text-left\">\n                <div className=\"col-9\">\n                    Artificial Intelligence\n                </div>\n                <div className=\"col-3\">\n                    75%\n                </div>\n            </div>\n            <div className=\"row border-bottom border-nutrition-hr-thin text-left\">\n                <div className=\"col-9\">\n                    Computational Thinking\n                </div>\n                <div className=\"col-3\">\n                    90%\n                </div>\n            </div>\n            <div className=\"row border-bottom border-nutrition-hr-med text-left\">\n                <div className=\"col-9\">\n                    Design Thinking\n                </div>\n                <div className=\"col-3\">\n                    50%\n                </div>\n            </div>\n            <div className=\"row border-bottom border-nutrition-hr-thin text-left small-text\">\n                <div className=\"col-9\">\n                    Creativity\n                </div>\n                <div className=\"col-3\">\n                    Yes\n                </div>\n            </div>\n            <div className=\"row border-bottom border-nutrition-hr-thin text-left small-text\">\n                <div className=\"col-9\">\n                    Collaboration\n                </div>\n                <div className=\"col-3\">\n                    Yes\n                </div>\n            </div>\n            <div className=\"row border-nutrition-hr-thin text-left small-text\">\n                <div className=\"col-9\">\n                    Reflection\n                </div>\n                <div className=\"col-3\">\n                    Yes\n                </div>\n            </div>\n            \n        </div>)\n    }\n}\n\nNutritionFacts.propTypes = {\n    sandwichData: PropTypes.array.isRequired,\n}\n\nexport default NutritionFacts;","var data = {\n    \"condiments\": [\n        {\n            \"uid\": 1,\n            \"title\": \"Debugging\",\n            \"short_description\": \"Scratch classroom activity that encourages transferable debugging skills.\",\n            \"tags\": [\n                \"Scratch\",\n                \"plugged\"\n            ],\n            \"resources\": [\n                {\n                    \"url\": \"/condiment/1/image.png\",\n                    \"text\": \"Sandwich picture.\",\n                },\n                {\n                    \"url\": \"/condiment/1/test.pdf\",\n                    \"text\": \"Here's a PDF!\",\n                }\n            ]\n        }, \n        {\n            \"uid\": 2,\n            \"title\": \"Design Thinking\",\n            \"short_description\": \"1 hour design thinking activity to familiarize students with the DT process.\",\n            \"tags\": [\n                \"unplugged\",\n                \"design thinking\"\n            ],\n            \"resources\": [\n                {\n                    \"url\": \"/condiment/1/image.png\",\n                    \"text\": \"Sandwich picture.\",\n                },\n                {\n                    \"url\": \"/condiment/1/test.pdf\",\n                    \"text\": \"Here's a PDF!\",\n                }\n            ]\n        },    \n        {\n            \"uid\": 3,\n            \"title\": \"Scratch Review\",\n            \"short_description\": \"A refresher for students who have seen Scratch before, but could use a warm up before jumping back into hands-on work.\",\n            \"tags\": [\n                \"Scratch\"\n            ],\n            \"resources\": [\n                {\n                    \"url\": \"/condiment/1/image.png\",\n                    \"text\": \"Sandwich picture.\",\n                },\n                {\n                    \"url\": \"/condiment/1/test.pdf\",\n                    \"text\": \"Here's a PDF!\",\n                }\n            ]\n        },    \n    ]\n};\n\nexport default data;\n","import React, { Component } from 'react';\n\nimport './CondimentCard.css';\n\nimport {\n    NavLink\n} from \"react-router-dom\";\n\nimport data from '../../data/all_condiments';\n\nimport PropTypes from 'prop-types';\n\nclass CondimentCard extends React.Component {\n    render() {\n        let condimentData = {};\n\n        data.condiments.forEach((value) => {\n            if (value.uid === this.props.uid) {\n                condimentData = value;\n            }\n        });\n\n        return (\n            <div className=\"Condiment-container\" >\n                <b>{condimentData.title}</b>\n                <p><em>{condimentData.short_description}</em></p>\n                <p>Tags: {condimentData.tags.toString()}</p>\n                <NavLink to={\"/condiment/\"+condimentData.uid}>See More</NavLink>\n                <p>UID: {condimentData.uid}</p>\n            </div>\n        )\n    }\n}\n\nCondimentCard.propTypes = {\n    uid: PropTypes.number.isRequired,\n}\n\nexport default CondimentCard;","var data = {\n    \"all_modules\": [\n        {\n            \"uid\": 1,\n            \"title\": \"Cities of the Future\",\n            \"short_description\": \"Students envision what their communities will look like in the future, and create demonstrations that incorporate automation.\",\n            \"tags\": [\n                \"algorithms\",\n                \"Scratch\",\n                \"plugged\"\n            ],\n            \"numSlots\": 7,\n            \"resources\": [\n                {\n                    \"url\": \"/sandwich/1/image.png\",\n                    \"text\": \"Sandwich picture.\",\n                },\n                {\n                    \"url\": \"/sandwich/1/test.pdf\",\n                    \"text\": \"Here's a PDF!\",\n                }\n            ],\n            // TODO: think about how to represent fillings. Will they be stored in another file and linked via id?\n            // For now, view these entries as stubs.\n            \"required_fillings\": [\n                {\n                    \"title\": \"Project Launch\",\n                    \"type\": \"top-bun\",\n                    \"class_num\": \"1\",\n                },\n                {\n                    \"title\": \"Intro to machine perception\",\n                    \"type\": \"req-filling\",\n                    \"class_num\": \"2\",\n                },\n                {\n                    \"title\": \"Client interviews\",\n                    \"type\": \"req-filling\",\n                    \"class_num\": \"7\",\n                }\n            ],\n            \"optional_teacher_fillings\" : [ // teacher-curated fillings\n                {\n                    \"title\": \"Fine-tuning models\",\n                    \"difficulty\": \"intermediate\",\n                    \"ordering\": [8, 12],\n                },\n                {\n                    \"title\": \"Testing your model\",\n                    \"difficulty\": \"beginner\",\n                },\n                {\n                    \"title\": \"Bias activity\",\n                    \"difficulty\": \"beginner\",\n                }\n\n            ],\n            \"suggested_condiments\": [1,2],\n            \"example_student_projects\": [\n                {\n                    \"title\": \"Example Student Project 1\",\n                    \"url\": \"/studentproject/1\"\n                }\n            ]\n        },\n        // {\n        //     \"uid\": 2,\n        //     \"title\": \"Creativity & AI\",\n        //     \"numSlots\": 10,\n        //     \"tags\": [\n        //         \"algorithms\",\n        //         \"Scratch\",\n        //         \"Teachable Machines\"\n        //     ],\n        //     \"resources\": [],\n        //     \"suggested_condiments\": [2],\n        //     \"optional_teacher_fillings\" : [ // teacher-curated fillings\n        //         {\n        //             \"title\": \"Fine-tuning models\",\n        //             \"difficulty\": \"intermediate\",\n        //             \"ordering\": [8, 12],\n        //         },\n        //         {\n        //             \"title\": \"Testing your model\",\n        //             \"difficulty\": \"beginner\",\n        //         },\n        //         {\n        //             \"title\": \"Bias activity\",\n        //             \"difficulty\": \"beginner\",\n        //         }\n\n        //     ],\n        // },\n        // {\n        //     \"uid\": 3,\n        //     \"title\": \"Debugging Detective\",\n        //     \"numSlots\": 10,\n        //     \"tags\": [\n        //         \"debugging\",\n        //         \"Scratch\",\n        //         \"human skills\"\n        //     ],\n        //     \"resources\": [],\n        //     \"suggested_condiments\": [1,3],\n        // },\n        // {\n        //     \"uid\": 4,\n        //     \"title\": \"DAILY AI\",\n        //     \"numSlots\": 10,\n        //     \"tags\": [\n        //         \"AI\"\n        //     ],\n        //     \"resources\": [],\n        //     \"suggested_condiments\": [1],\n        // },\n        // {\n        //     \"uid\": 5,\n        //     \"title\": \"Design Thinking Bootcamp\",\n        //     \"numSlots\": 10,\n        //     \"tags\": [\n        //         \"human skills\"\n        //     ],\n        //     \"resources\": [],\n        // },\n        // {\n        //     \"uid\": 6,\n        //     \"title\": \"Robot Race\",\n        //     \"numSlots\": 10,\n        //     \"tags\": [\n        //         \"debugging\",\n        //         \"Scratch\",\n        //         \"human skills\"\n        //     ],\n        //     \"resources\": [],\n        //     \"suggested_condiments\": [3],\n        // },\n        // {\n        //     \"uid\": 7,\n        //     \"title\": \"Seafloor Cleanup\",\n        //     \"numSlots\": 10,\n        //     \"tags\": [\n        //         \"debugging\",\n        //         \"Scratch\",\n        //         \"human skills\"\n        //     ],\n        //     \"resources\": [],\n        // }\n    ]\n};\n\nexport default data;\n","import { createReducer } from '@reduxjs/toolkit'\n\n\n// TODO: clean this logic up: https://redux.js.org/recipes/structuring-reducers/immutable-update-patterns\nconst initialState = { \"a\": 1 };\n// const sandwiches = createReducer(initialState, {\n//     SET_FILLING: (state, action) => {\n//       state[action.uid].contents[action.index] = action.value;\n// console.log(\"inside SET_FILLING: \", JSON.stringify(state, undefined, 2));\n//     },\n//     DELETE_FILLING: (state, action) => {\n//       delete state[action.uid].contents[action.index] \n//     }\n// })\n\nconst sandwiches = (state = initialState, action) => {\n\n  switch (action.type) {\n    case \"SET_FILLING\":\n      console.log(\"inside SET_FILLING: \", JSON.stringify(state, undefined, 2));\n      // return state;\n\n      let sandwich = state[action.uid];\n      let contents = sandwich.contents;\n      return {...state, \n        [action.uid]: {\n          ...sandwich,\n          contents: {\n            ...contents,\n            [action.index]: action.value\n          }\n        }\n      }\n    default:\n      return state;\n  }\n\n  // state[action.uid].contents[action.index] = action.value;\n  // console.log(\"inside SET_FILLING: \", JSON.stringify(state, undefined, 2));\n}\n\n\nexport default sandwiches\n","import { combineReducers } from 'redux'\nimport sandwiches from './sandwiches'\n\nexport default combineReducers({\n  sandwiches,\n})\n","export class CustomSandwichData {\n  constructor(title, numSlots, requiredFillings, optionalFillings) {\n    this.title = title;\n    this.numSlots = numSlots;\n    this.requiredFillings = requiredFillings;\n    this.optionalFillings = optionalFillings;\n    this.contents = {}\n  }\n}\n\nexport class SandwichFillingData {\n    constructor(title, isRequired, index) {\n      this.title = title;\n      this.isRequired = isRequired;\n      this.index = index;\n    }\n  }\n  ","import rootReducer from './reducers'\nimport { createStore } from 'redux';\nimport data from \"./data/all_modules\";\nimport { CustomSandwichData, SandwichFillingData } from './misc/SandwichObjects';\n\nfunction setRequiredFillings(sandwichObject) {\n    for (let i = 0; i < this.context.customSandwichData[this.props.sandwichUID].numSlots; i++) {\n        // check if there is a required filling for this spot\n        let found = false\n        for (let j = 0; j < sandwichObject.requiredFillings.length; j++) {\n            let filling = sandwichObject.requiredFillings[j];\n            if (parseInt(filling.index) == i) {\n                holderList.push(\n                    <FillingSlot key={i} index={i+1} sandwichUID={this.props.sandwichUID} filling={filling} />\n                )\n                found = true;\n                break;\n            }\n        }\n\n        if (!found) {\n            holderList.push(\n                <FillingSlot key={i} index={i+1} sandwichUID={this.props.sandwichUID} />\n            )\n        }\n\n    }\n\n}\n\nfunction createInitialReduxStoreState() {\n    let initialState = {sandwiches: {}};\n  \n    data.all_modules.forEach((value) => {\n      let optionalFillings;\n  \n      if (\"optional_teacher_fillings\" in value) {\n        optionalFillings = value.optional_teacher_fillings.map((value) => {\n          return new SandwichFillingData(value.title, false, -1);\n        });\n      } else {\n        optionalFillings = [];\n      }\n  \n      let requiredFillings;\n      if (\"required_fillings\" in value) {\n        requiredFillings = value.required_fillings.map((value) => {\n          // class_num is one-indexed, SandwichFillingData.index is zero-indexed\n          return new SandwichFillingData(value.title, true, value.class_num - 1);\n        });\n      } else {\n        requiredFillings = [];\n      }\n\n      let sandwich = new CustomSandwichData(value.title, value.numSlots, requiredFillings, optionalFillings);\n      \n      // Initialze the .contents map with required fillings\n      requiredFillings.forEach((value) => {\n          sandwich.contents[value.index] = value \n      })\n  \n      initialState.sandwiches[value.uid] = sandwich;\n    })\n  \n    console.log(\"initial state: \", initialState);\n  \n    return initialState\n  }\n  \n  \n  const store = createStore(rootReducer,createInitialReduxStoreState());\n\n  export default store;","import React, { Component, useState } from 'react';\n\nimport { connect } from 'react-redux'\nimport { setFilling } from '../../../actions'\n\n\nimport './FillingSlot.css';\n\nimport PropTypes from 'prop-types';\n\nimport ItemTypes from \"../../../constants\";\n\nimport { DropTarget } from 'react-dnd';\n\nimport AppContext from \"../../context/app_context\";\n\nimport store from '../../../store'\n\nclass FillingSlot extends React.Component {\n    render() {\n        // Grab the props injected by React DnD\n        const { connectDropTarget } = this.props;\n\n        if (this.props.fillingObject == null) {\n\n            return connectDropTarget(<div className=\"Filling-slot-container\"\n                style={{\n                    cursor: 'move',\n                }}\n            >\n                <div >\n                    EMPTY\n                </div>\n            </div>);\n\n        } else {\n            return connectDropTarget(\n                <div className={\"Filling-slot-container \" + (this.props.fillingObject.isRequired ? \"disabled\" : \"enabled\")}\n                    style={{\n                        cursor: 'move',\n                    }}\n                >\n                    <div>\n                        {this.props.fillingObject.title}\n                    </div>\n                </div>\n            );\n        }\n\n\n        // if (this.context.isSandwichSlotEmpty(this.props.index)) {\n        //     return connectDropTarget(<div className=\"Sandwich-holder-empty\"\n        //         style={{\n        //             cursor: 'move',\n        //         }}\n        //     >\n        //         <h1>+</h1>\n        //         <em>(add a sandwich!)</em>\n        //     </div>);\n        // } else {\n        //     return connectDropTarget(\n        //         <div className=\"Sandwich-holder\"\n        //             style={{\n        //                 cursor: 'move',\n        //             }}\n        //         >\n        //             <h5>#{this.props.index + 1}</h5>\n        //             <h3>{heldSandwich.title}</h3>\n        //             <p>UID: {heldSandwich.uid}</p>\n        //             <p>Tags: <em>{heldSandwich.tags.toString()}</em></p>\n        //             {(heldSandwich.uid !== -1) && <NavLink to={\"/sandwich/\" + heldSandwich.uid}>See More</NavLink>}<br />\n        //             <button type=\"button\" className=\"btn btn-warning\" onClick={() => this.context.deleteSandwichFromUserCurriculum(this.props.index)}>Remove</button>\n        //         </div>\n        //     );\n        // }\n    }\n}\n\nFillingSlot.propTypes = {\n    sandwichUID: PropTypes.number.isRequired,\n}\n\nFillingSlot.contextType = AppContext;\n\n// React DnD configuration\n\nconst fillingTarget = {\n    drop(props, monitor, component) {\n        console.log(\"FillingSlot: DROP\");\n        let data = monitor.getItem();\n        console.log(\"Data: %o\", data);\n\n        // TODO\n        // component.context.updateSandwichInUserCurriculum(props.index, data);\n        console.log(\"props.fillingIndex \", props.fillingIndex);\n\n        let fillingState = store.getState().sandwiches[props.sandwichUID].contents[props.fillingIndex];\n        if (fillingState != null && fillingState.isRequired) {\n            // Don't override required fillings\n            console.log(\"onDrop(): ignoring, because would override required filling.\");\n            return;\n        }\n\n        store.dispatch(setFilling(props.sandwichUID, props.fillingIndex, data));\n    }\n}\n\nfunction collect(connect, monitor) {\n    return {\n        connectDropTarget: connect.dropTarget(),\n    }\n}\n\nfunction mapStateToProps(state, props) {\n    let thisSandwich = state.sandwiches[props.sandwichUID];\n    let thisFilling = thisSandwich.contents[props.fillingIndex];\n    console.log(\"FillingSlot.mapStateToProps() called\"); \n    return {fillingObject: thisFilling};\n}\n\n// export default FillingSlot\n\nexport default connect(mapStateToProps)(DropTarget(ItemTypes.FILLING, fillingTarget, collect)(FillingSlot));","export const setFilling = (sandwichUID, fillingIndex, newValue) => ({\n    type: 'SET_FILLING',\n    uid: sandwichUID,\n    index: fillingIndex,\n    value: newValue,\n  })\n\n  export const deleteFilling = (sandwichUID, fillingIndex) => ({\n    type: 'DELETE_FILLING',\n    uid: sandwichUID,\n    index: fillingIndex,\n  })","import React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\n\nimport AppContext from \"../../context/app_context\";\nimport data from \"../../../data/all_modules\"\nimport FillingSlot from \"./FillingSlot\";\n\nclass SandwichFrame extends React.Component {\n    render() {\n        let holderList = []\n\n        let sandwichObject = this.context.customSandwichData[this.props.sandwichUID]\n\n        for (let i = 0; i < this.context.customSandwichData[this.props.sandwichUID].numSlots; i++) {\n            // check if there is a required filling for this spot\n            let found = false\n            // for (let j = 0; j < sandwichObject.requiredFillings.length; j++) {\n            //     let filling = sandwichObject.requiredFillings[j];\n            //     if (parseInt(filling.index) == i) {\n            //         holderList.push(\n            //             <FillingSlot key={i} index={i+1} sandwichUID={this.props.sandwichUID} filling={filling} />\n            //         )\n            //         found = true;\n            //         break;\n            //     }\n            // }\n\n            if (!found) {\n                holderList.push(\n                    <FillingSlot key={i} fillingIndex={i} sandwichUID={this.props.sandwichUID} />\n                )\n            }\n\n        }\n\n        return (\n            <>\n                SANDWICH FRAME\n                {holderList}\n            </>\n        )\n    }\n\n}\n\nSandwichFrame.propTypes = {\n    sandwichUID: PropTypes.number.isRequired\n}\n\nSandwichFrame.contextType = AppContext;\n\nexport default SandwichFrame;\n","import React, { Component } from 'react';\nimport './DraggableFilling.css';\n\nimport PropTypes from 'prop-types';\n\nimport ItemTypes from \"../../../constants\";\n\nimport { useDrag } from 'react-dnd';\n\nfunction DraggableFilling(props) {\n    const [{ isDragging }, drag] = useDrag({\n        item: { type: ItemTypes.FILLING },\n        collect: monitor => ({\n            isDragging: !!monitor.isDragging(),\n        }),\n        canDrag: () => props.canDrag,\n        begin: () => {\n            return props.filling;\n        },\n        end: (item, monitor) => {\n            console.log(\"DraggableSandwich: END DRAG. didDrop=%s; dropResult=%s.\", monitor.didDrop(), monitor.getDropResult());\n        },\n    });\n\n    return (\n        <div className={\"Draggable-filling-container \" + (props.canDrag ? \"enabled\" : \"disabled\")}\n            ref={drag}\n            style={{\n                opacity: isDragging ? 0.5 : 1,\n                cursor: 'move',\n            }}\n        >\n            <h1>{props.filling.title}</h1>\n        </div>\n    )\n}\n\nDraggableFilling.propTypes = {\n    filling: PropTypes.object.isRequired,\n    canDrag: PropTypes.bool.isRequired,\n}\n{/* \nDraggableFilling.defaultProps = {\n    data: {\n        \"uid\": -1,\n        \"title\": \"N/A\",\n        \"tags\": []\n    }\n} */}\n\nexport default DraggableFilling;","import React, { Component } from \"react\";\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types';\n\nimport AppContext from \"../../context/app_context\";\nimport data from \"../../../data/all_modules\"\nimport FillingSlot from \"./FillingSlot\";\nimport DraggableFilling from \"./DraggableFilling\";\n\nclass FillingsBank extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.isFillingPickedAlready = this.isFillingPickedAlready.bind(this);\n    }\n\n    isFillingPickedAlready(filling) {\n        console.log(\"inside is fillingpickedalready\");\n        console.log(this.props.fillingContents);\n        let pickedFillings = Object.values(this.props.fillingContents);\n        for (let i = 0; i < pickedFillings.length; i++){\n            if (pickedFillings[i].title == filling.title) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    render() {\n        console.log(\"fillingsBank: \", this.props.optionalFillings);\n\n        let fillingsList = []\n\n        console.log(this.props.sandwichUID)\n        let numOptional = this.props.optionalFillings.length;\n\n        for (let i = 0; i < numOptional; i++) {\n            let filling = this.props.optionalFillings[i]\n            fillingsList.push(\n                <DraggableFilling key={i} filling={filling} canDrag={!this.isFillingPickedAlready(filling)} />\n            )\n        }\n\n        return (\n            <>\n                Fillings Bank\n                {fillingsList}\n            </>\n        )\n    }\n\n}\n\nfunction mapStateToProps(state, ownProps) {\n    let thisSandwichData = state.sandwiches[ownProps.sandwichUID]\n    return {\n        optionalFillings: thisSandwichData.optionalFillings,\n        fillingContents: thisSandwichData.contents\n    }\n}\n\nFillingsBank.propTypes = {\n    sandwichUID: PropTypes.number.isRequired,\n}\n\nFillingsBank.contextType = AppContext;\n\nexport default connect(mapStateToProps)(FillingsBank);\n","import \"./../../styles.css\"\nimport React, { Component } from \"react\";\n\n\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\n\nimport NutritionFacts from \"../modules/NutritionFacts\";\nimport CondimentCard from \"../modules/CondimentCard\";\nimport SandwichFrame from \"../modules/sandwich/SandwichFrame\";\nimport FillingsBank from \"../modules/sandwich/FillingsBank\";\n\nimport PropTypes from 'prop-types';\n\nclass SandwichPage extends React.Component {\n    render() {\n        return (\n            <DndProvider backend={HTML5Backend}>\n            <>\n            <div className=\"container\">\n                <div className=\"row Page-title\">\n                    <div className=\"col-sm\">\n                        <h1>{this.props.sandwich.title}</h1>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-6\">\n                        <FillingsBank sandwichUID={this.props.sandwich.uid}></FillingsBank>\n                    </div>\n                    <div className=\"col-6\">\n                        <SandwichFrame sandwichUID={this.props.sandwich.uid}/>\n                    </div>\n                </div>\n                <hr/>\n                <div className=\"row\">\n                    <div className=\"col-9 text-left\">\n                        <div className=\"row\">\n                            Tags: {this.props.sandwich.tags.join(\", \")}\n                        </div>\n                        <div className=\"row\">\n                            Blurb: {this.props.sandwich.short_description}\n                        </div>\n                        <div className=\"row\">\n                            Grade versions:\n                        </div>\n                        <div className=\"row\">\n                            Related Modules:\n                        </div>\n                        <div className=\"row text-center\">\n                            <div className=\"col\">\n                                <h4> Resources:</h4>\n                                {this.props.sandwich.resources.map((resource, index) => <div className=\"container\" key={index}>\n                                    <a key={index} href={process.env.PUBLIC_URL + resource.url}>{resource.text}</a>\n                                </div>)}\n                                <div className=\"container\">\n                                    <a href={process.env.PUBLIC_URL + \"/sandwich/\" + this.props.sandwich.uid + \"/sandwich-\" + this.props.sandwich.uid + \".zip\"} className=\"btn btn-info\" role=\"button\">.ZIP File</a>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            Suggested Condiments:\n                            {this.props.sandwich.suggested_condiments ? this.props.sandwich.suggested_condiments.map((uid) => <div className=\"col-sm\" key={uid}>\n                                <CondimentCard uid={uid} />\n                            </div>) :\n                            <div className=\"col\">None</div>}\n                        </div>\n                    </div>\n\n                    <div className=\"col-3\">\n                        <NutritionFacts sandwichData={[this.props.sandwich]} />\n                    </div>\n                </div>\n\n            </div>\n            </>\n            </DndProvider>\n        )\n    }\n}\n\nSandwichPage.propTypes = {\n    sandwich: PropTypes.object.isRequired,\n}\n\nexport default SandwichPage;","var curricula_presets = {\n    \"curricula\": [\n    {\n        \"uid\": 1,\n        \"title\": \"Preset 1\",\n        \"sequence\": [1],\n        // \"sequence\": [1,2,3],\n    },\n    {\n        \"uid\": 2,\n        \"title\": \"Preset 2\",\n        \"sequence\": [1],\n        // \"sequence\": [3,2,5],\n    }],\n};\n\nexport default curricula_presets;","import React, { Component } from \"react\";\n\nimport curricula_presets from '../../data/preset_curricula';\nimport data from \"../../data/all_modules\"\n\nimport Sandwich from \"../modules/Sandwich\";\nimport AppContext from \"../context/app_context\";\n\nimport { Link } from \"react-router-dom\";\n\nclass PresetCurricula extends React.Component {\n\n    getSandwichData(uid) {\n        let sandwiches = data.all_modules;\n        for (let i = 0; i < sandwiches.length; i++) {\n            if (sandwiches[i].uid === uid) {\n                return sandwiches[i];\n            }\n        }\n\n        throw new Error(\"module uid not found in data! (uid: \" + uid + \")\");\n    }\n\n    getCurriculaData(module_uid) {\n        let curricula = curricula_presets.curricula;\n        for (let i = 0; i < curricula.length; i++) {\n            if (curricula[i].uid === module_uid) {\n                return curricula[i];\n            }\n        }\n\n        throw new Error(\"curricula uid: not found in curricula_presets.js\");\n    }\n\n    loadPresetCurriculaInUserCurricula(module_uid) {\n        console.log(\"module_uid: \" + module_uid);\n        let presetCurricula = this.getCurriculaData(module_uid);\n\n        // this.context.clearUserCurriculum();\n        for (let i = 0; i < presetCurricula.sequence.length; i++) {\n            // for (let i = 0; i < 2; i++) {\n            let sandwichUID = presetCurricula.sequence[i];\n            console.log(\"Loading curricula preset uid=%s into slot=%s.\", sandwichUID, i);\n            this.context.updateSandwichInUserCurriculum(i, this.getSandwichData(sandwichUID))\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row Page-title\">\n                    <div className=\"col-sm\">\n                        <h1>Preset Curricula</h1>\n                    </div>\n                </div>\n                {curricula_presets.curricula.map((curricula) =>\n                    <div key={curricula.uid}>\n                        <div className=\"row\">\n                            <h3>{curricula.title}</h3>\n                            <Link to=\"/builder\">\n                                <button\n                                    className=\"btn btn-info\"\n                                    onClick={() => {\n                                        this.loadPresetCurriculaInUserCurricula(curricula.uid);\n                                    }}> Use this! </button>\n                            </Link>\n                        </div>\n                        <div className=\"row\">\n                            {\n                                curricula.sequence.map((uid) =>\n                                    <div key={uid} className=\"col-sm-4\">\n                                        <Sandwich\n                                            data={this.getSandwichData(uid)}\n                                        />\n                                    </div>)\n                            }\n                        </div>\n                    </div>\n                )}\n            </div>\n        )\n    }\n}\n\nPresetCurricula.contextType = AppContext;\n\nexport default PresetCurricula;","import \"../../styles.css\"\n\nfunction Home() {\n    return (\n        <>\n            <h1 className=\"Page-title\">Welcome to the home page</h1>\n            <div>\n                On this website you'll be able to:\n                <ul>\n                    <li>Browse all available sandwich modules</li>\n                    <li>Browse preset curricula</li>\n                    <li>Create your own curricula</li>\n                </ul>\n            </div>\n        </>\n    );\n\n}\n\nexport default Home;","import React, { Component } from \"react\";\nimport Sandwich from '../modules/Sandwich';\nimport FilterableSandwichContainer from \"../modules/FilterableSandwichContainer\";\n\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\nimport \"./../../styles.css\"\n\nimport data from \"../../data/all_modules\";\n\nclass AllModules extends React.Component {\n    render() {\n        return (\n            <DndProvider backend={HTML5Backend}>\n                <>\n                    <div className=\"Page-title\">\n                        <h1>Browse All Sandwiches</h1>\n                    </div>\n                    <div>\n                        <FilterableSandwichContainer\n                            sandwichData={data}\n                            draggableMode={false}\n                        />\n                    </div>\n                </>\n            </DndProvider>\n        )\n    }\n}\n\nexport default AllModules;","import React, { Component } from \"react\";\nimport CondimentCard from \"./CondimentCard\";\nimport PropTypes from 'prop-types';\n\n// TODO(bdnwang): Later on, consider whether we should share code with\n// FilterableSandwichContainer via a higher-order-component \"FilterableContainer\" \n// or something.\nclass FilterableCondimentContainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.onFilterTextChanged = this.onFilterTextChanged.bind(this);\n\n        this.state = {\n            indicesToShow: [...Array(this.props.data.condiments.length).keys()], // indices into sandwichData, indicating which values should be displayed\n        };\n    }\n\n    isMatching(data, searchText) {\n        searchText = searchText.toLowerCase();\n        // check tags for match\n        if (data.tags.join(\" \").toLowerCase().includes(searchText)) {\n            return true;\n        }\n\n        // check title for match\n        if (data.title.toLowerCase().includes(searchText)) {\n            return true;\n        }\n\n        // TODO: add more matching conditions\n        return false;\n    }\n\n    onFilterTextChanged(e) {\n        const searchText = e.target.value;\n        let newIndicesToShow = []\n\n        // if empty search text, show all results\n        console.log(\"searchText: %s\", searchText)\n        if (searchText.trim() === \"\") {\n            console.log(\"show all\");\n\n            newIndicesToShow = [...Array(this.props.data.condiments.length).keys()];\n            this.setState({ indicesToShow: newIndicesToShow });\n            return;\n        }\n\n\n        this.props.data.condiments.forEach((value, index) => {\n            if (this.isMatching(value, searchText)) {\n                newIndicesToShow.push(index);\n            }\n        });\n\n        this.setState({ indicesToShow: newIndicesToShow });\n    }\n\n    render() {\n        let filteredModules = this.props.data.condiments.filter((value, index) => {\n            return this.state.indicesToShow.includes(index);\n        });\n\n\n        return (\n            <>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-sm-2\">\n                            Filter:\n                        </div>\n                        <div className=\"col-sm-8\">\n                            <input id=\"searchField\" type=\"text\" className=\"form-control\" placeholder=\"Add search terms!\" onChange={this.onFilterTextChanged} />\n                        </div>\n                    </div>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            {filteredModules.map((module) =>\n                                <div className=\"col-sm-4\">\n                                    <CondimentCard uid={module.uid} />\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nFilterableCondimentContainer.propTypes = {\n    data: PropTypes.object.isRequired,\n}\n\n\nexport default FilterableCondimentContainer;","import React, { Component } from \"react\";\nimport FilterableCondimentContainer from \"../modules/FilterableCondimentContainer\";\n\n\nimport \"./../../styles.css\"\n\nimport data from \"../../data/all_condiments\";\n\nclass AllCondiments extends React.Component {\n    render() {\n        return (\n                <>\n                    <div className=\"Page-title\">\n                        <h1>Browse All Condiments</h1>\n                    </div>\n                    <div>\n                        <FilterableCondimentContainer\n                            data={data}\n                        />\n                    </div>\n                </>\n        )\n    }\n}\n\nexport default AllCondiments;","import React, { Component, useState } from 'react';\nimport './SandwichHolder.css';\n\nimport PropTypes from 'prop-types';\n\nimport ItemTypes from \"../../constants\";\n\nimport { DropTarget } from 'react-dnd';\n\nimport {\n    NavLink\n} from \"react-router-dom\";\n\nimport AppContext from \"../context/app_context\";\n\n// Represents a sandwich spot in the user's curriculum.\n// Takes an index into the curriculum sandwich list as a prop.\nclass SandwichHolder extends React.Component {\n    render() {\n\n        // Grab the props injected by React DnD\n        const { connectDropTarget } = this.props;\n\n        const heldSandwich = this.context.curriculumSandwiches[this.props.index];\n       \n        if (this.context.isSandwichSlotEmpty(this.props.index)) {\n            return connectDropTarget(<div className=\"Sandwich-holder-empty\"\n                style={{\n                    cursor: 'move',\n                }}\n            >\n                <h1>+</h1>\n                <em>(add a sandwich!)</em>\n            </div>);\n        } else {\n            return connectDropTarget(\n                <div className=\"Sandwich-holder\"\n                    style={{\n                        cursor: 'move',\n                    }}\n                >\n                    <h5>#{this.props.index + 1}</h5>\n                    <h3>{heldSandwich.title}</h3>\n                    <p>UID: {heldSandwich.uid}</p>\n                    <p>Tags: <em>{heldSandwich.tags.toString()}</em></p>\n                    {(heldSandwich.uid !== -1) && <NavLink to={\"/sandwich/\" + heldSandwich.uid}>See More</NavLink>}<br />\n                    <button type=\"button\" className=\"btn btn-warning\" onClick={() => this.context.deleteSandwichFromUserCurriculum(this.props.index)}>Remove</button>\n                </div>\n            );\n        }\n    }\n}\n\nSandwichHolder.propTypes = {\n    index: PropTypes.number.isRequired,\n}\n\nSandwichHolder.contextType = AppContext;\n\n// React DnD configuration\n\nconst sandwichTarget = {\n    drop(props, monitor, component) {\n        console.log(\"SandwichHolder: DROP\");\n        let data = monitor.getItem();\n        console.log(\"Data: %o\", data);\n        component.context.updateSandwichInUserCurriculum(props.index, data);\n    }\n}\n\nfunction collect(connect, monitor) {\n    return {\n        connectDropTarget: connect.dropTarget(),\n    }\n}\n\n\nexport default DropTarget(ItemTypes.SANDWICH, sandwichTarget, collect)(SandwichHolder);","import React, { Component } from \"react\";\nimport SandwichHolder from \"../modules/SandwichHolder\";\nimport NutritionFacts from \"../modules/NutritionFacts\";\n\nimport PropTypes from 'prop-types';\n\nimport AppContext from \"../context/app_context\";\nimport data from \"../../data/all_modules\"\nimport FilterableSandwichContainer from \"../modules/FilterableSandwichContainer\";\n\n// Displays the state of the user's curriculum sandwiches, along with \n// a filterable list of all sandwiches. \n// Sandwiches from the list can be dragged and dropped into the user's \n// curriculum slots to modify the curriculum.\nclass CurriculumBuilder extends React.Component {\n    render() {\n        const holderList = []\n        for (let i = 0; i < this.props.numSlots; i++) {\n            holderList.push(\n                <div className=\"col-sm\" key={i}>\n                    <SandwichHolder\n                        index={i}/>\n                </div>)\n        }\n\n        return (\n            <>\n                <div className=\"row\">\n                    <div className=\"col\">\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-9\">\n                        <div className=\"row\">\n                            {holderList}\n                        </div>\n                    </div>\n                    <div className=\"col-3\">\n                                <NutritionFacts sandwichData={this.context.curriculumSandwiches} />\n                    </div>\n                </div>\n                <button type=\"button\" className=\"btn btn-danger\" value=\"Clear Curriculum\" onClick={this.context.clearUserCurriculum}>\n                    Clear Curriculum\n                </button>\n                <hr />\n                <FilterableSandwichContainer\n                    sandwichData={data}\n                    draggableMode={true}\n                    isSandwichDraggable={this.context.isSandwichInUserCurriculum} />\n            </>\n        )\n    }\n\n}\n\nCurriculumBuilder.propTypes = {\n}\n\nCurriculumBuilder.contextType = AppContext;\n\nexport default CurriculumBuilder;\n","import React, { Component } from \"react\";\n\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\nimport \"./../../styles.css\"\n\nimport CurriculumBuilder from \"../modules/CurriculumBuilder\";\n\nclass BuildYourOwn extends React.Component {\n    render() {\n        return (\n            <DndProvider backend={HTML5Backend}>\n                <>\n                    <div className=\"col-sm Page-title\">\n                        <h1>Build Your Own Module</h1>\n                    </div>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                        </div>\n                        <CurriculumBuilder numSlots=\"3\"/>\n                    </div>\n                </>\n            </DndProvider>\n        )\n    }\n}\n\nexport default BuildYourOwn;","import './App.css';\nimport './../styles.css';\n\nimport React, { Component } from 'react';\n\nimport Navbar from './modules/Navbar';\nimport SandwichPage from './pages/SandwichPage';\nimport PresetCurricula from './pages/PresetCurricula';\n\nimport Home from './pages/Home';\nimport AllModules from './pages/AllModules';\nimport AllCondiments from './pages/AllCondiments';\nimport BuildYourOwn from \"./pages/BuildYourOwn\";\n\nimport data from \"../data/all_modules\";\nimport AppContext from \"./context/app_context\";\nimport { Provider } from 'react-redux'\nimport store from '../store'\n\nimport { CustomSandwichData, SandwichFillingData } from '../misc/SandwichObjects';\n\nimport {\n  Route,\n  Switch,\n} from \"react-router-dom\";\n\nconst EMPTY_SANDWICH_DATA = {};\n\nfunction setElementInCurriculumSandwiches(index, newValue) {\n  return (previousState, currentProps) => {\n    let newCurriculumSandwiches = previousState.curriculumSandwiches;\n    newCurriculumSandwiches[index] = newValue;\n    return { ...previousState, curriculumSandwiches: newCurriculumSandwiches };\n  }\n}\n\n\n// TODO: refactor context stuff here\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.clearUserCurriculum = this.clearUserCurriculum.bind(this);\n    this.isSandwichInUserCurriculum = this.isSandwichInUserCurriculum.bind(this);\n    this.deleteSandwichFromUserCurriculum = this.deleteSandwichFromUserCurriculum.bind(this);\n    this.updateSandwichInUserCurriculum = this.updateSandwichInUserCurriculum.bind(this);\n    this.isSandwichSlotEmpty = this.isSandwichSlotEmpty.bind(this);\n    this.starSandwich = this.starSandwich.bind(this);\n    this.unstarSandwich = this.unstarSandwich.bind(this);\n    this.toggleStarSandwich = this.toggleStarSandwich.bind(this);\n    this.isSandwichStarred = this.isSandwichStarred.bind(this);\n\n    // filling related state stored in context\n\n    // App-wide state propagated via React Context\n    this.state = {\n      curriculumSlots: 3,\n      curriculumSandwiches: [],\n      starredSandwiches: null,\n      customSandwichData: {}\n    }\n\n    this.state.starredSandwiches = new Set()\n\n    for (let i = 0; i < this.state.curriculumSlots; i++) {\n      this.state.curriculumSandwiches.push({});\n    }\n\n    // Initialize sandwich data from presets\n    data.all_modules.forEach((value) => {\n      let optionalFillings;\n\n      if (\"optional_teacher_fillings\" in value) {\n        optionalFillings = value.optional_teacher_fillings.map((value) => {\n          return new SandwichFillingData(value.title, false, -1);\n        });\n      } else {\n        optionalFillings = [];\n      }\n\n      let requiredFillings;\n      if (\"required_fillings\" in value) {\n        requiredFillings = value.required_fillings.map((value) => {\n          // class_num is one-indexed, SandwichFillingData.index is zero-indexed\n          return new SandwichFillingData(value.title, true, value.class_num - 1);\n        });\n      } else {\n        requiredFillings = [];\n      }\n\n      let sandwich = new CustomSandwichData(value.title, value.numSlots, requiredFillings, optionalFillings);\n      this.state.customSandwichData[value.uid] = sandwich;\n    })\n\n    console.log(\"Initial Redux store state: \", store.getState());\n  }\n\n  updateFillingForSandwich(sandwichUID, fillingIndex, newValue) {\n\n  }\n\n  isSandwichStarred(uid) {\n    return this.state.starredSandwiches.has(uid)\n  }\n\n  toggleStarSandwich(uid) {\n    if (this.state.starredSandwiches.has(uid)) {\n      this.unstarSandwich(uid)\n    } else {\n      this.starSandwich(uid)\n    }\n  }\n\n  starSandwich(uid) {\n    // this.state.starredSandwiches.add(uid)\n    let newStarredSandwiches = new Set(this.state.starredSandwiches)\n    newStarredSandwiches.add(uid)\n    this.setState({ starredSandwiches: newStarredSandwiches })\n    console.log(this.state.starredSandwiches)\n  }\n\n  unstarSandwich(uid) {\n    // this.state.starredSandwiches.delete(uid)\n    let newStarredSandwiches = new Set(this.state.starredSandwiches)\n    newStarredSandwiches.delete(uid)\n    this.setState({ starredSandwiches: newStarredSandwiches })\n    // console.log(\"Unstarring \"+uid)\n    console.log(this.state.starredSandwiches)\n  }\n\n  // Must be careful with how we go about modifying the app-wide state\n  // because these mutators are called multiple times in quick succession.\n  // Because setState is asynchronous, if we don't use the reducer-esque API to\n  // modifying state (where we pass setState a function that transforms previousState and props into new state))\n  // then we risk losing changes in the batch.\n  // Good explanation: https://medium.com/@wereHamster/beware-react-setstate-is-asynchronous-ce87ef1a9cf3\n  clearUserCurriculum() {\n    for (let i = 0; i < this.state.curriculumSlots; i++) {\n      this.deleteSandwichFromUserCurriculum(i);\n    }\n  }\n\n  isSandwichInUserCurriculum(uid) {\n    for (let i = 0; i < this.state.curriculumSlots; i++) {\n      if (this.state.curriculumSandwiches[i].uid === uid) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  isSandwichSlotEmpty(index) {\n    console.log(\"isSandwichSlotEmpty(): \" + (Object.keys(this.state.curriculumSandwiches[index]).length === 0));\n    return Object.keys(this.state.curriculumSandwiches[index]).length === 0;\n  }\n\n  deleteSandwichFromUserCurriculum(index) {\n    this.updateSandwichInUserCurriculum(index, EMPTY_SANDWICH_DATA);\n  }\n\n  updateSandwichInUserCurriculum(index, newData) {\n    // Since we are actually modifying the state with thsi operation\n    // We use the reducer-y setState() interface\n    this.setState(setElementInCurriculumSandwiches(index, newData));\n  }\n\n  render() {\n    return (\n      <Provider store={store}>\n        <AppContext.Provider value={{\n          curriculumSlots: this.state.curriculumSlots,\n          curriculumSandwiches: this.state.curriculumSandwiches,\n          clearUserCurriculum: this.clearUserCurriculum,\n          isSandwichInUserCurriculum: this.isSandwichInUserCurriculum,\n          deleteSandwichFromUserCurriculum: this.deleteSandwichFromUserCurriculum,\n          updateSandwichInUserCurriculum: this.updateSandwichInUserCurriculum,\n          isSandwichSlotEmpty: this.isSandwichSlotEmpty,\n          starSandwich: this.starSandwich,\n          unstarSandwich: this.unstarSandwich,\n          toggleStarSandwich: this.toggleStarSandwich,\n          isSandwichStarred: this.isSandwichStarred,\n          customSandwichData: this.state.customSandwichData,\n        }}>\n          <div className=\"App\">\n            <header className=\"App-header\">\n              Ethical AI for Computational Action\n        </header>\n            <Navbar />\n            <Switch>\n              <Route path=\"/home\">\n                <Home />\n              </Route>\n\n\n              <Route path=\"/builder\">\n                <BuildYourOwn />\n              </Route>\n\n\n              <Route path=\"/presets\">\n                <PresetCurricula />\n              </Route>\n\n              <Route path=\"/all\">\n                <AllModules />\n              </Route>\n\n              <Route path=\"/condiments\">\n                <AllCondiments />\n              </Route>\n\n\n              {\n                // TODO: generate Routes for each module page\n                data.all_modules.map(module => {\n                  return <Route key={module.uid} path={\"/sandwich/\" + module.uid}>\n                    <SandwichPage sandwich={module} />\n                  </Route>\n                })\n              }\n\n              <Route path=\"/\">\n                <h1 className=\"Page-title\">404 - Page not found!</h1>\n              </Route>\n\n            </Switch>\n          </div>\n        </AppContext.Provider>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}