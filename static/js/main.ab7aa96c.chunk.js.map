{"version":3,"sources":["components/context/app_context.js","components/modules/Sandwich.js","components/modules/StarButton.js","components/modules/FilterableSandwichContainer.js","constants.js","components/modules/DraggableSandwich.js","components/modules/Navbar.js","data/all_condiments.js","components/modules/CondimentCard.js","reducers/sandwiches.js","reducers/sandwichBuilder.js","reducers/index.js","data/all_modules.js","misc/SandwichObjects.js","store.js","components/modules/sandwich-builder-v2/FillingBankEntry.js","components/modules/sandwich-builder-v2/FillingBank.js","components/modules/sandwich-builder-v2/FillingListEntry.js","components/modules/sandwich-builder-v2/FillingList.js","components/modules/sandwich-builder-v2/WeeklySandwichNutritionFacts.js","components/modules/sandwich-builder-v2/SandwichBuilderWeekly.js","actions/index.js","components/modules/sandwich-builder-v2/LearningGoalsDisplay.js","components/pages/SandwichPage.js","data/preset_curricula.js","components/pages/PresetCurricula.js","components/pages/Home.js","components/pages/AllModules.js","components/modules/FilterableCondimentContainer.js","components/pages/AllCondiments.js","components/modules/SandwichHolder.js","components/modules/NutritionFacts.js","components/modules/CurriculumBuilder.js","components/pages/BuildYourOwn.js","components/pages/SandwichExportPage.js","components/App.js","reportWebVitals.js","index.js"],"names":["React","createContext","Sandwich","className","this","props","data","title","short_description","tags","toString","to","uid","sandwichUID","Component","defaultProps","contextType","AppContext","StarButton","isStarred","context","isSandwichStarred","console","log","onClick","toggleStarSandwich","FilterableSandwichContainer","onFilterTextChanged","bind","onStarButtonClicked","getVisibleSandwichIndices","state","starFilter","filterText","newSandwichIndicesToShow","trim","Array","sandwichData","all_modules","length","keys","forEach","value","index","isSandwichMatching","push","filter","searchText","toLowerCase","join","includes","setState","e","target","indicesToShow","filteredModules","draggableMode","id","type","placeholder","onChange","map","module","canDrag","isSandwichDraggable","ItemTypes","SANDWICH","FILLING","DraggableSandwich","useDrag","item","collect","monitor","isDragging","begin","end","didDrop","getDropResult","drag","ref","style","opacity","cursor","Navbar","CondimentCard","condimentData","condiments","initialState","sandwiches","sandwich","contents","action","nWeeks","numWeeks","daysInWeek","JSON","stringify","undefined","newState","resetBuilder","sandwichId","createInitialBuilderStateFromSandwich","sandwichObj","dragWithinPlanList","sandwichState","sourceObj","planLists","sourceListId","draggableObj","sourceIndex","newSourceContents","from","splice","destinationIndex","newSourceObj","newSandwichState","dragBetweenPlanLists","destinationObj","destinationListId","newDestinationContents","newDestinationObj","dragWithinBankList","bankLists","dragBetweenDifferentTypedLists","sourceType","substring","destinationType","i","day","listId","bankId","Object","entries","allFillings","tuple","filling","isRequired","getDayAndWeek","planId","week","combineReducers","sandwichBuilder","destinationListType","sourceListType","sameList","weekly_hours","suggested_day","duration","suggested_week","knowledge","goals","description","subgoals","skills","attitudes","CustomSandwichData","rawJSON","resources","learningGoals","learning_goals","toothpick","drivingQuestion","driving_question","projectQuestion","project_question","fillings","SandwichFillingData","latestSuggestedFillingClassNum","fillingsList","latest","fillingObj","suggestedDay","fillingJSON","sandwichSlots","daysPerWeek","Math","floor","store","createStore","rootReducer","createInitialReduxStoreState","Container","styled","div","Title","h6","FillingBankEntry","getState","sandwichID","fillingID","draggableId","provided","draggableProps","dragHandleProps","innerRef","ContentsList","BankTitle","h3","FillingBank","displayTitle","droppableId","listID","providedDroppable","droppableProps","listIndex","FillingListEntry","providedDraggable","ListTitle","h4","DurationTotal","FillingList","totalDurationOfFillings","fillingId","WeeklySandwichNutritionFacts","builderData","connect","WeekDivider","ExportButtonContainer","SetButton","button","SandwichBuilderWeekly","weeksDaysNeedUpdate","onDragEnd","setWeekAndDays","updateWeeksLabel","updateDaysLabel","planListId","tokens","split","fetch","then","text","res","totalDaysAvailable","minRequiredDays","alert","dispatch","val","parseInt","result","destination","source","fillingListComponents","builderState","obj","parsePlanListId","finalComponents","planCol","bankListObj","bankCol","htmlFor","min","max","disabled","LearningGoalCategory","LearningGoalContent","LearningSubgoals","InfoBox","MainHeading","h1","Subheading","BuilderContainer","SandwichPage","DndProvider","backend","HTML5Backend","suggested_condiments","resource","href","process","url","curricula_presets","PresetCurricula","Error","module_uid","curricula","presetCurricula","getCurriculaData","sequence","updateSandwichInUserCurriculum","getSandwichData","loadPresetCurriculaInUserCurricula","Home","AllModules","FilterableCondimentContainer","newIndicesToShow","isMatching","AllCondiments","SandwichHolder","connectDropTarget","heldSandwich","curriculumSandwiches","isSandwichSlotEmpty","deleteSandwichFromUserCurriculum","sandwichTarget","drop","component","getItem","DropTarget","dropTarget","NutritionFacts","allTags","Set","sw","tag","add","numSandwiches","wich","getCoveredTags","CurriculumBuilder","holderList","numSlots","clearUserCurriculum","isSandwichInUserCurriculum","BuildYourOwn","ExportedContent","ExportedContentDescription","LinkTextField","ZipButton","SandwichExportPage","EMPTY_SANDWICH_DATA","App","starSandwich","unstarSandwich","curriculumSlots","starredSandwiches","customSandwichData","fillingIndex","newValue","has","newStarredSandwiches","delete","newData","previousState","currentProps","newCurriculumSandwiches","setElementInCurriculumSandwiches","Provider","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab7aa96c.chunk.js","sourcesContent":["import React from 'react';\n\nexport default React.createContext({}); ","import React, { Component } from 'react';\nimport './Sandwich.css';\n\nimport {\n    NavLink\n} from \"react-router-dom\";\n\nimport AppContext from \"../context/app_context\";\nimport PropTypes from 'prop-types';\nimport StarButton from './StarButton';\n\nclass Sandwich extends React.Component {\n\n\n    render() {\n        return (\n            <div className=\"Sandwich-container\" >\n                <h3>{this.props.data.title}</h3>\n                <p><em>{this.props.data.short_description}</em></p>\n                <p>Tags: {this.props.data.tags.toString()}</p>\n                <NavLink to={\"/sandwich/\"+this.props.data.uid}>See More</NavLink>\n                <p>UID: {this.props.data.uid}</p>\n                <StarButton sandwichUID={this.props.data.uid}/>\n            </div>\n        )\n    }\n}\n\nSandwich.propTypes = {\n    data: PropTypes.object.isRequired,\n}\n\nSandwich.defaultProps = {\n    data: {\n        \"uid\": -1,\n        \"title\": \"N/A\",\n        \"tags\": []\n    }\n}\n\nSandwich.contextType = AppContext;\n\nexport default Sandwich;","import React, { Component } from 'react';\n\nimport AppContext from \"../context/app_context\";\nimport PropTypes from 'prop-types';\n\n// function StarButton(props) {\n//     return (\n//         <AppContext.Consumer>\n        \n//         {value => \n//             value.curriculumSandwiches.array.forEach(element => \n//                 <p>a</p>\n//             )\n//             // <button className={value.isSandwichStarred(props.sandwichUID) ? \"btn primary\" : \"btn warning\"} onClick={() => value.toggleStarSandwich(props.sandwichUID)}>Star</button>}\n        \n//         </AppContext.Consumer>\n//     ) \n// }\n\nclass StarButton extends React.Component {\n    render() {\n        let isStarred = this.context.isSandwichStarred(this.props.sandwichUID)\n        console.log(this.props.sandwichUID + \": \"+isStarred.toString())\n        return (\n            <button className={isStarred ? \"btn btn-warning\" : \"btn btn-secondary\"} onClick={() => this.context.toggleStarSandwich(this.props.sandwichUID)}>{isStarred ? \"Unstar\" : \"Star\"}</button>\n        )\n    }\n}\n\nStarButton.propTypes = {\n    sandwichUID: PropTypes.number.isRequired,\n}\n\nStarButton.contextType = AppContext;\n\nexport default StarButton;","import React, { Component } from \"react\";\nimport DraggableSandwich from \"./DraggableSandwich\";\nimport Sandwich from \"./Sandwich\";\nimport PropTypes from 'prop-types';\nimport AppContext from \"../context/app_context\"\nimport './FilterableSandwichContainer.css';\n\nclass FilterableSandwichContainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.onFilterTextChanged = this.onFilterTextChanged.bind(this);\n        this.onStarButtonClicked = this.onStarButtonClicked.bind(this);\n        this.getVisibleSandwichIndices = this.getVisibleSandwichIndices.bind(this);\n\n        this.state = {\n            starFilter: false,\n            filterText: \"\",\n        };\n    }\n\n    getVisibleSandwichIndices() {\n        let newSandwichIndicesToShow = []\n\n        // Apply filterText filter\n        console.log(\"filterText: %s\", this.state.filterText)\n        if (this.state.filterText.trim() === \"\") {\n            console.log(\"show all\");\n\n            newSandwichIndicesToShow = [...Array(this.props.sandwichData.all_modules.length).keys()];\n        } else {\n            this.props.sandwichData.all_modules.forEach((value, index) => {    \n                if (this.isSandwichMatching(value, this.state.filterText)) {\n                    newSandwichIndicesToShow.push(index);\n                }\n            });\n        }\n\n        // Apply star filter\n        newSandwichIndicesToShow = newSandwichIndicesToShow.filter((index) => {\n            let uid = this.props.sandwichData.all_modules[index].uid\n            let passesStarFilter = (!this.state.starFilter || this.context.isSandwichStarred(uid))\n\n            return passesStarFilter\n        })\n\n        return newSandwichIndicesToShow\n    }\n\n    isSandwichMatching(data, searchText) {\n        searchText = searchText.toLowerCase();\n        // check tags for match\n        if (data.tags.join(\" \").toLowerCase().includes(searchText)) {\n            return true;\n        }\n\n        // check title for match\n        if (data.title.toLowerCase().includes(searchText)) {\n            return true;\n        }\n\n        // TODO: add more matching conditions\n        return false;\n    }\n\n    onStarButtonClicked() {\n        this.setState({ \n            starFilter: !this.state.starFilter,\n        });\n\n    }\n\n    onFilterTextChanged(e) {\n        const searchText = e.target.value;\n        this.setState({\n            filterText: searchText,\n        })\n    }\n\n    render() {\n        let indicesToShow = this.getVisibleSandwichIndices()\n\n        let filteredModules = this.props.sandwichData.all_modules.filter((value, index) => {\n            return indicesToShow.includes(index);\n        });\n\n        if (this.props.draggableMode) {\n            return (\n                <>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-sm-2\">\n                                Filter:\n                            </div>\n                            <div className=\"col-sm-8\">\n                                <input id=\"searchField\" type=\"text\" className=\"form-control\" placeholder=\"Add search terms!\" onChange={this.onFilterTextChanged} />\n                            </div>\n                            <div className=\"col-sm-2\">\n                                <button className={this.state.starFilter ? \"btn btn-warning\" : \"btn btn-dark\"} onClick={this.onStarButtonClicked}>{this.state.starFilter ? \"Starred Only\" : \"Starred + Unstarred\"}</button>\n                            </div>\n                        </div>\n\n                        <div className=\"Scrollable-container\">\n                            <div className=\"row\">\n                                {filteredModules.map((module) => {\n                                    let sandwichDiv = <div className=\"col-sm-4\" key={module.uid}>\n                                        <DraggableSandwich\n                                            data={module}\n                                            canDrag={!this.props.isSandwichDraggable(module.uid)}\n                                        />\n                                    </div>;\n                                    return sandwichDiv;\n                                }\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                </>\n            )\n\n\n        } else {\n            return (\n                <>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-sm-2\">\n                                Filter:\n                            </div>\n                            <div className=\"col-sm-8\">\n                                <input id=\"searchField\" type=\"text\" className=\"form-control\" placeholder=\"Add search terms!\" onChange={this.onFilterTextChanged} />\n                            </div>\n                        </div>\n                        <div className=\"container\">\n                            <div key={module.uid} className=\"row\">\n                                {filteredModules.map((module) =>\n                                    <div className=\"col-sm-4\">\n                                        <Sandwich\n                                            data={module}\n                                        />\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                </>\n            )\n        }\n    }\n}\n\nFilterableSandwichContainer.propTypes = {\n    sandwichData: PropTypes.object.isRequired,\n    draggableMode: PropTypes.bool.isRequired,\n    // TODO: this whole draggable flow is a candidate for refactoring\n    isSandwichDraggable: PropTypes.func, // a function that determines whether the sandwich with the given uid is draggable\n}\n\nFilterableSandwichContainer.contextType = AppContext\n\n\nexport default FilterableSandwichContainer;","const ItemTypes = {\n    SANDWICH: 'sandwich',\n    FILLING: 'filling,'\n};\n\nexport const FillingColors = {\n    \"req-filling\": \"#d1905a\",\n    \"top-bun\": \"#f5e042\",\n    \"bottom-bun\": \"#f5e042\",\n    \"opt-filling\": \"#57f542\",\n}\n\nexport default ItemTypes; ","import React, { Component } from 'react';\nimport './DraggableSandwich.css';\n\nimport PropTypes from 'prop-types';\n\nimport ItemTypes from \"../../constants\";\n\nimport { useDrag } from 'react-dnd';\n\nimport {\n    NavLink\n} from \"react-router-dom\";\nimport StarButton from './StarButton';\n\n// Draggable component that displays a 'thumbnail' card for the given sandwich object.\nfunction DraggableSandwich(props) {\n    const [{isDragging}, drag] = useDrag({\n        item: { type: ItemTypes.SANDWICH },\n        collect: monitor => ({\n            isDragging: !!monitor.isDragging(),\n        }),\n        canDrag: () => props.canDrag,\n        begin: () => {\n            return props.data;\n        },\n        end: (item, monitor) => {\n            console.log(\"DraggableSandwich: END DRAG. didDrop=%s; dropResult=%s.\", monitor.didDrop(), monitor.getDropResult());\n        },\n        });\n\n    return (\n        <div className={\"Draggable-sandwich-container \" + (props.canDrag ? \"enabled\" : \"disabled\")}\n            ref={drag}\n            style={{\n                opacity: isDragging ? 0.5 : 1,\n                cursor: 'move',\n            }}\n        >\n            <h3>{props.data.title}</h3>\n            <p>UID: {props.data.uid}</p>\n            <p>Tags: {props.data.tags.toString()}</p>\n            <p><NavLink to={\"/sandwich/\"+props.data.uid}>See More</NavLink></p>\n            <p><StarButton sandwichUID={props.data.uid}></StarButton></p>\n        </div>\n    )\n}\n\nDraggableSandwich.propTypes = {\n    data: PropTypes.object.isRequired,\n    canDrag: PropTypes.bool.isRequired,\n}\n\nDraggableSandwich.defaultProps = {\n    data: {\n        \"uid\": -1,\n        \"title\": \"N/A\",\n        \"tags\": []\n    }\n}\n\nexport default DraggableSandwich;","import './Navbar.css';\nimport React, { Component } from \"react\";\nimport {\n    BrowserRouter as Router,\n    NavLink\n} from \"react-router-dom\";\n\nclass Navbar extends React.Component {\n    // TODO: figure out how to get NavLinks working\n    render() {\n        return (\n                <div className=\"Navbar\">\n                    <nav>\n                    <ul>\n                        <NavLink to=\"/home\">Home</NavLink> \n                        {' '}|{' '}\n                        <NavLink to=\"/builder\">Build Your Curriculum</NavLink>\n                        {' '}|{' '}\n                        <NavLink to=\"/presets\">Preset Curriculum</NavLink>\n                        {' '}|{' '}\n                        <NavLink to=\"/all\">All Modules</NavLink>\n                        {' '}|{' '}\n                        <NavLink to=\"/condiments\">All Condiments</NavLink>\n                    </ul>\n                    </nav>\n\n                </div>\n        )\n    }\n}\n\nexport default Navbar;","var data = {\n    \"condiments\": [\n        {\n            \"uid\": 1,\n            \"title\": \"Debugging\",\n            \"short_description\": \"Scratch classroom activity that encourages transferable debugging skills.\",\n            \"tags\": [\n                \"Scratch\",\n                \"plugged\"\n            ],\n            \"resources\": [\n                {\n                    \"url\": \"/condiment/1/image.png\",\n                    \"text\": \"Sandwich picture.\",\n                },\n                {\n                    \"url\": \"/condiment/1/test.pdf\",\n                    \"text\": \"Here's a PDF!\",\n                }\n            ]\n        }, \n        {\n            \"uid\": 2,\n            \"title\": \"Design Thinking\",\n            \"short_description\": \"1 hour design thinking activity to familiarize students with the DT process.\",\n            \"tags\": [\n                \"unplugged\",\n                \"design thinking\"\n            ],\n            \"resources\": [\n                {\n                    \"url\": \"/condiment/1/image.png\",\n                    \"text\": \"Sandwich picture.\",\n                },\n                {\n                    \"url\": \"/condiment/1/test.pdf\",\n                    \"text\": \"Here's a PDF!\",\n                }\n            ]\n        },    \n        {\n            \"uid\": 3,\n            \"title\": \"Scratch Review\",\n            \"short_description\": \"A refresher for students who have seen Scratch before, but could use a warm up before jumping back into hands-on work.\",\n            \"tags\": [\n                \"Scratch\"\n            ],\n            \"resources\": [\n                {\n                    \"url\": \"/condiment/1/image.png\",\n                    \"text\": \"Sandwich picture.\",\n                },\n                {\n                    \"url\": \"/condiment/1/test.pdf\",\n                    \"text\": \"Here's a PDF!\",\n                }\n            ]\n        },    \n    ]\n};\n\nexport default data;\n","import React, { Component } from 'react';\n\nimport './CondimentCard.css';\n\nimport {\n    NavLink\n} from \"react-router-dom\";\n\nimport data from '../../data/all_condiments';\n\nimport PropTypes from 'prop-types';\n\nclass CondimentCard extends React.Component {\n    render() {\n        let condimentData = {};\n\n        data.condiments.forEach((value) => {\n            if (value.uid === this.props.uid) {\n                condimentData = value;\n            }\n        });\n\n        return (\n            <div className=\"Condiment-container\" >\n                <b>{condimentData.title}</b>\n                <p><em>{condimentData.short_description}</em></p>\n                <p>Tags: {condimentData.tags.toString()}</p>\n                <NavLink to={\"/condiment/\"+condimentData.uid}>See More</NavLink>\n                <p>UID: {condimentData.uid}</p>\n            </div>\n        )\n    }\n}\n\nCondimentCard.propTypes = {\n    uid: PropTypes.number.isRequired,\n}\n\nexport default CondimentCard;","import { createReducer } from '@reduxjs/toolkit'\n\n\n// TODO: clean this logic up: https://redux.js.org/recipes/structuring-reducers/immutable-update-patterns\nconst initialState = { \"a\": 1 };\n// const sandwiches = createReducer(initialState, {\n//     SET_FILLING: (state, action) => {\n//       state[action.uid].contents[action.index] = action.value;\n// console.log(\"inside SET_FILLING: \", JSON.stringify(state, undefined, 2));\n//     },\n//     DELETE_FILLING: (state, action) => {\n//       delete state[action.uid].contents[action.index] \n//     }\n// })\n\nconst sandwiches = (state = initialState, action) => {\n  var sandwich;\n  var contents;\n\n  sandwich = state[action.uid];\n  if (sandwich != null) {\n    contents = sandwich.contents;\n  }\n\n  switch (action.type) {\n    case \"SET_WEEKS_AND_DAYS_FOR_SANDWICH\":\n      return {...state, \n        [action.uid]: {\n          ...sandwich,\n          nWeeks: action.numWeeks,\n          daysInWeek: action.daysInWeek,\n        }\n      }\n    case \"SET_FILLING\":\n      console.log(\"inside SET_FILLING: \", JSON.stringify(state, undefined, 2));\n      // return state;\n\n      return {...state, \n        [action.uid]: {\n          ...sandwich,\n          contents: {\n            ...contents,\n            [action.index]: action.value\n          }\n        }\n      }\n    case \"DELETE_FILLING\":\n      let newState = {...state, \n        [action.uid]: {\n          ...sandwich,\n          contents: {\n            ...contents\n          }\n        }\n      };\n      delete newState[action.uid].contents[action.index]\n\n      return newState;\n    default:\n      return state;\n  }\n\n  // state[action.uid].contents[action.index] = action.value;\n  // console.log(\"inside SET_FILLING: \", JSON.stringify(state, undefined, 2));\n}\n\n\nexport default sandwiches\n","import { createReducer } from '@reduxjs/toolkit'\n\nconst sandwichBuilder = (state = {}, action) => {\n\n  switch (action.type) {\n    case \"BUILDER_RESET_SANDWICH_CONTENTS\":\n      return resetBuilder(state, action);\n    case \"BUILDER_MOVE_FILLING\":\n\n      const { sourceListId, destinationListId, sourceIndex, destinationIndex } = action;\n\n      const destinationListType = sourceListId.substring(0, 4);\n      const sourceListType = destinationListId.substring(0, 4);\n\n      const sameList = sourceListId === destinationListId;\n      const sameListType = destinationListType === sourceListType;\n\n      if (sameList) {\n        if (destinationListType == \"plan\") {\n          let newState = dragWithinPlanList(state, action);\n          console.log(\"New state: \", newState);\n          return newState;\n        } else if (destinationListType == \"bank\") {\n          return dragWithinBankList(state, action);\n        } else {\n          throw \"unrecognized list type: \" + destinationListType;\n        }\n      } else {\n        if (destinationListType == sourceListType) {\n          if (destinationListType == \"plan\") {\n            return dragBetweenPlanLists(state, action);\n          } else if (destinationListType == \"bank\") {\n            return state; // no-op, we don't allow dragging between bank lists\n          } else {\n            throw \"unrecognized list type: \" + destinationListType;\n          }\n        }\n\n        // TODO: Handle dragging between list types\n        return dragBetweenDifferentTypedLists(state, action);\n      }\n\n      throw \"should never get here\";\n    default:\n      return state;\n  }\n\n}\n\n\nfunction resetBuilder(state = {}, action) {\n    return {\n      ...state,\n      [action.sandwichId]: createInitialBuilderStateFromSandwich(action.sandwichObj),\n    }\n}\n\n\nfunction dragWithinPlanList(state, action) {\n  let sandwichState = state[action.sandwichId];\n\n  // Get the list\n  let sourceObj = sandwichState.planLists[action.sourceListId];\n\n  // Get the object that was dragged\n  let draggableObj = sourceObj.contents[action.sourceIndex];\n\n  const newSourceContents = Array.from(sourceObj.contents);\n\n  // Remove element from old index and insert at new index  \n  newSourceContents.splice(action.sourceIndex, 1);\n  newSourceContents.splice(action.destinationIndex, 0, draggableObj);\n\n  const newSourceObj = {\n    ...sourceObj,\n    contents: newSourceContents,\n  }\n\n  const newSandwichState = {\n    ...sandwichState,\n    planLists: {\n      ...sandwichState.planLists,\n      [newSourceObj.id]: newSourceObj,\n    }\n  }\n\n  return {\n    ...state,\n    [action.sandwichId]: newSandwichState, \n  };\n}\n\nfunction dragBetweenPlanLists(state, action) {\n  let sandwichState = state[action.sandwichId];\n\n\n  // Get the source list and destination list\n  let sourceObj = sandwichState.planLists[action.sourceListId];\n  let destinationObj = sandwichState.planLists[action.destinationListId];\n\n  // Get the object that was dragged\n  let draggableObj = sourceObj.contents[action.sourceIndex];\n\n\n  const newSourceContents = Array.from(sourceObj.contents);\n  const newDestinationContents = Array.from(destinationObj.contents);\n\n  // Remove element from source        \n  newSourceContents.splice(action.sourceIndex, 1);\n  // Insert element at destination\n  newDestinationContents.splice(action.destinationIndex, 0, draggableObj);\n\n  const newSourceObj = {\n    ...sourceObj,\n    contents: newSourceContents,\n  }\n\n  const newDestinationObj = {\n    ...destinationObj,\n    contents: newDestinationContents,\n  }\n\n  const newSandwichState = {\n    ...sandwichState,\n    planLists: {\n      ...sandwichState.planLists,\n      [newSourceObj.id]: newSourceObj,\n      [newDestinationObj.id]: newDestinationObj,\n    }\n  }\n\n  return {\n    ...state,\n    [action.sandwichId]: newSandwichState, \n  };\n\n}\n\nfunction dragWithinBankList(state, action) {\n  let sandwichState = state[action.sandwichId];\n\n  // Get the list\n  let sourceObj = sandwichState.bankLists[action.sourceListId];\n\n  // Get the object that was dragged\n  let draggableObj = sourceObj.contents[action.sourceIndex];\n\n  const newSourceContents = Array.from(sourceObj.contents);\n\n  // Remove element from old index and insert at new index  \n  newSourceContents.splice(action.sourceIndex, 1);\n  newSourceContents.splice(action.destinationIndex, 0, draggableObj);\n\n  const newSourceObj = {\n    ...sourceObj,\n    contents: newSourceContents,\n  }\n\n  const newSandwichState = {\n    ...sandwichState,\n    bankLists: {\n      ...sandwichState.bankLists,\n      [newSourceObj.id]: newSourceObj,\n    }\n  }\n\n  return {\n    ...state,\n    [action.sandwichId]: newSandwichState, \n  };\n}\n\nfunction dragBetweenDifferentTypedLists(state, action) {\n  const sandwichState = state[action.sandwichId];\n\n  // Get the source list and destination list\n  let sourceType = action.sourceListId.substring(0, 4);\n  let destinationType = action.destinationListId.substring(0, 4);\n\n\n  let sourceObj;\n  let destinationObj;\n\n  switch (sourceType) {\n    case \"plan\":\n      sourceObj = sandwichState.planLists[action.sourceListId];\n      break;\n    case \"bank\":\n      sourceObj = sandwichState.bankLists[action.sourceListId];\n      break;\n    default:\n      throw \"unrecognized type: \" + sourceType;\n  }\n\n  switch (destinationType) {\n    case \"plan\":\n      destinationObj = sandwichState.planLists[action.destinationListId];\n      break;\n    case \"bank\":\n      destinationObj = sandwichState.bankLists[action.destinationListId];\n      break;\n    default:\n      throw \"unrecognized type: \" + sourceType;\n  }\n\n  // Get the object that was dragged\n  let draggableObj = sourceObj.contents[action.sourceIndex];\n\n  const newSourceContents = Array.from(sourceObj.contents);\n  const newDestinationContents = Array.from(destinationObj.contents);\n\n  // Remove element from source        \n  newSourceContents.splice(action.sourceIndex, 1);\n  // Insert element at destination\n  newDestinationContents.splice(action.destinationIndex, 0, draggableObj);\n\n  const newSourceObj = {\n    ...sourceObj,\n    contents: newSourceContents,\n  }\n\n  const newDestinationObj = {\n    ...destinationObj,\n    contents: newDestinationContents,\n  }\n\n  let newSandwichState;\n  if (sourceType === \"plan\" && destinationType === \"bank\") {\n    newSandwichState = {\n      ...sandwichState,\n      planLists: {\n        ...sandwichState.planLists,\n        [newSourceObj.id]: newSourceObj,\n      },\n      bankLists: {\n        ...sandwichState.bankLists,\n        [newDestinationObj.id]: newDestinationObj,\n      }\n    }\n\n  } else if (sourceType === \"bank\" && destinationType === \"plan\") {\n    newSandwichState = {\n      ...sandwichState,\n      planLists: {\n        ...sandwichState.planLists,\n        [newDestinationObj.id]: newDestinationObj,\n      },\n      bankLists: {\n        ...sandwichState.bankLists,\n        [newSourceObj.id]: newSourceObj,\n      }\n    }\n  } else {\n    throw \"Unexpected combination of source and destination types: \" + sourceType + \", \" + destinationType;\n  }\n\n  return {\n    ...state,\n    [action.sandwichId]: newSandwichState, \n  };\n\n}\n\n\nfunction createInitialBuilderStateFromSandwich(sandwich) {\n  const state = {\n    planLists: {}, // entries for each day\n    bankLists: {}, // entries in each bank\n  }\n\n  for (let i = 0; i < sandwich.nWeeks; i++) {\n\n    for (let day = 0; day < sandwich.daysInWeek; day++) {\n      let listId = \"plan-list-\" + i + \"-\" + day;\n      state.planLists[listId] = {\n        id: listId,\n        contents: [], // filling ids\n      };\n    }\n\n    let bankId = \"bank-list-\" + i;\n    state.bankLists[bankId] = {\n      id: bankId,\n      contents: [], // filling ids\n    };\n  }\n\n  // Seed initial fillings for the list from the required fillings\n  Object.entries(sandwich.allFillings).forEach(tuple => {\n    let filling = tuple[1];\n    if (filling.isRequired) {\n      let [week, day] = filling.getDayAndWeek(sandwich.daysInWeek)\n      let planId = \"plan-list-\" + week + \"-\" + day\n      console.log(planId)\n      state.planLists[planId].contents.push(filling.uid);\n    }\n  })\n\n  // Seed the bank with optional fillings\n  Object.entries(sandwich.allFillings).forEach(tuple => {\n    let filling = tuple[1];\n    if (!filling.isRequired) {\n      let [week, day] = filling.getDayAndWeek(sandwich.daysInWeek)\n      let bankId = \"bank-list-\" + week;\n      console.log(bankId)\n      console.log(state.bankLists)\n      state.bankLists[bankId].contents.push(filling.uid);\n    }\n  })\n\n  return state;\n}\n\n\n\nexport {sandwichBuilder, createInitialBuilderStateFromSandwich}\n","import { combineReducers } from 'redux'\nimport sandwiches from './sandwiches'\nimport { sandwichBuilder } from './sandwichBuilder'\n\n\nexport default combineReducers({\n  sandwiches, sandwichBuilder\n})\n","var data = {\n    \"all_modules\": [\n        {\n            \"uid\": 1,\n            \"title\": \"Cities of the Future\",\n            \"short_description\": \"Students envision what their communities will look like in the future, and create demonstrations that incorporate automation.\",\n            \"tags\": [\n                \"algorithms\",\n                \"Scratch\",\n                \"plugged\"\n            ],\n            \"toothpick\": \"Creating an interactive public art exhibit using AI tools.\",\n            \"driving_question\": \"driving question todo\",\n            \"project_question\": \"project question todo\",\n            \"numWeeks\": 1,\n            \"daysInWeek\": 20,\n            \"resources\": [\n                {\n                    \"url\": \"/sandwich/1/image.png\",\n                    \"text\": \"Sandwich picture.\",\n                },\n                {\n                    \"url\": \"/sandwich/1/test.pdf\",\n                    \"text\": \"Here's a PDF!\",\n                }\n            ],\n            weekly_hours: [5, 5, 5],\n            // TODO: think about how to represent fillings. Will they be stored in another file and linked via id?\n            // For now, view these entries as stubs.\n            \"fillings\": [\n                {\n                    id: \"filling-launch\",\n                    title: \"Project Launch\",\n                    type: \"top-bun\",\n                    isRequired: true,\n                    suggested_day: 0,\n                    duration: 15,\n                },\n                {\n                    id: \"filling-intro-to-qft\",\n                    title: \"Intro to QFT\",\n                    type: \"top-bun\",\n                    isRequired: true,\n                    suggested_day: 5,\n                    duration: 15,\n                },\n                {\n                    id: \"filling-intro-machine-percept\",\n                    title: \"Intro to machine perception\",\n                    type: \"filling\",\n                    isRequired: true,\n                    suggested_day: 3,\n                    duration: 15,\n\n                },\n                {\n                    id: \"filling-comm-preso\",\n                    title: \"Community Presentation\",\n                    type: \"bottom-bun\",\n                    isRequired: true,\n                    suggested_week: 0,\n                    suggested_day: 8,\n                    duration: 15,\n\n                },\n                {\n                    id: \"filling-debugging\",\n                    title: \"Intro to Debugging\",\n                    type: \"filling\",\n                    isRequired: false,\n                    suggested_day: 2,\n                    duration: 15,\n\n                },\n                {\n                    id: \"filling-fine-tuning-models\",\n                    title: \"Fine-tuning models\",\n                    type: \"filling\",\n                    isRequired: false,\n                    suggested_day: 6,\n                    duration: 15,\n\n                },\n                {\n                    id: \"filling-testing-models\",\n                    title: \"Testing your model\",\n                    type: \"filling\",\n                    isRequired: false,\n                    suggested_day: 7,\n                    duration: 15,\n\n                },\n                {\n                    id: \"filling-bias\",\n                    title: \"Bias activity\",\n                    type: \"filling\",\n                    isRequired: false,\n                    suggested_day: 1,\n                    duration: 15,\n\n                }\n\n            ],\n            \"learning_goals\": {\n                knowledge: { // 1st level category\n                    title: \"Knowledge\",\n                    goals: [ // 2nd level category\n                        {\n                            title: \"Perception\", // atomic learning goal\n                            type: \"AI\",\n                            description: \"Explain how images &/or audio is perceived from the surroundings and represented digitally in a computer.\",\n                            subgoals: [ // learning goal subgoals\n                                \"Computers used sensors to perceive the world around them: cameras are used to sense images and microphones are used to sense sounds from the environment.\",\n                                \"Images are encoded as 2D arrays of pixels, where each pixel is a number indicating the brightness of that piece of the image, or an RGB value indicating the brightness of the red, green, and blue components of that piece\",\n                                \"Sounds are digitally encoded by sampling the waveform at discrete points (typically several thousand samples per second), yielding a series of numbers.\",\n\n                            ]\n                        },\n                        {\n                            title: \"Learning\",\n                            type: \"AI\",\n                            description: \"Explain how machines classify two different types of media from a dataset. \",\n                            subgoals: [\n                                \"Computers take collections of media (such as images) as input datasets.\",\n                                \"Computers learn to identify visual features in the images to learn to form classes or categories of images from this training data.\",\n                            ]\n                        },\n                        {\n                            title: \"Natural Interaction\",\n                            type: \"AI\",\n                            description: \"Explain how humans and machines interact with each other and the kinds of knowledge that machines require to interact with humans\",\n                            subgoals: [\n                                \"Identify what data computers use to interact with humans\",\n                            ]\n                        }\n                    ]\n\n                },\n                skills: {\n                    title: \"Skills\",\n                    goals: [\n                        {\n                            title: \"Stakeholders\",\n                            type: \"DT\",\n                            description: \"Identify stakeholders and their needs and goals. Gather information from users and other sources that will help them understand the experiences, emotions, and motivations of users.\",\n                            subgoals: [],\n                        }\n                    ]\n                },\n                attitudes: {\n                    title: \"Attitudes\",\n                    goals: [],\n                }\n            },\n            \"suggested_condiments\": [1, 2],\n            \"example_student_projects\": [\n                {\n                    \"title\": \"Example Student Project 1\",\n                    \"url\": \"/studentproject/1\"\n                }\n            ]\n        },\n        {\n            \"uid\": 2,\n            \"title\": \"Interactive Public Art\",\n            \"short_description\": \"Students explore AI tools that meld creativity and technology and partner with stakeholders in their community to design and create a public art installation.\",\n            \"tags\": [\n                \"algorithms\",\n                \"Scratch\",\n                \"plugged\"\n            ],\n            \"toothpick\": \"Creating an interactive public art exhibit using AI tools.\",\n            \"driving_question\": \"driving question todo\",\n            \"project_question\": \"project question todo\",\n            \"learning_goals\": {\n                knowledge: { // 1st level category\n                    title: \"Knowledge\",\n                    goals: [ // 2nd level category\n                        {\n                            title: \"Perception\", // atomic learning goal\n                            type: \"AI\",\n                            description: \"Explain how images &/or audio is perceived from the surroundings and represented digitally in a computer.\",\n                            subgoals: [ // learning goal subgoals\n                                \"Computers used sensors to perceive the world around them: cameras are used to sense images and microphones are used to sense sounds from the environment.\",\n                                \"Images are encoded as 2D arrays of pixels, where each pixel is a number indicating the brightness of that piece of the image, or an RGB value indicating the brightness of the red, green, and blue components of that piece\",\n                                \"Sounds are digitally encoded by sampling the waveform at discrete points (typically several thousand samples per second), yielding a series of numbers.\",\n\n                            ]\n                        },\n                        {\n                            title: \"Learning\",\n                            type: \"AI\",\n                            description: \"Explain how machines classify two different types of media from a dataset. \",\n                            subgoals: [\n                                \"Computers take collections of media (such as images) as input datasets.\",\n                                \"Computers learn to identify visual features in the images to learn to form classes or categories of images from this training data.\",\n                            ]\n                        },\n                        {\n                            title: \"Natural Interaction\",\n                            type: \"AI\",\n                            description: \"Explain how humans and machines interact with each other and the kinds of knowledge that machines require to interact with humans\",\n                            subgoals: [\n                                \"Identify what data computers use to interact with humans\",\n                            ]\n                        }\n                    ]\n\n                },\n                skills: {\n                    title: \"Skills\",\n                    goals: [\n                        {\n                            title: \"Stakeholders\",\n                            type: \"DT\",\n                            description: \"Identify stakeholders and their needs and goals. Gather information from users and other sources that will help them understand the experiences, emotions, and motivations of users.\",\n                            subgoals: [],\n                        }\n                    ]\n                },\n                attitudes: {\n                    title: \"Attitudes\",\n                    goals: [ {\n                        title: \"Students will identify more as AI creators\",\n                        type: \"\",\n                        description: \"\",\n                        subgoals: [],\n                    }],\n                }\n            },\n            \"numWeeks\": 5,\n            \"daysInWeek\": 3,\n            \"resources\": [\n                {\n                    \"url\": \"/sandwich/1/image.png\",\n                    \"text\": \"Sandwich picture.\",\n                },\n                {\n                    \"url\": \"/sandwich/1/test.pdf\",\n                    \"text\": \"Here's a PDF!\",\n                }\n            ],\n            weekly_hours: [5, 5, 5],\n            // TODO: think about how to represent fillings. Will they be stored in another file and linked via id?\n            // For now, view these entries as stubs.\n            \"fillings\": [\n                {\n                    id: \"filling-launch\",\n                    title: \"Project Launch\",\n                    type: \"top-bun\",\n                    isRequired: true,\n                    suggested_day: 0,\n                    duration: 15,\n                },\n                {\n                    id: \"filling-intro-to-qft\",\n                    title: \"Intro to QFT\",\n                    type: \"top-bun\",\n                    isRequired: true,\n                    suggested_day: 5,\n                    duration: 15,\n                },\n                {\n                    id: \"filling-intro-machine-percept\",\n                    title: \"Intro to machine perception\",\n                    type: \"filling\",\n                    isRequired: true,\n                    suggested_day: 3,\n                    duration: 15,\n\n                },\n                {\n                    id: \"filling-comm-preso\",\n                    title: \"Community Presentation\",\n                    type: \"bottom-bun\",\n                    isRequired: true,\n                    suggested_week: 0,\n                    suggested_day: 8,\n                    duration: 15,\n\n                },\n                {\n                    id: \"filling-debugging\",\n                    title: \"Intro to Debugging\",\n                    type: \"filling\",\n                    isRequired: false,\n                    suggested_day: 2,\n                    duration: 15,\n\n                },\n                {\n                    id: \"filling-fine-tuning-models\",\n                    title: \"Fine-tuning models\",\n                    type: \"filling\",\n                    isRequired: false,\n                    suggested_day: 6,\n                    duration: 15,\n\n                },\n                {\n                    id: \"filling-testing-models\",\n                    title: \"Testing your model\",\n                    type: \"filling\",\n                    isRequired: false,\n                    suggested_day: 7,\n                    duration: 15,\n\n                },\n                {\n                    id: \"filling-bias\",\n                    title: \"Bias activity\",\n                    type: \"filling\",\n                    isRequired: false,\n                    suggested_day: 1,\n                    duration: 15,\n\n                }\n\n            ],\n            \"suggested_condiments\": [1, 2],\n            \"example_student_projects\": [\n                {\n                    \"title\": \"Example Student Project 1\",\n                    \"url\": \"/studentproject/1\"\n                }\n            ]\n        },\n        // {\n        //     \"uid\": 2,\n        //     \"title\": \"Creativity & AI\",\n        //     \"numSlots\": 10,\n        //     \"tags\": [\n        //         \"algorithms\",\n        //         \"Scratch\",\n        //         \"Teachable Machines\"\n        //     ],\n        //     \"resources\": [],\n        //     \"suggested_condiments\": [2],\n        //     \"optional_teacher_fillings\" : [ // teacher-curated fillings\n        //         {\n        //             \"title\": \"Fine-tuning models\",\n        //             \"difficulty\": \"intermediate\",\n        //             \"ordering\": [8, 12],\n        //         },\n        //         {\n        //             \"title\": \"Testing your model\",\n        //             \"difficulty\": \"beginner\",\n        //         },\n        //         {\n        //             \"title\": \"Bias activity\",\n        //             \"difficulty\": \"beginner\",\n        //         }\n\n        //     ],\n        // },\n        // {\n        //     \"uid\": 3,\n        //     \"title\": \"Debugging Detective\",\n        //     \"numSlots\": 10,\n        //     \"tags\": [\n        //         \"debugging\",\n        //         \"Scratch\",\n        //         \"human skills\"\n        //     ],\n        //     \"resources\": [],\n        //     \"suggested_condiments\": [1,3],\n        // },\n        // {\n        //     \"uid\": 4,\n        //     \"title\": \"DAILY AI\",\n        //     \"numSlots\": 10,\n        //     \"tags\": [\n        //         \"AI\"\n        //     ],\n        //     \"resources\": [],\n        //     \"suggested_condiments\": [1],\n        // },\n        // {\n        //     \"uid\": 5,\n        //     \"title\": \"Design Thinking Bootcamp\",\n        //     \"numSlots\": 10,\n        //     \"tags\": [\n        //         \"human skills\"\n        //     ],\n        //     \"resources\": [],\n        // },\n        // {\n        //     \"uid\": 6,\n        //     \"title\": \"Robot Race\",\n        //     \"numSlots\": 10,\n        //     \"tags\": [\n        //         \"debugging\",\n        //         \"Scratch\",\n        //         \"human skills\"\n        //     ],\n        //     \"resources\": [],\n        //     \"suggested_condiments\": [3],\n        // },\n        // {\n        //     \"uid\": 7,\n        //     \"title\": \"Seafloor Cleanup\",\n        //     \"numSlots\": 10,\n        //     \"tags\": [\n        //         \"debugging\",\n        //         \"Scratch\",\n        //         \"human skills\"\n        //     ],\n        //     \"resources\": [],\n        // }\n    ]\n};\n\nexport default data;\n","class CustomSandwichData {\n\n  constructor(rawJSON) {\n    this.uid = rawJSON.uid;\n    this.title = rawJSON.title;\n    this.tags = rawJSON.tags;\n    this.resources = rawJSON.resources;\n\n    this.learningGoals = rawJSON.learning_goals;\n    this.toothpick = rawJSON.toothpick;\n    this.drivingQuestion = rawJSON.driving_question;\n    this.projectQuestion = rawJSON.project_question;\n\n    this.allFillings = {}; // filling_id -> SandwichFillingData map \n    if (\"fillings\" in rawJSON) {\n      rawJSON.fillings.forEach((rawJSON) => {\n        let filling = new SandwichFillingData(rawJSON);\n        this.allFillings[filling.uid] = filling;\n      });\n    }\n\n    this.nWeeks = rawJSON.numWeeks; // number of weeks in the curriculum\n    this.daysInWeek = rawJSON.daysInWeek;\n\n    // Array of the contents of each week\n    // this.contents[i] = an ordered list of the fillings in week i\n    this.contents = [];\n    for (let i = 0; i < this.nWeeks; i++) {\n      this.contents.push([]);\n    }\n\n    // bind instance functions\n    this.latestSuggestedFillingClassNum = this.latestSuggestedFillingClassNum.bind(this);\n  }\n\n  // Returns the latest suggested day of a filling (0-indexed)\n  latestSuggestedFillingClassNum() {\n    let fillingsList = Object.entries(this.allFillings);\n\n    if (fillingsList.length == 0) {\n      return -1;\n    } \n    let latest = -1;\n    fillingsList.forEach(filling => {\n      const fillingObj = filling[1];\n      if (fillingObj.suggestedDay > latest) {\n        latest = fillingObj.suggestedDay;\n      }\n    });\n\n    return latest;\n  }\n}\n\nclass SandwichFillingData {\n  // sandwich slots: list containing the number of filling slots allocated to each week of \n  constructor(fillingJSON, sandwichSlots) {\n    this.uid = fillingJSON.id;\n    this.title = fillingJSON.title;\n    this.isRequired = fillingJSON.isRequired;\n    this.type = fillingJSON.type;\n\n    // suggestedDay refers to the suggested order in the class sequence for this filling\n    this.suggestedDay = fillingJSON.suggested_day;\n\n    this.duration = fillingJSON.duration;\n\n  }\n\n  // Given a weekly schedule where the class meets {daysPerWeeks} days per week,\n  // return the week num (0-indexed) and day num in that week (0-indexed) suggested for this filling \n  getDayAndWeek(daysPerWeek) {\n    let week = Math.floor(this.suggestedDay / daysPerWeek);\n    let day = this.suggestedDay - (week * daysPerWeek);\n    return [week, day];\n  }\n\n\n\n}\n\n\nexport { CustomSandwichData, SandwichFillingData };","import rootReducer from './reducers'\nimport { createStore } from 'redux';\nimport data from \"./data/all_modules\";\nimport { CustomSandwichData, SandwichFillingData } from './misc/SandwichObjects';\nimport { createInitialBuilderStateFromSandwich } from './reducers/sandwichBuilder'\n\nfunction setRequiredFillings(sandwichObject) {\n    for (let i = 0; i < this.context.customSandwichData[this.props.sandwichUID].numSlots; i++) {\n        // check if there is a required filling for this spot\n        let found = false\n        for (let j = 0; j < sandwichObject.requiredFillings.length; j++) {\n            let filling = sandwichObject.requiredFillings[j];\n            if (parseInt(filling.index) == i) {\n                holderList.push(\n                    <FillingSlot key={i} index={i+1} sandwichUID={this.props.sandwichUID} filling={filling} />\n                )\n                found = true;\n                break;\n            }\n        }\n\n        if (!found) {\n            holderList.push(\n                <FillingSlot key={i} index={i+1} sandwichUID={this.props.sandwichUID} />\n            )\n        }\n\n    }\n\n}\n\n\nfunction createInitialReduxStoreState() {\n    let initialState = {sandwiches: {}, sandwichBuilder: {}};\n  \n    data.all_modules.forEach((rawJSON) => {\n      let sandwich = new CustomSandwichData(rawJSON);\n      initialState.sandwiches[sandwich.uid] = sandwich;\n      initialState.sandwichBuilder[sandwich.uid] = createInitialBuilderStateFromSandwich(sandwich);\n    })\n  \n\n    console.log(\"initial redux store state: \", initialState);\n  \n    return initialState\n  }\n  \n  \n  const store = createStore(rootReducer,createInitialReduxStoreState());\n\n  export default store;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Draggable } from 'react-beautiful-dnd';\nimport store from '../../../store';\n\n\nconst Container = styled.div`\n    border: 1px solid lightgray;\n    margin-bottom: 8px;\n    padding: 5px;\n    background-color: white;\n`;\n\nconst Title = styled.h6`\n    text-style: bold;\n`;\n\n\n\nclass FillingBankEntry extends React.Component {\n    render() {\n        let sandwich = store.getState().sandwiches[this.props.sandwichID];\n        let filling = sandwich.allFillings[this.props.fillingID];\n\n        return (\n            <Draggable draggableId={this.props.fillingID} index={this.props.index}>\n                {(provided) => (\n                    <Container\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        ref={provided.innerRef}\n                    >\n                        <Title>{filling.title}</Title>\n                        <div>\n                            Sandwich ID: {this.props.sandwichID}\n                        </div>\n                        <div>\n                            Filling ID: {this.props.fillingID}\n                        </div>\n                        <div>\n                            Suggested Day: {filling.suggestedDay}\n                        </div>\n                        <b>\n                            {filling.duration + \" min.\"}\n                        </b>\n                    </Container>\n\n                )\n\n                }\n            </Draggable>\n        )\n    }\n}\n\nFillingBankEntry.propTypes = {\n    sandwichID: PropTypes.number.isRequired,\n    fillingID: PropTypes.string.isRequired,\n    index: PropTypes.number.isRequired,\n}\n\nexport default FillingBankEntry;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport FillingBankEntry from './FillingBankEntry';\nimport styled from 'styled-components';\nimport { Droppable } from 'react-beautiful-dnd';\n\nconst Container = styled.div`\n    border: 1px solid gray;\n    padding: 10px;\n`;\n\nconst ContentsList = styled.div`\n\n`;\n\nconst BankTitle = styled.h3`\n/* Make text unselectable*/ \n    -webkit-touch-callout: none; /* iOS Safari */\n    -webkit-user-select: none; /* Safari */\n    -khtml-user-select: none; /* Konqueror HTML */\n    -moz-user-select: none; /* Old versions of Firefox */\n    -ms-user-select: none; /* Internet Explorer/Edge */\n    user-select: none; /* Non-prefixed version, currently\n                            supported by Chrome, Edge, Opera and Firefox */\n`;\n\nclass FillingBank extends React.Component {\n    render() {\n        return (\n            <Container>\n                <BankTitle>{this.props.displayTitle}</BankTitle>\n\n\n                <Droppable droppableId={this.props.listID}>\n                    {(providedDroppable) => {\n                        return (\n                            <ContentsList\n                                ref={providedDroppable.innerRef}\n                                {...providedDroppable.droppableProps}>\n\n                                {this.props.contents.map((fillingID, listIndex) =>\n                                    <FillingBankEntry \n                                        key={fillingID} \n                                        fillingID={fillingID} \n                                        sandwichID={this.props.sandwich.uid} \n                                        index={listIndex}\n                                    />\n\n                                )}\n                                {providedDroppable.placeholder}\n                            </ContentsList>\n                        )\n                    }\n                    }\n                </Droppable>\n            </Container>\n        )\n    }\n}\n\nFillingBank.propTypes = {\n    displayTitle: PropTypes.string.isRequired,\n    listID: PropTypes.string.isRequired,\n    contents: PropTypes.array.isRequired,\n    sandwichId: PropTypes.number.isRequired,\n}\n\nexport default FillingBank;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Draggable } from 'react-beautiful-dnd';\nimport store from '../../../store'\n\nconst Container = styled.div`\n    border: 1px solid lightgray;\n    margin-bottom: 8px;\n    padding: 5px;\n    background-color: white;\n`;\n\nconst Title = styled.h6`\n    text-style: bold;\n`;\n\n\nclass FillingListEntry extends React.Component {\n    render() {\n        let sandwich = store.getState().sandwiches[this.props.sandwichID];\n        let filling = sandwich.allFillings[this.props.fillingID];\n\n        return (\n            <Draggable draggableId={this.props.fillingID} index={this.props.index}>\n                {providedDraggable => {\n                    return (<Container\n                        {...providedDraggable.draggableProps}\n                        {...providedDraggable.dragHandleProps}\n                        ref={providedDraggable.innerRef}\n                    >\n                        <Title>\n                            {filling.title}\n                        </Title>\n                        <div>\n                            Sandwich ID: {this.props.sandwichID}\n                        </div>\n                        <div>\n                            Filling ID: {this.props.fillingID}\n                        </div>\n                        <b>\n                            {filling.duration + \" min.\"}\n                        </b>\n                    </Container>);\n                }}\n            </Draggable>\n        )\n    }\n}\n\nFillingListEntry.propTypes = {\n    sandwichID: PropTypes.number.isRequired,\n    fillingID: PropTypes.string.isRequired,\n    index: PropTypes.number.isRequired,\n}\n\nexport default FillingListEntry;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport FillingListEntry from './FillingListEntry';\nimport { Droppable } from 'react-beautiful-dnd';\n\nconst Container = styled.div`\n    border: 1px dashed gray;\n    padding: 10px;\n    margin-bottom: 20px;\n`;\n\nconst ContentsList = styled.div`\n\n`;\n\nconst ListTitle = styled.h4`\n    /* Make text unselectable*/ \n    -webkit-touch-callout: none; /* iOS Safari */\n    -webkit-user-select: none; /* Safari */\n    -khtml-user-select: none; /* Konqueror HTML */\n    -moz-user-select: none; /* Old versions of Firefox */\n    -ms-user-select: none; /* Internet Explorer/Edge */\n    user-select: none; /* Non-prefixed version, currently\n                            supported by Chrome, Edge, Opera and Firefox */\n`;\n\nconst DurationTotal = styled.div`\n    font-weight: bold;\n    margin-bottom: 10px;\n\n    /* Make text unselectable*/ \n    -webkit-touch-callout: none; /* iOS Safari */\n    -webkit-user-select: none; /* Safari */\n    -khtml-user-select: none; /* Konqueror HTML */\n    -moz-user-select: none; /* Old versions of Firefox */\n    -ms-user-select: none; /* Internet Explorer/Edge */\n    user-select: none; /* Non-prefixed version, currently\n                            supported by Chrome, Edge, Opera and Firefox */\n`;\n\nclass FillingList extends React.Component {\n\n    render() {\n        let totalDurationOfFillings = 0;\n        this.props.contents.forEach(fillingId => {\n            totalDurationOfFillings += this.props.sandwich.allFillings[fillingId].duration;\n        });\n\n        return (\n            <Container>\n                <ListTitle>{this.props.displayTitle}</ListTitle>\n                <DurationTotal>{\"Total: \" + totalDurationOfFillings + \" min.\"}</DurationTotal>\n                <Droppable droppableId={this.props.listID}>\n                    {(providedDroppable) => {\n                        return (\n                            <ContentsList\n                                ref={providedDroppable.innerRef}\n                                {...providedDroppable.droppableProps}>\n\n                                {this.props.contents.map((fillingID, listIndex) =>\n                                    <FillingListEntry\n                                        sandwichID={this.props.sandwich.uid}\n                                        fillingID={fillingID}\n                                        key={fillingID}\n                                        index={listIndex}\n                                    />\n                                )}\n                                {providedDroppable.placeholder}\n                            </ContentsList>\n                        )\n                    }\n                    }\n                </Droppable>\n            </Container>\n        )\n    }\n}\n\nFillingList.propTypes = {\n    displayTitle: PropTypes.string.isRequired,\n    listID: PropTypes.string.isRequired,\n    sandwich: PropTypes.object.isRequired,\n    contents: PropTypes.array.isRequired,\n}\n\nexport default FillingList;","import React, { Component } from \"react\";\nimport { connect } from 'react-redux'\n\nimport './WeeklySandwichNutritionFacts.css';\nimport PropTypes from 'prop-types';\n\nclass WeeklySandwichNutritionFacts extends React.Component {\n    \n\n    render() {\n        // Sum up durations of selected fillings\n        let totalDurationOfFillings = 0;\n        console.log(\"sdad:\", this.props.builderData);\n        Object.entries(this.props.builderData.planLists).forEach(tuple => {\n            let planList = tuple[1];\n            planList.contents.forEach(fillingId => {\n                totalDurationOfFillings += this.props.sandwichData.allFillings[fillingId].duration;\n            });\n        });\n\n\n        return (<div className=\"container border border-nutrition-outline\">\n            <div className=\"row border-bottom border-nutrition-hr-thick\">\n                <div className=\"col-sm border-bottom\">\n                    <h3>Nutrition Facts</h3>\n                </div>\n            </div>\n            <div className=\"row border-bottom border-nutrition-hr-med text-left\">\n                <div className=\"col-9\">\n                    Total class time (hrs):\n                </div>\n                <div className=\"col-3\">\n                    <b>{totalDurationOfFillings/60}</b>\n                </div>\n            </div>\n            <div className=\"row border-bottom border-nutrition-hr-thin text-left\">\n                <div className=\"col-12\">\n                    Tags covered:\n                </div>\n                <div className=\"col-12\" style={{\"fontSize\": \"12px\"}}>\n                    <em>\n                        {this.props.sandwichData.tags.join(\", \")}\n                    </em>\n                </div>\n            </div>\n            <div className=\"row border-bottom border-nutrition-hr-thin text-left\">\n                <div className=\"col-9\">\n                    Artificial Intelligence\n                </div>\n                <div className=\"col-3\">\n                    75%\n                </div>\n            </div>\n            <div className=\"row border-bottom border-nutrition-hr-thin text-left\">\n                <div className=\"col-9\">\n                    Computational Thinking\n                </div>\n                <div className=\"col-3\">\n                    90%\n                </div>\n            </div>\n            <div className=\"row border-bottom border-nutrition-hr-med text-left\">\n                <div className=\"col-9\">\n                    Design Thinking\n                </div>\n                <div className=\"col-3\">\n                    50%\n                </div>\n            </div>\n            <div className=\"row border-bottom border-nutrition-hr-thin text-left small-text\">\n                <div className=\"col-9\">\n                    Creativity\n                </div>\n                <div className=\"col-3\">\n                    Yes\n                </div>\n            </div>\n            <div className=\"row border-bottom border-nutrition-hr-thin text-left small-text\">\n                <div className=\"col-9\">\n                    Collaboration\n                </div>\n                <div className=\"col-3\">\n                    Yes\n                </div>\n            </div>\n            <div className=\"row border-nutrition-hr-thin text-left small-text\">\n                <div className=\"col-9\">\n                    Reflection\n                </div>\n                <div className=\"col-3\">\n                    Yes\n                </div>\n            </div>\n            \n        </div>)\n    }\n}\n\n\nfunction mapStateToProps(state, props) {\n    console.log(\"state\", state);\n    return {\n        builderData: state.sandwichBuilder[props.sandwichId],\n        sandwichData: state.sandwiches[props.sandwichId],\n    };\n}\n\nWeeklySandwichNutritionFacts.propTypes = {\n    sandwichId: PropTypes.number.isRequired,\n}\n\nexport default connect(mapStateToProps)(WeeklySandwichNutritionFacts);","import React, { Component } from \"react\";\nimport { connect } from 'react-redux'\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport {\n    NavLink\n} from \"react-router-dom\";\n\nimport FillingBank from \"./FillingBank\";\nimport FillingList from \"./FillingList\";\n\nimport PropTypes from 'prop-types';\n\nimport { builderMoveFilling, setWeekAndDays, builderResetSandwichContents } from '../../../actions'\nimport WeeklySandwichNutritionFacts from \"./WeeklySandwichNutritionFacts\";\n\nimport styled from 'styled-components';\nimport store from \"../../../store\";\n\n\nconst WeekDivider = styled.h3`\n    margin-top: 20px;\n    margin-bottom: 10px;\n    border-bottom: 5px solid black;\n    text-align: left;\n    // padding-left: 10px;\n    padding-bottom: 5px;\n`\n\nconst ExportButtonContainer = styled.div`\n    padding: 10px;\n`;\n\nconst SetButton = styled.button`\n    margin: auto;\n`;\n\nclass SandwichBuilderWeekly extends React.Component {\n\n    // Parse a plan id string of the format: \"plan-list-{week}-{day}\"\n    // into [week, day]\n    parsePlanListId(planListId) {\n        let tokens = planListId.split(\"-\");\n        return [tokens[2], tokens[3]];\n    }\n\n    constructor(props) {\n        super(props);\n\n        let sandwich = store.getState().sandwiches[props.sandwichId];\n\n        this.state = {\n            nWeeks: sandwich.nWeeks,\n            daysPerWeek: sandwich.daysInWeek,\n            weeksDaysNeedUpdate: false,\n        };\n\n        // Bind class functions\n        this.onDragEnd = this.onDragEnd.bind(this);\n        this.setWeekAndDays = this.setWeekAndDays.bind(this);\n        this.updateWeeksLabel = this.updateWeeksLabel.bind(this);\n        this.updateDaysLabel = this.updateDaysLabel.bind(this);\n\n    }\n\n    makeTestBackendRequest() {\n        const url = \"/test\";\n        fetch(url)\n            .then(data => { return data.text() })\n            .then(res => { console.log(\"http response: \", res) });\n    }\n\n    setWeekAndDays() {\n        console.log(\"setWeekAndDays() called: \", this.state.nWeeks, this.state.daysPerWeek);\n\n        const totalDaysAvailable = this.state.nWeeks * this.state.daysPerWeek;\n        console.log(\"sandwich: \", store.getState().sandwiches[this.props.sandwichId]);\n        // Add one because class nums are 0-indexed\n        const minRequiredDays = 1 + store.getState().sandwiches[this.props.sandwichId].latestSuggestedFillingClassNum();\n\n        console.log(\"total: \", totalDaysAvailable, \" minRequired: \", minRequiredDays);\n\n        if (totalDaysAvailable < minRequiredDays) {\n            alert(\"The contents of this sandwich require at least \" + minRequiredDays + \" days!\");\n            return;\n        }\n\n        this.setState({\n            weeksDaysNeedUpdate: false,\n        })\n\n        store.dispatch(setWeekAndDays(this.props.sandwichId, this.state.nWeeks, this.state.daysPerWeek));\n        // Since store.dispatch happens synchrounously, this line will see the effect of the previous line, which\n        // is required for correctness\n        store.dispatch(builderResetSandwichContents(this.props.sandwichId, store.getState().sandwiches[this.props.sandwichId]));\n    }\n\n    updateWeeksLabel(val) {\n        console.log(\"weeks: \", val);\n        this.setState({\n            nWeeks: parseInt(val),\n            weeksDaysNeedUpdate: true,\n        })\n    }\n\n    updateDaysLabel(val) {\n        console.log(\"days: \", val);\n        this.setState({\n            daysPerWeek: parseInt(val),\n            weeksDaysNeedUpdate: true,\n        })\n    }\n\n    onDragEnd(result) {\n        // TODO: implement\n        console.log(\"onDragEnd(): \", result);\n\n        const { destination, source } = result;\n\n        // Check for a no-op\n        if (!destination) {\n            return;\n        }\n        if (source.droppableId === destination.droppableId && source.index === destination.index) {\n            return;\n        }\n\n\n        const destinationListType = destination.droppableId.substring(0, 4);\n        const sourceListType = source.droppableId.substring(0, 4);\n\n        const sameList = destination.droppableId === source.droppableId;\n        const sameListType = destinationListType === sourceListType;\n\n        store.dispatch(builderMoveFilling(\n            this.props.sandwichId,\n            source.droppableId,\n            destination.droppableId,\n            source.index,\n            destination.index));\n    }\n\n    render() {\n        const sandwich = store.getState().sandwiches[this.props.sandwichId];\n        console.log(\"sandwich: \", sandwich)\n\n        // Generate the components to hold each week's plan lists\n        let fillingListComponents = {};\n        for (let i = 0; i < sandwich.nWeeks; i++) {\n            fillingListComponents[i] = [];\n        }\n\n        // Note: this assumes that we iterate in ascending order by week and then day\n        for (const planListId in this.props.builderState.planLists) {\n\n            let obj = this.props.builderState.planLists[planListId];\n            let [week, day] = this.parsePlanListId(planListId);\n            week = parseInt(week);\n            day = parseInt(day);\n\n            console.log(\"week: \", week);\n            console.log(\"builderState: \", this.props.builderState);\n            console.log(\"fillingListComponents: \", fillingListComponents);\n\n            fillingListComponents[week].push(<FillingList\n                key={obj.id}\n                displayTitle={\"Day \" + (day + 1)}\n                listID={obj.id}\n                sandwich={sandwich}\n                contents={obj.contents}\n            />);\n\n        }\n\n        let finalComponents = [];\n\n        // Generate the final layout by creating a row for each week.\n        // The row will contain a column containing the planLists for the week, and a column containing\n        // the bank for the week.\n        for (let week = 0; week < sandwich.nWeeks; week++) {\n            let totalDurationOfFillings = 0;\n            finalComponents.push(<WeekDivider key={\"week-divider-\" + week}>{\"Week \" + (week + 1)}</WeekDivider>)\n\n\n            let planCol = <div key=\"plan-col\" className=\"col-6\">{fillingListComponents[week]}</div>;\n\n            let bankListObj = this.props.builderState.bankLists[\"bank-list-\" + week];\n            let bankCol = <div key=\"bank-col\" className=\"col-6\">\n                <FillingBank\n                    key={bankListObj.id}\n                    displayTitle={\"Suggested Fillings\"}\n                    listID={bankListObj.id}\n                    sandwich={sandwich}\n                    contents={bankListObj.contents}\n                />\n            </div>;\n\n            finalComponents.push(<div key={\"plan-bank-col-\" + week} className=\"row text-center\">{planCol}{bankCol}</div>)\n        }\n\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className=\"form-group row justify-content-md-center\">\n                            <label className=\"col-3\" id=\"num-weeks-label\" htmlFor=\"num-weeks-field\">{this.state.nWeeks} weeks</label>\n                            <input type=\"range\" className=\"custom-range col-3\" min=\"1\" max=\"20\" value={this.state.nWeeks} id=\"num-weeks-field\" onChange={(e) => this.updateWeeksLabel(e.target.value)}></input>\n                        </div>\n                        <div className=\"form-group row justify-content-md-center\">\n                            <label className=\"col-3\" id=\"num-days-label\" htmlFor=\"num-days-field\">{this.state.daysPerWeek} days per week</label>\n                            <input type=\"range\" className=\"custom-range col-3\" min=\"1\" max=\"5\" value={this.state.daysPerWeek} id=\"num-days-field\" onChange={(e) => this.updateDaysLabel(e.target.value)}></input>\n\n                        </div>\n                        <div className=\"form-group row\">\n                            <SetButton className=\"btn btn-primary w-auto\" disabled={!this.state.weeksDaysNeedUpdate} onClick={this.setWeekAndDays}>Set (changes will be lost!)</SetButton>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-9 text-left\">\n                        <DragDropContext onDragEnd={this.onDragEnd}>\n                            {finalComponents}\n                        </DragDropContext>\n                    </div>\n\n                    <div className=\"col-3\">\n                        <WeeklySandwichNutritionFacts sandwichId={this.props.sandwichId} />\n                        <ExportButtonContainer>\n                            <NavLink className=\"btn btn-primary\" to={\"/sandwich/export/\" + this.props.sandwichId}>Export</NavLink>\n                        </ExportButtonContainer>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state, props) {\n    return {\n        builderState: state.sandwichBuilder[props.sandwichId]\n    };\n}\n\nSandwichBuilderWeekly.propTypes = {\n    sandwichId: PropTypes.number.isRequired,\n}\n\nexport default connect(mapStateToProps)(SandwichBuilderWeekly);","export const setFilling = (sandwichUID, fillingIndex, newValue) => ({\n    type: 'SET_FILLING',\n    uid: sandwichUID,\n    index: fillingIndex,\n    value: newValue,\n  })\n\nexport const deleteFilling = (sandwichUID, fillingIndex) => ({\n  type: 'DELETE_FILLING',\n  uid: sandwichUID,\n  index: fillingIndex,\n})\n\nexport const setWeekAndDays = (sandwichUID, numWeeks, daysInWeek) => ({\n  type: \"SET_WEEKS_AND_DAYS_FOR_SANDWICH\",\n  uid: sandwichUID,\n  numWeeks: numWeeks,\n  daysInWeek: daysInWeek,\n})\n\nexport const builderMoveFilling = (sandwichId, sourceListId, destinationListId, sourceIndex, destinationIndex) => ({\n  type: \"BUILDER_MOVE_FILLING\",\n  sandwichId: sandwichId,\n  sourceListId: sourceListId,\n  destinationListId: destinationListId,\n  sourceIndex: sourceIndex,\n  destinationIndex: destinationIndex,\n});\n\nexport const builderResetSandwichContents = (sandwichId, sandwichObj) => ({\n  type: \"BUILDER_RESET_SANDWICH_CONTENTS\",\n  sandwichId: sandwichId,\n  sandwichObj, sandwichObj,\n});","import React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport styled from \"styled-components\";\n\nconst InfoBox = styled.div`\n    border: 1px solid lightgray;\n    padding: 10px;\n    margin-bottom: 20px;\n`;\n\nconst LearningGoalCategory = styled.div`\n    margin-bottom: 20px;\n`;\n\nconst LearningGoalContent = styled.div`\n    text-align: left;\n`;\n\nconst LearningSubgoals = styled.div`\n    font-size: small;\n`;\n\nclass LearningGoalsDisplay extends React.Component {\n    render() {\n\n        return (\n            <div className=\"card\">\n                <a className=\"card-header\" data-toggle=\"collapse\" href=\"#collapseInfo\" role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseInfo\">\n                    Learning Goals\n                </a>\n                <div className=\"card-body collapse show\" id=\"collapseInfo\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            {Object.entries(this.props.sandwich.learningGoals).map(tuple => {\n                                let obj = tuple[1];\n                                let subComponents = obj.goals.map(goal =>\n                                    <LearningGoalContent>\n                                        <b>{goal.title} {goal.type !== \"\" ? \"(\" + goal.type + \")\" : \"\"}</b>\n                                        <div>{goal.description}</div>\n                                        <LearningSubgoals>\n                                            <ul>\n                                                {goal.subgoals.map(subgoal =>\n                                                    <li>{subgoal}</li>\n                                                )}\n                                            </ul>\n                                        </LearningSubgoals>\n\n                                    </LearningGoalContent>\n                                )\n                                return <LearningGoalCategory><h5>{obj.title}</h5>{subComponents}</LearningGoalCategory>\n\n                            })}\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nLearningGoalsDisplay.propTypes = {\n    sandwich: PropTypes.object.isRequired,\n}\n\nexport default LearningGoalsDisplay;","import \"./../../styles.css\"\nimport React, { Component } from \"react\";\n\n\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\nimport CondimentCard from \"../modules/CondimentCard\";\n\nimport PropTypes from 'prop-types';\nimport SandwichBuilderWeekly from \"../modules/sandwich-builder-v2/SandwichBuilderWeekly\";\nimport LearningGoalsDisplay from \"../modules/sandwich-builder-v2/LearningGoalsDisplay\";\n\n\nimport styled from \"styled-components\";\n\nconst InfoBox = styled.div`\n    border: 1px solid lightgray;\n    padding: 10px;\n    margin-bottom: 20px;\n`;\n\nconst MainHeading = styled.h1`\n    margin-top: 20px;\n    margin-left: 10%;\n    margin-left: 10%;\n`;\n\nconst Subheading = styled.h4`\n    text-align: left;\n`;\n\nconst LearningGoalCategory = styled.div`\n    margin-bottom: 20px;\n`;\n\nconst LearningGoalContent = styled.div`\n    text-align: left;\n`;\n\nconst LearningSubgoals = styled.div`\n    font-size: small;\n`;\n\nconst BuilderContainer = styled.div`\n    border: 1px solid lightgray;\n    padding: 20px;\n`;\n\nclass SandwichPage extends React.Component {\n    render() {\n\n        return (\n            <DndProvider backend={HTML5Backend}>\n                <>\n                    <div className=\"container\">\n                        <MainHeading>{this.props.sandwich.title}</MainHeading>\n                        <Subheading>At a glance:</Subheading>\n                        <InfoBox className=\"row\">\n                            <div>\n                                Driving question: <em>{this.props.sandwich.drivingQuestion}</em><br />\n                                Project question: <em>{this.props.sandwich.projectQuestion}</em><br />\n                            </div>\n                        </InfoBox>\n                        <InfoBox className=\"row\">\n                            <div className=\"col\">\n                                <div className=\"row\">\n                                    Tags: {this.props.sandwich.tags.join(\", \")}\n                                </div>\n                                <div className=\"row\">\n                                    Blurb: {this.props.sandwich.short_description}\n                                </div>\n                                <div className=\"row\">\n                                    Grade versions:\n                                </div>\n                                <div className=\"row\">\n                                    Related Modules:\n                                </div>\n\n                                <div className=\"row\">\n                                    Suggested Condiments:\n                            {this.props.sandwich.suggested_condiments ? this.props.sandwich.suggested_condiments.map((uid) => <div className=\"col-sm\" key={uid}>\n                                    <CondimentCard key={uid} uid={uid} />\n                                </div>) :\n                                        <div className=\"col\">None</div>}\n                                </div>\n                            </div>\n\n                            <div className=\"col\">\n\n                                <div className=\"row\">\n                                    <h6>Additional Resources:</h6>\n                                </div>\n                                {this.props.sandwich.resources.map((resource, index) =>\n                                    <div key={index} className=\"row\">\n                                        <a key={index} href={process.env.PUBLIC_URL + resource.url}>{resource.text}</a>\n                                    </div>\n                                )}\n                                {/* <div className=\"row\">\n                                        <a href={process.env.PUBLIC_URL + \"/sandwich/\" + this.props.sandwich.uid + \"/sandwich-\" + this.props.sandwich.uid + \".zip\"} className=\"btn btn-info\" role=\"button\">.ZIP File</a>\n                                    </div> */}\n                            </div>\n\n                        </InfoBox>\n                        {/* <LearningGoalsDisplay sandwich={this.props.sandwich} /> */}\n\n                        <Subheading>Customize it!</Subheading>\n                        <BuilderContainer className=\"row\">\n                            <SandwichBuilderWeekly sandwichId={this.props.sandwich.uid}/>\n                        </BuilderContainer>\n\n\n\n                    </div>\n                </>\n            </DndProvider>\n        )\n    }\n}\n\nSandwichPage.propTypes = {\n    sandwich: PropTypes.object.isRequired,\n}\n\nexport default SandwichPage;","var curricula_presets = {\n    \"curricula\": [\n    {\n        \"uid\": 1,\n        \"title\": \"Preset 1\",\n        \"sequence\": [1],\n        // \"sequence\": [1,2,3],\n    },\n    {\n        \"uid\": 2,\n        \"title\": \"Preset 2\",\n        \"sequence\": [1],\n        // \"sequence\": [3,2,5],\n    }],\n};\n\nexport default curricula_presets;","import React, { Component } from \"react\";\n\nimport curricula_presets from '../../data/preset_curricula';\nimport data from \"../../data/all_modules\"\n\nimport Sandwich from \"../modules/Sandwich\";\nimport AppContext from \"../context/app_context\";\n\nimport { Link } from \"react-router-dom\";\n\nclass PresetCurricula extends React.Component {\n\n    getSandwichData(uid) {\n        let sandwiches = data.all_modules;\n        for (let i = 0; i < sandwiches.length; i++) {\n            if (sandwiches[i].uid === uid) {\n                return sandwiches[i];\n            }\n        }\n\n        throw new Error(\"module uid not found in data! (uid: \" + uid + \")\");\n    }\n\n    getCurriculaData(module_uid) {\n        let curricula = curricula_presets.curricula;\n        for (let i = 0; i < curricula.length; i++) {\n            if (curricula[i].uid === module_uid) {\n                return curricula[i];\n            }\n        }\n\n        throw new Error(\"curricula uid: not found in curricula_presets.js\");\n    }\n\n    loadPresetCurriculaInUserCurricula(module_uid) {\n        console.log(\"module_uid: \" + module_uid);\n        let presetCurricula = this.getCurriculaData(module_uid);\n\n        // this.context.clearUserCurriculum();\n        for (let i = 0; i < presetCurricula.sequence.length; i++) {\n            // for (let i = 0; i < 2; i++) {\n            let sandwichUID = presetCurricula.sequence[i];\n            console.log(\"Loading curricula preset uid=%s into slot=%s.\", sandwichUID, i);\n            this.context.updateSandwichInUserCurriculum(i, this.getSandwichData(sandwichUID))\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row Page-title\">\n                    <div className=\"col-sm\">\n                        <h1>Preset Curricula</h1>\n                    </div>\n                </div>\n                {curricula_presets.curricula.map((curricula) =>\n                    <div key={curricula.uid}>\n                        <div className=\"row\">\n                            <h3>{curricula.title}</h3>\n                            <Link to=\"/builder\">\n                                <button\n                                    className=\"btn btn-info\"\n                                    onClick={() => {\n                                        this.loadPresetCurriculaInUserCurricula(curricula.uid);\n                                    }}> Use this! </button>\n                            </Link>\n                        </div>\n                        <div className=\"row\">\n                            {\n                                curricula.sequence.map((uid) =>\n                                    <div key={uid} className=\"col-sm-4\">\n                                        <Sandwich\n                                            data={this.getSandwichData(uid)}\n                                        />\n                                    </div>)\n                            }\n                        </div>\n                    </div>\n                )}\n            </div>\n        )\n    }\n}\n\nPresetCurricula.contextType = AppContext;\n\nexport default PresetCurricula;","import \"../../styles.css\"\n\nfunction Home() {\n    return (\n        <>\n            <h1 className=\"Page-title\">Welcome to the home page</h1>\n            <div>\n                On this website you'll be able to:\n                <ul>\n                    <li>Browse all available sandwich modules</li>\n                    <li>Browse preset curricula</li>\n                    <li>Create your own curricula</li>\n                </ul>\n            </div>\n        </>\n    );\n\n}\n\nexport default Home;","import React, { Component } from \"react\";\nimport Sandwich from '../modules/Sandwich';\nimport FilterableSandwichContainer from \"../modules/FilterableSandwichContainer\";\n\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\nimport \"./../../styles.css\"\n\nimport data from \"../../data/all_modules\";\n\nclass AllModules extends React.Component {\n    render() {\n        return (\n            <DndProvider backend={HTML5Backend}>\n                <>\n                    <div className=\"Page-title\">\n                        <h1>Browse All Sandwiches</h1>\n                    </div>\n                    <div>\n                        <FilterableSandwichContainer\n                            sandwichData={data}\n                            draggableMode={false}\n                        />\n                    </div>\n                </>\n            </DndProvider>\n        )\n    }\n}\n\nexport default AllModules;","import React, { Component } from \"react\";\nimport CondimentCard from \"./CondimentCard\";\nimport PropTypes from 'prop-types';\n\n// TODO(bdnwang): Later on, consider whether we should share code with\n// FilterableSandwichContainer via a higher-order-component \"FilterableContainer\" \n// or something.\nclass FilterableCondimentContainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.onFilterTextChanged = this.onFilterTextChanged.bind(this);\n\n        this.state = {\n            indicesToShow: [...Array(this.props.data.condiments.length).keys()], // indices into sandwichData, indicating which values should be displayed\n        };\n    }\n\n    isMatching(data, searchText) {\n        searchText = searchText.toLowerCase();\n        // check tags for match\n        if (data.tags.join(\" \").toLowerCase().includes(searchText)) {\n            return true;\n        }\n\n        // check title for match\n        if (data.title.toLowerCase().includes(searchText)) {\n            return true;\n        }\n\n        // TODO: add more matching conditions\n        return false;\n    }\n\n    onFilterTextChanged(e) {\n        const searchText = e.target.value;\n        let newIndicesToShow = []\n\n        // if empty search text, show all results\n        console.log(\"searchText: %s\", searchText)\n        if (searchText.trim() === \"\") {\n            console.log(\"show all\");\n\n            newIndicesToShow = [...Array(this.props.data.condiments.length).keys()];\n            this.setState({ indicesToShow: newIndicesToShow });\n            return;\n        }\n\n\n        this.props.data.condiments.forEach((value, index) => {\n            if (this.isMatching(value, searchText)) {\n                newIndicesToShow.push(index);\n            }\n        });\n\n        this.setState({ indicesToShow: newIndicesToShow });\n    }\n\n    render() {\n        let filteredModules = this.props.data.condiments.filter((value, index) => {\n            return this.state.indicesToShow.includes(index);\n        });\n\n\n        return (\n            <>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-sm-2\">\n                            Filter:\n                        </div>\n                        <div className=\"col-sm-8\">\n                            <input id=\"searchField\" type=\"text\" className=\"form-control\" placeholder=\"Add search terms!\" onChange={this.onFilterTextChanged} />\n                        </div>\n                    </div>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            {filteredModules.map((module) =>\n                                <div className=\"col-sm-4\">\n                                    <CondimentCard uid={module.uid} />\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nFilterableCondimentContainer.propTypes = {\n    data: PropTypes.object.isRequired,\n}\n\n\nexport default FilterableCondimentContainer;","import React, { Component } from \"react\";\nimport FilterableCondimentContainer from \"../modules/FilterableCondimentContainer\";\n\n\nimport \"./../../styles.css\"\n\nimport data from \"../../data/all_condiments\";\n\nclass AllCondiments extends React.Component {\n    render() {\n        return (\n                <>\n                    <div className=\"Page-title\">\n                        <h1>Browse All Condiments</h1>\n                    </div>\n                    <div>\n                        <FilterableCondimentContainer\n                            data={data}\n                        />\n                    </div>\n                </>\n        )\n    }\n}\n\nexport default AllCondiments;","import React, { Component, useState } from 'react';\nimport './SandwichHolder.css';\n\nimport PropTypes from 'prop-types';\n\nimport ItemTypes from \"../../constants\";\n\nimport { DropTarget } from 'react-dnd';\n\nimport {\n    NavLink\n} from \"react-router-dom\";\n\nimport AppContext from \"../context/app_context\";\n\n// Represents a sandwich spot in the user's curriculum.\n// Takes an index into the curriculum sandwich list as a prop.\nclass SandwichHolder extends React.Component {\n    render() {\n\n        // Grab the props injected by React DnD\n        const { connectDropTarget } = this.props;\n\n        const heldSandwich = this.context.curriculumSandwiches[this.props.index];\n       \n        if (this.context.isSandwichSlotEmpty(this.props.index)) {\n            return connectDropTarget(<div className=\"Sandwich-holder-empty\"\n                style={{\n                    cursor: 'move',\n                }}\n            >\n                <h1>+</h1>\n                <em>(add a sandwich!)</em>\n            </div>);\n        } else {\n            return connectDropTarget(\n                <div className=\"Sandwich-holder\"\n                    style={{\n                        cursor: 'move',\n                    }}\n                >\n                    <h5>#{this.props.index + 1}</h5>\n                    <h3>{heldSandwich.title}</h3>\n                    <p>UID: {heldSandwich.uid}</p>\n                    <p>Tags: <em>{heldSandwich.tags.toString()}</em></p>\n                    {(heldSandwich.uid !== -1) && <NavLink to={\"/sandwich/\" + heldSandwich.uid}>See More</NavLink>}<br />\n                    <button type=\"button\" className=\"btn btn-warning\" onClick={() => this.context.deleteSandwichFromUserCurriculum(this.props.index)}>Remove</button>\n                </div>\n            );\n        }\n    }\n}\n\nSandwichHolder.propTypes = {\n    index: PropTypes.number.isRequired,\n}\n\nSandwichHolder.contextType = AppContext;\n\n// React DnD configuration\n\nconst sandwichTarget = {\n    drop(props, monitor, component) {\n        console.log(\"SandwichHolder: DROP\");\n        let data = monitor.getItem();\n        console.log(\"Data: %o\", data);\n        component.context.updateSandwichInUserCurriculum(props.index, data);\n    }\n}\n\nfunction collect(connect, monitor) {\n    return {\n        connectDropTarget: connect.dropTarget(),\n    }\n}\n\n\nexport default DropTarget(ItemTypes.SANDWICH, sandwichTarget, collect)(SandwichHolder);","import React, { Component } from \"react\";\nimport './NutritionFacts.js';\nimport './NutritionFacts.css';\nimport PropTypes from 'prop-types';\n\nclass NutritionFacts extends React.Component {\n    \n    // returns set of tags as a list\n    getCoveredTags(sandwiches) {\n        let allTags = new Set();\n\n        sandwiches.forEach(sw => {\n            if (Object.keys(sw).length !== 0) {\n                sw.tags.forEach(tag => allTags.add(tag));\n            }\n        });\n\n        return Array.from(allTags);\n    }\n\n    render() {\n        let numSandwiches = 0;\n\n        this.props.sandwichData.forEach((wich) => {\n            if (Object.keys(wich).length > 0) {\n                numSandwiches++;\n            }\n        });\n\n\n        return (<div className=\"container border border-nutrition-outline\">\n            <div className=\"row border-bottom border-nutrition-hr-thick\">\n                <div className=\"col-sm border-bottom\">\n                    <h3>Nutrition Facts</h3>\n                </div>\n            </div>\n            <div className=\"row border-bottom border-nutrition-hr-med\">\n                <div className=\"col-9\">\n                    # of modules:\n                </div>\n                <div className=\"col-3\">\n                    {numSandwiches}\n                </div>\n            </div>\n            <div className=\"row border-bottom border-nutrition-hr-thin text-left\">\n                <div className=\"col-12\">\n                    Tags covered:\n                </div>\n                <div className=\"col-12\" style={{\"fontSize\": \"12px\"}}>\n                    <em>\n                        {this.getCoveredTags(this.props.sandwichData).join(', ')}\n                    </em>\n                </div>\n            </div>\n            <div className=\"row border-bottom border-nutrition-hr-thin text-left\">\n                <div className=\"col-9\">\n                    Artificial Intelligence\n                </div>\n                <div className=\"col-3\">\n                    75%\n                </div>\n            </div>\n            <div className=\"row border-bottom border-nutrition-hr-thin text-left\">\n                <div className=\"col-9\">\n                    Computational Thinking\n                </div>\n                <div className=\"col-3\">\n                    90%\n                </div>\n            </div>\n            <div className=\"row border-bottom border-nutrition-hr-med text-left\">\n                <div className=\"col-9\">\n                    Design Thinking\n                </div>\n                <div className=\"col-3\">\n                    50%\n                </div>\n            </div>\n            <div className=\"row border-bottom border-nutrition-hr-thin text-left small-text\">\n                <div className=\"col-9\">\n                    Creativity\n                </div>\n                <div className=\"col-3\">\n                    Yes\n                </div>\n            </div>\n            <div className=\"row border-bottom border-nutrition-hr-thin text-left small-text\">\n                <div className=\"col-9\">\n                    Collaboration\n                </div>\n                <div className=\"col-3\">\n                    Yes\n                </div>\n            </div>\n            <div className=\"row border-nutrition-hr-thin text-left small-text\">\n                <div className=\"col-9\">\n                    Reflection\n                </div>\n                <div className=\"col-3\">\n                    Yes\n                </div>\n            </div>\n            \n        </div>)\n    }\n}\n\nNutritionFacts.propTypes = {\n    sandwichData: PropTypes.array.isRequired,\n}\n\nexport default NutritionFacts;","import React, { Component } from \"react\";\nimport SandwichHolder from \"../modules/SandwichHolder\";\nimport NutritionFacts from \"../modules/NutritionFacts\";\n\nimport PropTypes from 'prop-types';\n\nimport AppContext from \"../context/app_context\";\nimport data from \"../../data/all_modules\"\nimport FilterableSandwichContainer from \"../modules/FilterableSandwichContainer\";\n\n// Displays the state of the user's curriculum sandwiches, along with \n// a filterable list of all sandwiches. \n// Sandwiches from the list can be dragged and dropped into the user's \n// curriculum slots to modify the curriculum.\nclass CurriculumBuilder extends React.Component {\n    render() {\n        const holderList = []\n        for (let i = 0; i < this.props.numSlots; i++) {\n            holderList.push(\n                <div className=\"col-sm\" key={i}>\n                    <SandwichHolder\n                        index={i}/>\n                </div>)\n        }\n\n        return (\n            <>\n                <div className=\"row\">\n                    <div className=\"col\">\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-9\">\n                        <div className=\"row\">\n                            {holderList}\n                        </div>\n                    </div>\n                    <div className=\"col-3\">\n                                <NutritionFacts sandwichData={this.context.curriculumSandwiches} />\n                    </div>\n                </div>\n                <button type=\"button\" className=\"btn btn-danger\" value=\"Clear Curriculum\" onClick={this.context.clearUserCurriculum}>\n                    Clear Curriculum\n                </button>\n                <hr />\n                <FilterableSandwichContainer\n                    sandwichData={data}\n                    draggableMode={true}\n                    isSandwichDraggable={this.context.isSandwichInUserCurriculum} />\n            </>\n        )\n    }\n\n}\n\nCurriculumBuilder.propTypes = {\n}\n\nCurriculumBuilder.contextType = AppContext;\n\nexport default CurriculumBuilder;\n","import React, { Component } from \"react\";\n\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\nimport \"./../../styles.css\"\n\nimport CurriculumBuilder from \"../modules/CurriculumBuilder\";\n\nclass BuildYourOwn extends React.Component {\n    render() {\n        return (\n            <DndProvider backend={HTML5Backend}>\n                <>\n                    <div className=\"col-sm Page-title\">\n                        <h1>Build Your Own Module</h1>\n                    </div>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                        </div>\n                        <CurriculumBuilder numSlots=\"3\"/>\n                    </div>\n                </>\n            </DndProvider>\n        )\n    }\n}\n\nexport default BuildYourOwn;","import \"./../../styles.css\"\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types';\nimport styled from \"styled-components\";\nimport WeeklySandwichNutritionFacts from \"../modules/sandwich-builder-v2/WeeklySandwichNutritionFacts\";\n\nconst InfoBox = styled.div`\n    border: 1px solid lightgray;\n    padding: 10px;\n    margin-bottom: 20px;\n`;\n\nconst MainHeading = styled.h1`\n    margin-top: 20px;\n    margin-left: 10%;\n    margin-left: 10%;\n`;\n\nconst ExportedContent = styled.div`\n    background-color: #8bff61;\n    margin: 30px;\n    padding: 15px;\n    text-align: left;\n\n`;\n\nconst ExportedContentDescription = styled.div`\n    color: black;\n    font-size: 20px;\n`;\n\nconst LinkTextField = styled.div`\n    background-color: #bfffa8;\n    border: 1px solid gray;\n    padding: 5px;\n    width: 100%;\n    font-family: monospace;\n`;\n\nconst ZipButton = styled.button`\n    padding: 10px;\n    margin-top: 20px;\n`;\n\nclass SandwichExportPage extends React.Component {\n    render() {\n        return (\n            <>\n                <div className=\"row\">\n                    <MainHeading>{this.props.sandwichData.title}</MainHeading>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-9\">\n                        <ExportedContent className=\"row\">\n                            <ExportedContentDescription className=\"col-4\">\n                                Class slides:\n                            </ExportedContentDescription>\n                            <LinkTextField className=\"col\">\n                                https://reactjs.org/docs/refs-and-the-dom.html\n                            </LinkTextField>\n                        </ExportedContent>\n                        <ExportedContent className=\"row\">\n                            <ExportedContentDescription className=\"col-4\">\n                                Student Workbook:\n                            </ExportedContentDescription>\n                            <LinkTextField className=\"col\">\n                                https://reactjs.org/docs/refs-and-the-dom.html\n                            </LinkTextField>\n                        </ExportedContent>\n                        <ExportedContent className=\"row\">\n                            <ExportedContentDescription className=\"col-4\">\n                                Teacher Facilitation Guide:\n                            </ExportedContentDescription>\n                            <LinkTextField className=\"col\">\n                                https://reactjs.org/docs/refs-and-the-dom.html\n                            </LinkTextField>\n                        </ExportedContent>\n                    </div>\n                    <div className=\"col-3\">\n                        <WeeklySandwichNutritionFacts sandwichId={[this.props.sandwichId]} />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <ExportedContent className=\"col-9\">\n                        <h4>Additional Resources:</h4>\n                        {this.props.sandwichData.resources.map((resource, index) =>\n                            <div>\n                                <a key={index} href={process.env.PUBLIC_URL + resource.url}>{resource.text}</a>\n                            </div>\n                        )}\n                        <ZipButton className=\"btn btn-primary\">Download ZIP</ZipButton>\n                    </ExportedContent>\n                </div>\n\n            </>\n        )\n    }\n}\n\nfunction mapStateToProps(state, props) {\n    return {\n        sandwichData: state.sandwiches[props.sandwichId],\n        builderData: state.sandwichBuilder[props.sandwichId],\n    }\n}\n\nSandwichExportPage.propTypes = {\n    sandwichId: PropTypes.number.isRequired,\n}\n\nexport default connect(mapStateToProps)(SandwichExportPage);","import './App.css';\nimport './../styles.css';\n\nimport React, { Component } from 'react';\n\nimport Navbar from './modules/Navbar';\nimport SandwichPage from './pages/SandwichPage';\nimport PresetCurricula from './pages/PresetCurricula';\n\nimport Home from './pages/Home';\nimport AllModules from './pages/AllModules';\nimport AllCondiments from './pages/AllCondiments';\nimport BuildYourOwn from \"./pages/BuildYourOwn\";\nimport SandwichExportPage from \"./pages/SandwichExportPage\";\n\nimport data from \"../data/all_modules\";\nimport AppContext from \"./context/app_context\";\nimport { Provider } from 'react-redux'\nimport store from '../store'\n\nimport { CustomSandwichData, SandwichFillingData } from '../misc/SandwichObjects';\n\nimport {\n  Route,\n  Switch,\n} from \"react-router-dom\";\n\nconst EMPTY_SANDWICH_DATA = {};\n\nfunction setElementInCurriculumSandwiches(index, newValue) {\n  return (previousState, currentProps) => {\n    let newCurriculumSandwiches = previousState.curriculumSandwiches;\n    newCurriculumSandwiches[index] = newValue;\n    return { ...previousState, curriculumSandwiches: newCurriculumSandwiches };\n  }\n}\n\n\n// TODO: refactor context stuff here\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.clearUserCurriculum = this.clearUserCurriculum.bind(this);\n    this.isSandwichInUserCurriculum = this.isSandwichInUserCurriculum.bind(this);\n    this.deleteSandwichFromUserCurriculum = this.deleteSandwichFromUserCurriculum.bind(this);\n    this.updateSandwichInUserCurriculum = this.updateSandwichInUserCurriculum.bind(this);\n    this.isSandwichSlotEmpty = this.isSandwichSlotEmpty.bind(this);\n    this.starSandwich = this.starSandwich.bind(this);\n    this.unstarSandwich = this.unstarSandwich.bind(this);\n    this.toggleStarSandwich = this.toggleStarSandwich.bind(this);\n    this.isSandwichStarred = this.isSandwichStarred.bind(this);\n\n    // filling related state stored in context\n\n    // App-wide state propagated via React Context\n    this.state = {\n      curriculumSlots: 3,\n      curriculumSandwiches: [],\n      starredSandwiches: null,\n      customSandwichData: {}\n    }\n\n    this.state.starredSandwiches = new Set()\n\n    for (let i = 0; i < this.state.curriculumSlots; i++) {\n      this.state.curriculumSandwiches.push({});\n    }\n\n    // Initialize sandwich data from presets\n    data.all_modules.forEach((rawJSON) => {\n      let sandwich = new CustomSandwichData(rawJSON);\n      console.log(\"SANDWICH \", sandwich);\n      this.state.customSandwichData[sandwich.uid] = sandwich;\n    })\n\n    console.log(\"Initial Redux store state: \", store.getState());\n  }\n\n  updateFillingForSandwich(sandwichUID, fillingIndex, newValue) {\n\n  }\n\n  isSandwichStarred(uid) {\n    return this.state.starredSandwiches.has(uid)\n  }\n\n  toggleStarSandwich(uid) {\n    if (this.state.starredSandwiches.has(uid)) {\n      this.unstarSandwich(uid)\n    } else {\n      this.starSandwich(uid)\n    }\n  }\n\n  starSandwich(uid) {\n    // this.state.starredSandwiches.add(uid)\n    let newStarredSandwiches = new Set(this.state.starredSandwiches)\n    newStarredSandwiches.add(uid)\n    this.setState({ starredSandwiches: newStarredSandwiches })\n    console.log(this.state.starredSandwiches)\n  }\n\n  unstarSandwich(uid) {\n    // this.state.starredSandwiches.delete(uid)\n    let newStarredSandwiches = new Set(this.state.starredSandwiches)\n    newStarredSandwiches.delete(uid)\n    this.setState({ starredSandwiches: newStarredSandwiches })\n    // console.log(\"Unstarring \"+uid)\n    console.log(this.state.starredSandwiches)\n  }\n\n  // Must be careful with how we go about modifying the app-wide state\n  // because these mutators are called multiple times in quick succession.\n  // Because setState is asynchronous, if we don't use the reducer-esque API to\n  // modifying state (where we pass setState a function that transforms previousState and props into new state))\n  // then we risk losing changes in the batch.\n  // Good explanation: https://medium.com/@wereHamster/beware-react-setstate-is-asynchronous-ce87ef1a9cf3\n  clearUserCurriculum() {\n    for (let i = 0; i < this.state.curriculumSlots; i++) {\n      this.deleteSandwichFromUserCurriculum(i);\n    }\n  }\n\n  isSandwichInUserCurriculum(uid) {\n    for (let i = 0; i < this.state.curriculumSlots; i++) {\n      if (this.state.curriculumSandwiches[i].uid === uid) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  isSandwichSlotEmpty(index) {\n    console.log(\"isSandwichSlotEmpty(): \" + (Object.keys(this.state.curriculumSandwiches[index]).length === 0));\n    return Object.keys(this.state.curriculumSandwiches[index]).length === 0;\n  }\n\n  deleteSandwichFromUserCurriculum(index) {\n    this.updateSandwichInUserCurriculum(index, EMPTY_SANDWICH_DATA);\n  }\n\n  updateSandwichInUserCurriculum(index, newData) {\n    // Since we are actually modifying the state with thsi operation\n    // We use the reducer-y setState() interface\n    this.setState(setElementInCurriculumSandwiches(index, newData));\n  }\n\n  render() {\n    console.log(\"AAA: \", store.getState().sandwiches);\n    console.log(Object.entries(store.getState().sandwiches));\n\n    return (\n      <Provider store={store}>\n        <AppContext.Provider value={{\n          curriculumSlots: this.state.curriculumSlots,\n          curriculumSandwiches: this.state.curriculumSandwiches,\n          clearUserCurriculum: this.clearUserCurriculum,\n          isSandwichInUserCurriculum: this.isSandwichInUserCurriculum,\n          deleteSandwichFromUserCurriculum: this.deleteSandwichFromUserCurriculum,\n          updateSandwichInUserCurriculum: this.updateSandwichInUserCurriculum,\n          isSandwichSlotEmpty: this.isSandwichSlotEmpty,\n          starSandwich: this.starSandwich,\n          unstarSandwich: this.unstarSandwich,\n          toggleStarSandwich: this.toggleStarSandwich,\n          isSandwichStarred: this.isSandwichStarred,\n          customSandwichData: this.state.customSandwichData,\n        }}>\n          <div className=\"App\">\n            <header className=\"App-header\">\n              Ethical AI for Computational Action\n        </header>\n            <Navbar />\n            <Switch>\n              <Route path=\"/home\">\n                <Home />\n              </Route>\n\n\n              <Route path=\"/builder\">\n                <BuildYourOwn />\n              </Route>\n\n\n              <Route path=\"/presets\">\n                <PresetCurricula />\n              </Route>\n\n              <Route path=\"/all\">\n                <AllModules />\n              </Route>\n\n              <Route path=\"/condiments\">\n                <AllCondiments />\n              </Route>\n\n\n              {\n                // Sandwich builder pages\n                Object.entries(store.getState().sandwiches).map(tuple => {\n                  let sandwich = tuple[1];\n                  return <Route key={sandwich.uid} path={\"/sandwich/\" + sandwich.uid}>\n                    <SandwichPage sandwich={sandwich} />\n                  </Route>\n                })\n              }\n\n                {\n                  // Sandwich export pages\n                Object.entries(store.getState().sandwiches).map(tuple => {\n                  let sandwich = tuple[1];\n                  return <Route key={+\"export-\"+sandwich.uid} path={\"/sandwich/export/\" + sandwich.uid}>\n                    <SandwichExportPage sandwichId={sandwich.uid} />\n                  </Route>\n                })\n              }\n\n              <Route path=\"/\">\n                <h1 className=\"Page-title\">404 - Page not found!</h1>\n              </Route>\n\n            </Switch>\n          </div>\n        </AppContext.Provider>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}