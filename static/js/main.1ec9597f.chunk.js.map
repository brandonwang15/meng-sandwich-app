{"version":3,"sources":["components/modules/Sandwich.js","components/modules/FilterableSandwichContainer.js","constants.js","components/modules/DraggableSandwich.js","components/modules/Navbar.js","components/modules/NutritionFacts.js","data/all_condiments.js","components/modules/CondimentCard.js","components/pages/SandwichPage.js","data/preset_curricula.js","data/all_modules.js","components/context/app_context.js","components/pages/PresetCurricula.js","components/pages/Home.js","components/pages/AllModules.js","components/modules/FilterableCondimentContainer.js","components/pages/AllCondiments.js","components/modules/SandwichHolder.js","components/modules/CurriculumBuilder.js","components/pages/BuildYourOwn.js","components/App.js","reportWebVitals.js","index.js"],"names":["Sandwich","className","this","props","data","title","short_description","tags","toString","to","uid","React","Component","defaultProps","FilterableSandwichContainer","onFilterTextChanged","bind","state","sandwichIndicesToShow","Array","sandwichData","all_modules","length","keys","searchText","toLowerCase","join","includes","e","target","value","newSandwichIndicesToShow","console","log","trim","setState","forEach","index","isSandwichMatching","push","filteredModules","filter","draggableMode","id","type","placeholder","onChange","map","module","canDrag","isSandwichDraggable","ItemTypes","SANDWICH","DraggableSandwich","useDrag","item","collect","monitor","isDragging","begin","end","didDrop","getDropResult","drag","ref","style","opacity","cursor","Navbar","NutritionFacts","sandwiches","allTags","Set","sw","Object","tag","add","from","numSandwiches","wich","getCoveredTags","CondimentCard","condimentData","condiments","SandwichPage","sandwich","resources","resource","href","process","url","text","role","suggested_condiments","curricula_presets","createContext","PresetCurricula","i","Error","module_uid","curricula","presetCurricula","getCurriculaData","sequence","sandwichUID","context","updateSandwichInUserCurriculum","getSandwichData","onClick","loadPresetCurriculaInUserCurricula","contextType","AppContext","Home","AllModules","DndProvider","backend","HTML5Backend","FilterableCondimentContainer","indicesToShow","newIndicesToShow","isMatching","AllCondiments","SandwichHolder","connectDropTarget","heldSandwich","curriculumSandwiches","isSandwichSlotEmpty","deleteSandwichFromUserCurriculum","sandwichTarget","drop","component","getItem","DropTarget","connect","dropTarget","CurriculumBuilder","holderList","numSlots","clearUserCurriculum","isSandwichInUserCurriculum","BuildYourOwn","EMPTY_SANDWICH_DATA","App","curriculumSlots","newData","newValue","previousState","currentProps","newCurriculumSandwiches","setElementInCurriculumSandwiches","Provider","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ec9597f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Sandwich.css';\n\nimport {\n    NavLink\n} from \"react-router-dom\";\n\n\nimport PropTypes from 'prop-types';\n\nclass Sandwich extends React.Component {\n    render() {\n        return (\n            <div className=\"Sandwich-container\" >\n                <h3>{this.props.data.title}</h3>\n                <p><em>{this.props.data.short_description}</em></p>\n                <p>Tags: {this.props.data.tags.toString()}</p>\n                <NavLink to={\"/sandwich/\"+this.props.data.uid}>See More</NavLink>\n                <p>UID: {this.props.data.uid}</p>\n            </div>\n        )\n    }\n}\n\nSandwich.propTypes = {\n    data: PropTypes.object.isRequired,\n}\n\nSandwich.defaultProps = {\n    data: {\n        \"uid\": -1,\n        \"title\": \"N/A\",\n        \"tags\": []\n    }\n}\n\nexport default Sandwich;","import React, { Component } from \"react\";\nimport DraggableSandwich from \"./DraggableSandwich\";\nimport Sandwich from \"./Sandwich\";\nimport PropTypes from 'prop-types';\nimport './FilterableSandwichContainer.css';\n\nclass FilterableSandwichContainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.onFilterTextChanged = this.onFilterTextChanged.bind(this);\n\n        this.state = {\n            sandwichIndicesToShow: [...Array(this.props.sandwichData.all_modules.length).keys()], // indices into sandwichData, indicating which sandwiches should be displayed\n        };\n    }\n\n    isSandwichMatching(data, searchText) {\n        searchText = searchText.toLowerCase();\n        // check tags for match\n        if (data.tags.join(\" \").toLowerCase().includes(searchText)) {\n            return true;\n        }\n\n        // check title for match\n        if (data.title.toLowerCase().includes(searchText)) {\n            return true;\n        }\n\n        // TODO: add more matching conditions\n        return false;\n    }\n\n    onFilterTextChanged(e) {\n        const searchText = e.target.value;\n        let newSandwichIndicesToShow = []\n\n        // if empty search text, show all results\n        console.log(\"searchText: %s\", searchText)\n        if (searchText.trim() === \"\") {\n            console.log(\"show all\");\n\n            newSandwichIndicesToShow = [...Array(this.props.sandwichData.all_modules.length).keys()];\n            this.setState({ sandwichIndicesToShow: newSandwichIndicesToShow });\n            return;\n        }\n\n\n        this.props.sandwichData.all_modules.forEach((value, index) => {\n            if (this.isSandwichMatching(value, searchText)) {\n                newSandwichIndicesToShow.push(index);\n            }\n        });\n\n        this.setState({ sandwichIndicesToShow: newSandwichIndicesToShow });\n    }\n\n    render() {\n        let filteredModules = this.props.sandwichData.all_modules.filter((value, index) => {\n            return this.state.sandwichIndicesToShow.includes(index);\n        });\n\n        if (this.props.draggableMode) {\n            return (\n                <>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-sm-2\">\n                                Filter:\n                            </div>\n                            <div className=\"col-sm-8\">\n                                <input id=\"searchField\" type=\"text\" className=\"form-control\" placeholder=\"Add search terms!\" onChange={this.onFilterTextChanged} />\n                            </div>\n                        </div>\n\n                        <div className=\"Scrollable-container\">\n                            <div className=\"row\">\n                                {filteredModules.map((module) => {\n                                    let sandwichDiv = <div className=\"col-sm-4\" key={module.uid}>\n                                        <DraggableSandwich\n                                            data={module}\n                                            canDrag={!this.props.isSandwichDraggable(module.uid)}\n                                        />\n                                    </div>;\n                                    return sandwichDiv;\n                                }\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                </>\n            )\n\n\n        } else {\n            return (\n                <>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-sm-2\">\n                                Filter:\n                            </div>\n                            <div className=\"col-sm-8\">\n                                <input id=\"searchField\" type=\"text\" className=\"form-control\" placeholder=\"Add search terms!\" onChange={this.onFilterTextChanged} />\n                            </div>\n                        </div>\n                        <div className=\"container\">\n                            <div key={module.uid} className=\"row\">\n                                {filteredModules.map((module) =>\n                                    <div className=\"col-sm-4\">\n                                        <Sandwich\n                                            data={module}\n                                        />\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                </>\n            )\n        }\n    }\n}\n\nFilterableSandwichContainer.propTypes = {\n    sandwichData: PropTypes.object.isRequired,\n    draggableMode: PropTypes.bool.isRequired,\n    // TODO: this whole draggable flow is a candidate for refactoring\n    isSandwichDraggable: PropTypes.func, // a function that determines whether the sandwich with the given uid is draggable\n}\n\n\nexport default FilterableSandwichContainer;","const ItemTypes = {\n    SANDWICH: 'sandwich',\n};\n\nexport default ItemTypes; ","import React, { Component } from 'react';\nimport './DraggableSandwich.css';\n\nimport PropTypes from 'prop-types';\n\nimport ItemTypes from \"../../constants\";\n\nimport { useDrag } from 'react-dnd';\n\nimport {\n    NavLink\n} from \"react-router-dom\";\n\n// Draggable component that displays a 'thumbnail' card for the given sandwich object.\nfunction DraggableSandwich(props) {\n    const [{isDragging}, drag] = useDrag({\n        item: { type: ItemTypes.SANDWICH },\n        collect: monitor => ({\n            isDragging: !!monitor.isDragging(),\n        }),\n        canDrag: () => props.canDrag,\n        begin: () => {\n            return props.data;\n        },\n        end: (item, monitor) => {\n            console.log(\"DraggableSandwich: END DRAG. didDrop=%s; dropResult=%s.\", monitor.didDrop(), monitor.getDropResult());\n        },\n        });\n\n    return (\n        <div className={\"Draggable-sandwich-container \" + (props.canDrag ? \"enabled\" : \"disabled\")}\n            ref={drag}\n            style={{\n                opacity: isDragging ? 0.5 : 1,\n                cursor: 'move',\n            }}\n        >\n            <h3>{props.data.title}</h3>\n            <p>UID: {props.data.uid}</p>\n            <p>Tags: {props.data.tags.toString()}</p>\n            <NavLink to={\"/sandwich/\"+props.data.uid}>See More</NavLink>\n        </div>\n    )\n}\n\nDraggableSandwich.propTypes = {\n    data: PropTypes.object.isRequired,\n    canDrag: PropTypes.bool.isRequired,\n}\n\nDraggableSandwich.defaultProps = {\n    data: {\n        \"uid\": -1,\n        \"title\": \"N/A\",\n        \"tags\": []\n    }\n}\n\nexport default DraggableSandwich;","import './Navbar.css';\nimport React, { Component } from \"react\";\nimport {\n    BrowserRouter as Router,\n    NavLink\n} from \"react-router-dom\";\n\nclass Navbar extends React.Component {\n    // TODO: figure out how to get NavLinks working\n    render() {\n        return (\n                <div className=\"Navbar\">\n                    <nav>\n                    <ul>\n                        <NavLink to=\"/home\">Home</NavLink> \n                        {' '}|{' '}\n                        <NavLink to=\"/builder\">Build Your Curriculum</NavLink>\n                        {' '}|{' '}\n                        <NavLink to=\"/presets\">Preset Curriculum</NavLink>\n                        {' '}|{' '}\n                        <NavLink to=\"/all\">All Modules</NavLink>\n                        {' '}|{' '}\n                        <NavLink to=\"/condiments\">All Condiments</NavLink>\n                    </ul>\n                    </nav>\n\n                </div>\n        )\n    }\n}\n\nexport default Navbar;","import React, { Component } from \"react\";\nimport './NutritionFacts.js';\nimport './NutritionFacts.css';\nimport PropTypes from 'prop-types';\n\nclass NutritionFacts extends React.Component {\n    \n    // returns set of tags as a list\n    getCoveredTags(sandwiches) {\n        let allTags = new Set();\n\n        sandwiches.forEach(sw => {\n            if (Object.keys(sw).length !== 0) {\n                sw.tags.forEach(tag => allTags.add(tag));\n            }\n        });\n\n        return Array.from(allTags);\n    }\n\n    render() {\n        let numSandwiches = 0;\n\n        this.props.sandwichData.forEach((wich) => {\n            if (Object.keys(wich).length > 0) {\n                numSandwiches++;\n            }\n        });\n\n\n        return (<div className=\"container border border-nutrition-outline\">\n            <div className=\"row border-bottom border-nutrition-hr-thick\">\n                <div className=\"col-sm border-bottom\">\n                    <h3>Nutrition Facts</h3>\n                </div>\n            </div>\n            <div className=\"row border-bottom border-nutrition-hr-med\">\n                <div className=\"col-9\">\n                    # of modules:\n                </div>\n                <div className=\"col-3\">\n                    {numSandwiches}\n                </div>\n            </div>\n            <div className=\"row border-bottom border-nutrition-hr-thin text-left\">\n                <div className=\"col-12\">\n                    Tags covered:\n                </div>\n                <div className=\"col-12\" style={{\"fontSize\": \"12px\"}}>\n                    <em>\n                        {this.getCoveredTags(this.props.sandwichData).join(', ')}\n                    </em>\n                </div>\n            </div>\n            <div className=\"row border-bottom border-nutrition-hr-thin text-left\">\n                <div className=\"col-9\">\n                    Artificial Intelligence\n                </div>\n                <div className=\"col-3\">\n                    75%\n                </div>\n            </div>\n            <div className=\"row border-bottom border-nutrition-hr-thin text-left\">\n                <div className=\"col-9\">\n                    Computational Thinking\n                </div>\n                <div className=\"col-3\">\n                    90%\n                </div>\n            </div>\n            <div className=\"row border-bottom border-nutrition-hr-med text-left\">\n                <div className=\"col-9\">\n                    Design Thinking\n                </div>\n                <div className=\"col-3\">\n                    50%\n                </div>\n            </div>\n            <div className=\"row border-bottom border-nutrition-hr-thin text-left small-text\">\n                <div className=\"col-9\">\n                    Creativity\n                </div>\n                <div className=\"col-3\">\n                    Yes\n                </div>\n            </div>\n            <div className=\"row border-bottom border-nutrition-hr-thin text-left small-text\">\n                <div className=\"col-9\">\n                    Collaboration\n                </div>\n                <div className=\"col-3\">\n                    Yes\n                </div>\n            </div>\n            <div className=\"row border-nutrition-hr-thin text-left small-text\">\n                <div className=\"col-9\">\n                    Reflection\n                </div>\n                <div className=\"col-3\">\n                    Yes\n                </div>\n            </div>\n            \n        </div>)\n    }\n}\n\nNutritionFacts.propTypes = {\n    sandwichData: PropTypes.array.isRequired,\n}\n\nexport default NutritionFacts;","var data = {\n    \"condiments\": [\n        {\n            \"uid\": 1,\n            \"title\": \"Debugging\",\n            \"short_description\": \"Scratch classroom activity that encourages transferable debugging skills.\",\n            \"tags\": [\n                \"Scratch\",\n                \"plugged\"\n            ],\n            \"resources\": [\n                {\n                    \"url\": \"/condiment/1/image.png\",\n                    \"text\": \"Sandwich picture.\",\n                },\n                {\n                    \"url\": \"/condiment/1/test.pdf\",\n                    \"text\": \"Here's a PDF!\",\n                }\n            ]\n        }, \n        {\n            \"uid\": 2,\n            \"title\": \"Design Thinking\",\n            \"short_description\": \"1 hour design thinking activity to familiarize students with the DT process.\",\n            \"tags\": [\n                \"unplugged\",\n                \"design thinking\"\n            ],\n            \"resources\": [\n                {\n                    \"url\": \"/condiment/1/image.png\",\n                    \"text\": \"Sandwich picture.\",\n                },\n                {\n                    \"url\": \"/condiment/1/test.pdf\",\n                    \"text\": \"Here's a PDF!\",\n                }\n            ]\n        },    \n        {\n            \"uid\": 3,\n            \"title\": \"Scratch Review\",\n            \"short_description\": \"A refresher for students who have seen Scratch before, but could use a warm up before jumping back into hands-on work.\",\n            \"tags\": [\n                \"Scratch\"\n            ],\n            \"resources\": [\n                {\n                    \"url\": \"/condiment/1/image.png\",\n                    \"text\": \"Sandwich picture.\",\n                },\n                {\n                    \"url\": \"/condiment/1/test.pdf\",\n                    \"text\": \"Here's a PDF!\",\n                }\n            ]\n        },    \n    ]\n};\n\nexport default data;\n","import React, { Component } from 'react';\n\nimport './CondimentCard.css';\n\nimport {\n    NavLink\n} from \"react-router-dom\";\n\nimport data from '../../data/all_condiments';\n\nimport PropTypes from 'prop-types';\n\nclass CondimentCard extends React.Component {\n    render() {\n        let condimentData = {};\n\n        data.condiments.forEach((value) => {\n            if (value.uid === this.props.uid) {\n                condimentData = value;\n            }\n        });\n\n        return (\n            <div className=\"Condiment-container\" >\n                <b>{condimentData.title}</b>\n                <p><em>{condimentData.short_description}</em></p>\n                <p>Tags: {condimentData.tags.toString()}</p>\n                <NavLink to={\"/condiment/\"+condimentData.uid}>See More</NavLink>\n                <p>UID: {condimentData.uid}</p>\n            </div>\n        )\n    }\n}\n\nCondimentCard.propTypes = {\n    uid: PropTypes.number.isRequired,\n}\n\nexport default CondimentCard;","import \"./../../styles.css\"\nimport React, { Component } from \"react\";\n\nimport NutritionFacts from \"../modules/NutritionFacts\";\nimport CondimentCard from \"../modules/CondimentCard\";\n\nimport PropTypes from 'prop-types';\n\nclass SandwichPage extends React.Component {\n    render() {\n\n        return (\n            <div className=\"container\">\n                <div className=\"row Page-title\">\n                    <div className=\"col-sm\">\n                        <h1>{this.props.sandwich.title}</h1>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-9 text-left\">\n                        <div className=\"row\">\n                            Tags: {this.props.sandwich.tags.join(\", \")}\n                        </div>\n                        <div className=\"row\">\n                            Blurb: {this.props.sandwich.short_description}\n                        </div>\n                        <div className=\"row\">\n                            Grade versions:\n                        </div>\n                        <div className=\"row\">\n                            Related Modules:\n                        </div>\n                        <div className=\"row text-center\">\n                            <div className=\"col\">\n                                <h4> Resources:</h4>\n                                {this.props.sandwich.resources.map((resource, index) => <div className=\"container\" key={index}>\n                                    <a key={index} href={process.env.PUBLIC_URL + resource.url}>{resource.text}</a>\n                                </div>)}\n                                <div className=\"container\">\n                                    <a href={process.env.PUBLIC_URL + \"/sandwich/\" + this.props.sandwich.uid + \"/sandwich-\" + this.props.sandwich.uid + \".zip\"} className=\"btn btn-info\" role=\"button\">.ZIP File</a>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            Suggested Condiments:\n                            {this.props.sandwich.suggested_condiments ? this.props.sandwich.suggested_condiments.map((uid) => <div className=\"col-sm\" key={uid}>\n                                <CondimentCard uid={uid} />\n                            </div>) :\n                            <div className=\"col\">None</div>}\n                        </div>\n                    </div>\n\n                    <div className=\"col-3\">\n                        <NutritionFacts sandwichData={[this.props.sandwich]} />\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nSandwichPage.propTypes = {\n    sandwich: PropTypes.object.isRequired,\n}\n\nexport default SandwichPage;","var curricula_presets = {\n    \"curricula\": [\n    {\n        \"uid\": 1,\n        \"title\": \"Preset 1\",\n        \"sequence\": [1,2,3],\n    },\n    {\n        \"uid\": 2,\n        \"title\": \"Preset 2\",\n        \"sequence\": [3,2,5],\n    }],\n};\n\nexport default curricula_presets;","var data = {\n    \"all_modules\": [\n        {\n            \"uid\": 1,\n            \"title\": \"Cities of the Future\",\n            \"short_description\": \"Students envision what their communities will look like in the future, and create demonstrations that incorporate automation.\",\n            \"tags\": [\n                \"algorithms\",\n                \"Scratch\",\n                \"plugged\"\n            ],\n            \"resources\": [\n                {\n                    \"url\": \"/sandwich/1/image.png\",\n                    \"text\": \"Sandwich picture.\",\n                },\n                {\n                    \"url\": \"/sandwich/1/test.pdf\",\n                    \"text\": \"Here's a PDF!\",\n                }\n            ],\n            \"suggested_condiments\": [1,2],\n        },\n        {\n            \"uid\": 2,\n            \"title\": \"Creativity & AI\",\n            \"tags\": [\n                \"algorithms\",\n                \"Scratch\",\n                \"Teachable Machines\"\n            ],\n            \"resources\": [],\n            \"suggested_condiments\": [2],\n\n        },\n        {\n            \"uid\": 3,\n            \"title\": \"Debugging Detective\",\n            \"tags\": [\n                \"debugging\",\n                \"Scratch\",\n                \"human skills\"\n            ],\n            \"resources\": [],\n            \"suggested_condiments\": [1,3],\n        },\n        {\n            \"uid\": 4,\n            \"title\": \"DAILY AI\",\n            \"tags\": [\n                \"AI\"\n            ],\n            \"resources\": [],\n            \"suggested_condiments\": [1],\n        },\n        {\n            \"uid\": 5,\n            \"title\": \"Design Thinking Bootcamp\",\n            \"tags\": [\n                \"human skills\"\n            ],\n            \"resources\": [],\n        },\n        {\n            \"uid\": 6,\n            \"title\": \"Robot Race\",\n            \"tags\": [\n                \"debugging\",\n                \"Scratch\",\n                \"human skills\"\n            ],\n            \"resources\": [],\n            \"suggested_condiments\": [3],\n        },\n        {\n            \"uid\": 7,\n            \"title\": \"Seafloor Cleanup\",\n            \"tags\": [\n                \"debugging\",\n                \"Scratch\",\n                \"human skills\"\n            ],\n            \"resources\": [],\n        }\n    ]\n};\n\nexport default data;\n","import React from 'react';\n\nexport default React.createContext({}); ","import React, { Component } from \"react\";\n\nimport curricula_presets from '../../data/preset_curricula';\nimport data from \"../../data/all_modules\"\n\nimport Sandwich from \"../modules/Sandwich\";\nimport AppContext from \"../context/app_context\";\n\nimport { Link } from \"react-router-dom\";\n\nclass PresetCurricula extends React.Component {\n\n    getSandwichData(uid) {\n        let sandwiches = data.all_modules;\n        for (let i = 0; i < sandwiches.length; i++) {\n            if (sandwiches[i].uid === uid) {\n                return sandwiches[i];\n            }\n        }\n\n        throw new Error(\"module uid not found in data! (uid: \" + uid + \")\");\n    }\n\n    getCurriculaData(module_uid) {\n        let curricula = curricula_presets.curricula;\n        for (let i = 0; i < curricula.length; i++) {\n            if (curricula[i].uid === module_uid) {\n                return curricula[i];\n            }\n        }\n\n        throw new Error(\"curricula uid: not found in curricula_presets.js\");\n    }\n\n    loadPresetCurriculaInUserCurricula(module_uid) {\n        console.log(\"module_uid: \" + module_uid);\n        let presetCurricula = this.getCurriculaData(module_uid);\n\n        // this.context.clearUserCurriculum();\n        for (let i = 0; i < presetCurricula.sequence.length; i++) {\n            // for (let i = 0; i < 2; i++) {\n            let sandwichUID = presetCurricula.sequence[i];\n            console.log(\"Loading curricula preset uid=%s into slot=%s.\", sandwichUID, i);\n            this.context.updateSandwichInUserCurriculum(i, this.getSandwichData(sandwichUID))\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row Page-title\">\n                    <div className=\"col-sm\">\n                        <h1>Preset Curricula</h1>\n                    </div>\n                </div>\n                {curricula_presets.curricula.map((curricula) =>\n                    <div key={curricula.uid}>\n                        <div className=\"row\">\n                            <h3>{curricula.title}</h3>\n                            <Link to=\"/builder\">\n                                <button\n                                    className=\"btn btn-info\"\n                                    onClick={() => {\n                                        this.loadPresetCurriculaInUserCurricula(curricula.uid);\n                                    }}> Use this! </button>\n                            </Link>\n                        </div>\n                        <div className=\"row\">\n                            {\n                                curricula.sequence.map((uid) =>\n                                    <div key={uid} className=\"col-sm-4\">\n                                        <Sandwich\n                                            data={this.getSandwichData(uid)}\n                                        />\n                                    </div>)\n                            }\n                        </div>\n                    </div>\n                )}\n            </div>\n        )\n    }\n}\n\nPresetCurricula.contextType = AppContext;\n\nexport default PresetCurricula;","import \"../../styles.css\"\n\nfunction Home() {\n    return (\n        <>\n            <h1 className=\"Page-title\">Welcome to the home page</h1>\n            <div>\n                On this website you'll be able to:\n                <ul>\n                    <li>Browse all available sandwich modules</li>\n                    <li>Browse preset curricula</li>\n                    <li>Create your own curricula</li>\n                </ul>\n            </div>\n        </>\n    );\n\n}\n\nexport default Home;","import React, { Component } from \"react\";\nimport Sandwich from '../modules/Sandwich';\nimport FilterableSandwichContainer from \"../modules/FilterableSandwichContainer\";\n\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\nimport \"./../../styles.css\"\n\nimport data from \"../../data/all_modules\";\n\nclass AllModules extends React.Component {\n    render() {\n        return (\n            <DndProvider backend={HTML5Backend}>\n                <>\n                    <div className=\"Page-title\">\n                        <h1>Browse All Sandwiches</h1>\n                    </div>\n                    <div>\n                        <FilterableSandwichContainer\n                            sandwichData={data}\n                            draggableMode={false}\n                        />\n                    </div>\n                </>\n            </DndProvider>\n        )\n    }\n}\n\nexport default AllModules;","import React, { Component } from \"react\";\nimport CondimentCard from \"./CondimentCard\";\nimport PropTypes from 'prop-types';\n\n// TODO(bdnwang): Later on, consider whether we should share code with\n// FilterableSandwichContainer via a higher-order-component \"FilterableContainer\" \n// or something.\nclass FilterableCondimentContainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.onFilterTextChanged = this.onFilterTextChanged.bind(this);\n\n        this.state = {\n            indicesToShow: [...Array(this.props.data.condiments.length).keys()], // indices into sandwichData, indicating which values should be displayed\n        };\n    }\n\n    isMatching(data, searchText) {\n        searchText = searchText.toLowerCase();\n        // check tags for match\n        if (data.tags.join(\" \").toLowerCase().includes(searchText)) {\n            return true;\n        }\n\n        // check title for match\n        if (data.title.toLowerCase().includes(searchText)) {\n            return true;\n        }\n\n        // TODO: add more matching conditions\n        return false;\n    }\n\n    onFilterTextChanged(e) {\n        const searchText = e.target.value;\n        let newIndicesToShow = []\n\n        // if empty search text, show all results\n        console.log(\"searchText: %s\", searchText)\n        if (searchText.trim() === \"\") {\n            console.log(\"show all\");\n\n            newIndicesToShow = [...Array(this.props.data.condiments.length).keys()];\n            this.setState({ indicesToShow: newIndicesToShow });\n            return;\n        }\n\n\n        this.props.data.condiments.forEach((value, index) => {\n            if (this.isMatching(value, searchText)) {\n                newIndicesToShow.push(index);\n            }\n        });\n\n        this.setState({ indicesToShow: newIndicesToShow });\n    }\n\n    render() {\n        let filteredModules = this.props.data.condiments.filter((value, index) => {\n            return this.state.indicesToShow.includes(index);\n        });\n\n\n        return (\n            <>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-sm-2\">\n                            Filter:\n                        </div>\n                        <div className=\"col-sm-8\">\n                            <input id=\"searchField\" type=\"text\" className=\"form-control\" placeholder=\"Add search terms!\" onChange={this.onFilterTextChanged} />\n                        </div>\n                    </div>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            {filteredModules.map((module) =>\n                                <div className=\"col-sm-4\">\n                                    <CondimentCard uid={module.uid} />\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nFilterableCondimentContainer.propTypes = {\n    data: PropTypes.object.isRequired,\n}\n\n\nexport default FilterableCondimentContainer;","import React, { Component } from \"react\";\nimport FilterableCondimentContainer from \"../modules/FilterableCondimentContainer\";\n\n\nimport \"./../../styles.css\"\n\nimport data from \"../../data/all_condiments\";\n\nclass AllCondiments extends React.Component {\n    render() {\n        return (\n                <>\n                    <div className=\"Page-title\">\n                        <h1>Browse All Condiments</h1>\n                    </div>\n                    <div>\n                        <FilterableCondimentContainer\n                            data={data}\n                        />\n                    </div>\n                </>\n        )\n    }\n}\n\nexport default AllCondiments;","import React, { Component, useState } from 'react';\nimport './SandwichHolder.css';\n\nimport PropTypes from 'prop-types';\n\nimport ItemTypes from \"../../constants\";\n\nimport { DropTarget } from 'react-dnd';\n\nimport {\n    NavLink\n} from \"react-router-dom\";\n\nimport AppContext from \"../context/app_context\";\n\n// Represents a sandwich spot in the user's curriculum.\n// Takes an index into the curriculum sandwich list as a prop.\nclass SandwichHolder extends React.Component {\n    render() {\n\n        // Grab the props injected by React DnD\n        const { connectDropTarget } = this.props;\n\n        const heldSandwich = this.context.curriculumSandwiches[this.props.index];\n       \n        if (this.context.isSandwichSlotEmpty(this.props.index)) {\n            return connectDropTarget(<div className=\"Sandwich-holder-empty\"\n                style={{\n                    cursor: 'move',\n                }}\n            >\n                <h1>+</h1>\n                <em>(add a sandwich!)</em>\n            </div>);\n        } else {\n            return connectDropTarget(\n                <div className=\"Sandwich-holder\"\n                    style={{\n                        cursor: 'move',\n                    }}\n                >\n                    <h5>#{this.props.index + 1}</h5>\n                    <h3>{heldSandwich.title}</h3>\n                    <p>UID: {heldSandwich.uid}</p>\n                    <p>Tags: <em>{heldSandwich.tags.toString()}</em></p>\n                    {(heldSandwich.uid !== -1) && <NavLink to={\"/sandwich/\" + heldSandwich.uid}>See More</NavLink>}<br />\n                    <button type=\"button\" className=\"btn btn-warning\" onClick={() => this.context.deleteSandwichFromUserCurriculum(this.props.index)}>Remove</button>\n                </div>\n            );\n        }\n    }\n}\n\nSandwichHolder.propTypes = {\n    index: PropTypes.number.isRequired,\n}\n\nSandwichHolder.contextType = AppContext;\n\n// React DnD configuration\n\nconst sandwichTarget = {\n    drop(props, monitor, component) {\n        console.log(\"SandwichHolder: DROP\");\n        let data = monitor.getItem();\n        console.log(\"Data: %o\", data);\n        component.context.updateSandwichInUserCurriculum(props.index, data);\n    }\n}\n\nfunction collect(connect, monitor) {\n    return {\n        connectDropTarget: connect.dropTarget(),\n    }\n}\n\n\nexport default DropTarget(ItemTypes.SANDWICH, sandwichTarget, collect)(SandwichHolder);","import React, { Component } from \"react\";\nimport SandwichHolder from \"../modules/SandwichHolder\";\nimport NutritionFacts from \"../modules/NutritionFacts\";\n\nimport PropTypes from 'prop-types';\n\nimport AppContext from \"../context/app_context\";\nimport data from \"../../data/all_modules\"\nimport FilterableSandwichContainer from \"../modules/FilterableSandwichContainer\";\n\n// Displays the state of the user's curriculum sandwiches, along with \n// a filterable list of all sandwiches. \n// Sandwiches from the list can be dragged and dropped into the user's \n// curriculum slots to modify the curriculum.\nclass CurriculumBuilder extends React.Component {\n    render() {\n        const holderList = []\n        for (let i = 0; i < this.props.numSlots; i++) {\n            holderList.push(\n                <div className=\"col-sm\" key={i}>\n                    <SandwichHolder\n                        index={i}/>\n                </div>)\n        }\n\n        return (\n            <>\n                <div className=\"row\">\n                    <div className=\"col\">\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-9\">\n                        <div className=\"row\">\n                            {holderList}\n                        </div>\n                    </div>\n                    <div className=\"col-3\">\n                                <NutritionFacts sandwichData={this.context.curriculumSandwiches} />\n                    </div>\n                </div>\n                <button type=\"button\" className=\"btn btn-danger\" value=\"Clear Curriculum\" onClick={this.context.clearUserCurriculum}>\n                    Clear Curriculum\n                </button>\n                <hr />\n                <FilterableSandwichContainer\n                    sandwichData={data}\n                    draggableMode={true}\n                    isSandwichDraggable={this.context.isSandwichInUserCurriculum} />\n            </>\n        )\n    }\n\n}\n\nCurriculumBuilder.propTypes = {\n}\n\nCurriculumBuilder.contextType = AppContext;\n\nexport default CurriculumBuilder;\n","import React, { Component } from \"react\";\n\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\nimport \"./../../styles.css\"\n\nimport CurriculumBuilder from \"../modules/CurriculumBuilder\";\n\nclass BuildYourOwn extends React.Component {\n    render() {\n        return (\n            <DndProvider backend={HTML5Backend}>\n                <>\n                    <div className=\"col-sm Page-title\">\n                        <h1>Build Your Own Module</h1>\n                    </div>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                        </div>\n                        <CurriculumBuilder numSlots=\"3\"/>\n                    </div>\n                </>\n            </DndProvider>\n        )\n    }\n}\n\nexport default BuildYourOwn;","import './App.css';\nimport './../styles.css';\n\nimport React, { Component } from 'react';\n\nimport Navbar from './modules/Navbar';\nimport SandwichPage from './pages/SandwichPage';\nimport PresetCurricula from './pages/PresetCurricula';\n\nimport Home from './pages/Home';\nimport AllModules from './pages/AllModules';\nimport AllCondiments from './pages/AllCondiments';\nimport BuildYourOwn from \"./pages/BuildYourOwn\";\n\nimport data from \"../data/all_modules\";\nimport AppContext from \"./context/app_context\";\n\nimport {\n  Route,\n  Switch,\n} from \"react-router-dom\";\n\nconst EMPTY_SANDWICH_DATA = {};\n\nfunction setElementInCurriculumSandwiches(index, newValue) {\n  return (previousState, currentProps) => {\n    let newCurriculumSandwiches = previousState.curriculumSandwiches;\n    newCurriculumSandwiches[index] = newValue;\n    return { ... previousState, curriculumSandwiches: newCurriculumSandwiches};\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.clearUserCurriculum = this.clearUserCurriculum.bind(this);\n    this.isSandwichInUserCurriculum = this.isSandwichInUserCurriculum.bind(this);\n    this.deleteSandwichFromUserCurriculum = this.deleteSandwichFromUserCurriculum.bind(this);\n    this.updateSandwichInUserCurriculum = this.updateSandwichInUserCurriculum.bind(this);\n    this.isSandwichSlotEmpty = this.isSandwichSlotEmpty.bind(this);\n\n    // App-wide state propagated via React Context\n    this.state = {\n      curriculumSlots: 3,\n      curriculumSandwiches: [],\n    }\n\n    for (let i = 0; i < this.state.curriculumSlots; i++) {\n      this.state.curriculumSandwiches.push({});\n    }\n\n  }\n\n  // Must be careful with how we go about modifying the app-wide state\n  // because these mutators are called multiple times in quick succession.\n  // Because setState is asynchronous, if we don't use the reducer-esque API to\n  // modifying state (where we pass setState a function that transforms previousState and props into new state))\n  // then we risk losing changes in the batch.\n  // Good explanation: https://medium.com/@wereHamster/beware-react-setstate-is-asynchronous-ce87ef1a9cf3\n  clearUserCurriculum() {\n    for (let i = 0; i < this.state.curriculumSlots; i++) {\n      this.deleteSandwichFromUserCurriculum(i);\n    }\n  }\n\n  isSandwichInUserCurriculum(uid) {\n    for (let i = 0; i < this.state.curriculumSlots; i++) {\n      if (this.state.curriculumSandwiches[i].uid === uid) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  isSandwichSlotEmpty(index) {\n    console.log(\"isSandwichSlotEmpty(): \" + (Object.keys(this.state.curriculumSandwiches[index]).length === 0));\n    return Object.keys(this.state.curriculumSandwiches[index]).length === 0;\n  }\n\n  deleteSandwichFromUserCurriculum(index) {\n    this.updateSandwichInUserCurriculum(index, EMPTY_SANDWICH_DATA);\n  }\n\n  updateSandwichInUserCurriculum(index, newData) {\n    // Since we are actually modifying the state with thsi operation\n    // We use the reducer-y setState() interface\n    this.setState(setElementInCurriculumSandwiches(index, newData));\n  }\n\n  render() {\n    return (\n      <AppContext.Provider value={{\n        curriculumSlots: this.state.curriculumSlots,\n        curriculumSandwiches: this.state.curriculumSandwiches,\n        clearUserCurriculum: this.clearUserCurriculum,\n        isSandwichInUserCurriculum: this.isSandwichInUserCurriculum,\n        deleteSandwichFromUserCurriculum: this.deleteSandwichFromUserCurriculum,\n        updateSandwichInUserCurriculum: this.updateSandwichInUserCurriculum,\n        isSandwichSlotEmpty: this.isSandwichSlotEmpty,\n      }}>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            Ethical AI for Computational Action\n        </header>\n          <Navbar />\n          <Switch>\n            <Route path=\"/home\">\n              <Home />\n            </Route>\n\n\n            <Route path=\"/builder\">\n              <BuildYourOwn />\n            </Route>\n\n\n            <Route path=\"/presets\">\n              <PresetCurricula />\n            </Route>\n\n            <Route path=\"/all\">\n              <AllModules />\n            </Route>\n\n            <Route path=\"/condiments\">\n              <AllCondiments />\n            </Route>\n\n\n            {\n              // TODO: generate Routes for each module page\n              data.all_modules.map(module => {\n                return <Route key={module.uid} path={\"/sandwich/\" + module.uid}>\n                  <SandwichPage sandwich={module} />\n                </Route>\n              })\n            }\n\n            <Route path=\"/\">\n              <h1 className=\"Page-title\">404 - Page not found!</h1>\n            </Route>\n\n          </Switch>\n        </div>\n      </AppContext.Provider>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}