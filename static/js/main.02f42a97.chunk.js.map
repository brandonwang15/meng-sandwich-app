{"version":3,"sources":["components/modules/Navbar.js","components/modules/NutritionFacts.js","data/all_condiments.js","components/modules/CondimentCard.js","components/pages/SandwichPage.js","data/preset_curricula.js","data/all_modules.js","components/modules/Sandwich.js","components/context/app_context.js","components/pages/PresetCurricula.js","components/pages/Home.js","constants.js","components/modules/DraggableSandwich.js","components/modules/FilterableSandwichContainer.js","components/pages/AllModules.js","components/modules/FilterableCondimentContainer.js","components/pages/AllCondiments.js","components/modules/SandwichHolder.js","components/modules/CurriculumBuilder.js","components/pages/BuildYourOwn.js","components/App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","React","Component","NutritionFacts","sandwiches","allTags","Set","forEach","sw","Object","keys","length","tags","tag","add","Array","from","numSandwiches","this","props","sandwichData","wich","style","getCoveredTags","join","data","CondimentCard","condimentData","condiments","value","uid","title","short_description","toString","SandwichPage","sandwich","resources","map","resource","index","href","process","url","text","role","suggested_condiments","curricula_presets","Sandwich","defaultProps","createContext","PresetCurricula","all_modules","i","Error","module_uid","curricula","console","log","presetCurricula","getCurriculaData","sequence","sandwichUID","context","updateSandwichInUserCurriculum","getSandwichData","onClick","loadPresetCurriculaInUserCurricula","contextType","AppContext","Home","ItemTypes","SANDWICH","DraggableSandwich","useDrag","item","type","collect","monitor","isDragging","canDrag","begin","end","didDrop","getDropResult","drag","ref","opacity","cursor","FilterableSandwichContainer","onFilterTextChanged","bind","state","sandwichIndicesToShow","searchText","toLowerCase","includes","e","target","newSandwichIndicesToShow","trim","setState","isSandwichMatching","push","filteredModules","filter","draggableMode","id","placeholder","onChange","module","isSandwichDraggable","AllModules","DndProvider","backend","HTML5Backend","FilterableCondimentContainer","indicesToShow","newIndicesToShow","isMatching","AllCondiments","SandwichHolder","connectDropTarget","heldSandwich","curriculumSandwiches","isSandwichSlotEmpty","deleteSandwichFromUserCurriculum","sandwichTarget","drop","component","getItem","DropTarget","connect","dropTarget","CurriculumBuilder","holderList","numSlots","clearUserCurriculum","isSandwichInUserCurriculum","BuildYourOwn","EMPTY_SANDWICH_DATA","App","curriculumSlots","newData","newValue","previousState","currentProps","newCurriculumSandwiches","setElementInCurriculumSandwiches","Provider","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02f42a97.chunk.js","sourcesContent":["import './Navbar.css';\nimport React, { Component } from \"react\";\nimport {\n    BrowserRouter as Router,\n    NavLink\n} from \"react-router-dom\";\n\nclass Navbar extends React.Component {\n    // TODO: figure out how to get NavLinks working\n    render() {\n        return (\n                <div className=\"Navbar\">\n                    <nav>\n                    <ul>\n                        <NavLink to=\"/home\">Home</NavLink> \n                        {' '}|{' '}\n                        <NavLink to=\"/builder\">Build Your Curriculum</NavLink>\n                        {' '}|{' '}\n                        <NavLink to=\"/presets\">Preset Curriculum</NavLink>\n                        {' '}|{' '}\n                        <NavLink to=\"/all\">All Modules</NavLink>\n                        {' '}|{' '}\n                        <NavLink to=\"/condiments\">All Condiments</NavLink>\n                    </ul>\n                    </nav>\n\n                </div>\n        )\n    }\n}\n\nexport default Navbar;","import React, { Component } from \"react\";\nimport './NutritionFacts.js';\nimport './NutritionFacts.css';\nimport PropTypes from 'prop-types';\n\nclass NutritionFacts extends React.Component {\n    \n    // returns set of tags as a list\n    getCoveredTags(sandwiches) {\n        let allTags = new Set();\n\n        sandwiches.forEach(sw => {\n            if (Object.keys(sw).length !== 0) {\n                sw.tags.forEach(tag => allTags.add(tag));\n            }\n        });\n\n        return Array.from(allTags);\n    }\n\n    render() {\n        let numSandwiches = 0;\n\n        this.props.sandwichData.forEach((wich) => {\n            if (Object.keys(wich).length > 0) {\n                numSandwiches++;\n            }\n        });\n\n\n        return (<div className=\"container border border-nutrition-outline\">\n            <div className=\"row border-bottom border-nutrition-hr-thick\">\n                <div className=\"col-sm border-bottom\">\n                    <h3>Nutrition Facts</h3>\n                </div>\n            </div>\n            <div className=\"row border-bottom border-nutrition-hr-med\">\n                <div className=\"col-9\">\n                    # of modules:\n                </div>\n                <div className=\"col-3\">\n                    {numSandwiches}\n                </div>\n            </div>\n            <div className=\"row border-bottom border-nutrition-hr-thin text-left\">\n                <div className=\"col-12\">\n                    Tags covered:\n                </div>\n                <div className=\"col-12\" style={{\"fontSize\": \"12px\"}}>\n                    <em>\n                        {this.getCoveredTags(this.props.sandwichData).join(', ')}\n                    </em>\n                </div>\n            </div>\n            <div className=\"row border-bottom border-nutrition-hr-thin text-left\">\n                <div className=\"col-9\">\n                    Artificial Intelligence\n                </div>\n                <div className=\"col-3\">\n                    75%\n                </div>\n            </div>\n            <div className=\"row border-bottom border-nutrition-hr-thin text-left\">\n                <div className=\"col-9\">\n                    Computational Thinking\n                </div>\n                <div className=\"col-3\">\n                    90%\n                </div>\n            </div>\n            <div className=\"row border-bottom border-nutrition-hr-med text-left\">\n                <div className=\"col-9\">\n                    Design Thinking\n                </div>\n                <div className=\"col-3\">\n                    50%\n                </div>\n            </div>\n            <div className=\"row border-bottom border-nutrition-hr-thin text-left small-text\">\n                <div className=\"col-9\">\n                    Creativity\n                </div>\n                <div className=\"col-3\">\n                    Yes\n                </div>\n            </div>\n            <div className=\"row border-bottom border-nutrition-hr-thin text-left small-text\">\n                <div className=\"col-9\">\n                    Collaboration\n                </div>\n                <div className=\"col-3\">\n                    Yes\n                </div>\n            </div>\n            <div className=\"row border-nutrition-hr-thin text-left small-text\">\n                <div className=\"col-9\">\n                    Reflection\n                </div>\n                <div className=\"col-3\">\n                    Yes\n                </div>\n            </div>\n            \n        </div>)\n    }\n}\n\nNutritionFacts.propTypes = {\n    sandwichData: PropTypes.array.isRequired,\n}\n\nexport default NutritionFacts;","var data = {\n    \"condiments\": [\n        {\n            \"uid\": 1,\n            \"title\": \"Debugging\",\n            \"short_description\": \"Scratch classroom activity that encourages transferable debugging skills.\",\n            \"tags\": [\n                \"Scratch\",\n                \"plugged\"\n            ],\n            \"resources\": [\n                {\n                    \"url\": \"/condiment/1/image.png\",\n                    \"text\": \"Sandwich picture.\",\n                },\n                {\n                    \"url\": \"/condiment/1/test.pdf\",\n                    \"text\": \"Here's a PDF!\",\n                }\n            ]\n        }, \n        {\n            \"uid\": 2,\n            \"title\": \"Design Thinking\",\n            \"short_description\": \"1 hour design thinking activity to familiarize students with the DT process.\",\n            \"tags\": [\n                \"unplugged\",\n                \"design thinking\"\n            ],\n            \"resources\": [\n                {\n                    \"url\": \"/condiment/1/image.png\",\n                    \"text\": \"Sandwich picture.\",\n                },\n                {\n                    \"url\": \"/condiment/1/test.pdf\",\n                    \"text\": \"Here's a PDF!\",\n                }\n            ]\n        },    \n        {\n            \"uid\": 3,\n            \"title\": \"Scratch Review\",\n            \"short_description\": \"A refresher for students who have seen Scratch before, but could use a warm up before jumping back into hands-on work.\",\n            \"tags\": [\n                \"Scratch\"\n            ],\n            \"resources\": [\n                {\n                    \"url\": \"/condiment/1/image.png\",\n                    \"text\": \"Sandwich picture.\",\n                },\n                {\n                    \"url\": \"/condiment/1/test.pdf\",\n                    \"text\": \"Here's a PDF!\",\n                }\n            ]\n        },    \n    ]\n};\n\nexport default data;\n","import React, { Component } from 'react';\n\nimport './CondimentCard.css';\n\nimport {\n    NavLink\n} from \"react-router-dom\";\n\nimport data from '../../data/all_condiments';\n\nimport PropTypes from 'prop-types';\n\nclass CondimentCard extends React.Component {\n    render() {\n        let condimentData = {};\n\n        data.condiments.forEach((value) => {\n            if (value.uid === this.props.uid) {\n                condimentData = value;\n            }\n        });\n\n        return (\n            <div className=\"Condiment-container\" >\n                <b>{condimentData.title}</b>\n                <p><em>{condimentData.short_description}</em></p>\n                <p>Tags: {condimentData.tags.toString()}</p>\n                <NavLink to={\"/condiment/\"+condimentData.uid}>See More</NavLink>\n                <p>UID: {condimentData.uid}</p>\n            </div>\n        )\n    }\n}\n\nCondimentCard.propTypes = {\n    uid: PropTypes.number.isRequired,\n}\n\nexport default CondimentCard;","import \"./../../styles.css\"\nimport React, { Component } from \"react\";\n\nimport NutritionFacts from \"../modules/NutritionFacts\";\nimport CondimentCard from \"../modules/CondimentCard\";\n\nimport PropTypes from 'prop-types';\n\nclass SandwichPage extends React.Component {\n    render() {\n\n        return (\n            <div className=\"container\">\n                <div className=\"row Page-title\">\n                    <div className=\"col-sm\">\n                        <h1>{this.props.sandwich.title}</h1>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-9 text-left\">\n                        <div className=\"row\">\n                            Tags: {this.props.sandwich.tags.join(\", \")}\n                        </div>\n                        <div className=\"row\">\n                            Blurb: {this.props.sandwich.short_description}\n                        </div>\n                        <div className=\"row\">\n                            Grade versions:\n                        </div>\n                        <div className=\"row\">\n                            Related Modules:\n                        </div>\n                        <div className=\"row text-center\">\n                            <div className=\"col\">\n                                <h4> Resources:</h4>\n                                {this.props.sandwich.resources.map((resource, index) => <div className=\"container\" key={index}>\n                                    <a key={index} href={process.env.PUBLIC_URL + resource.url}>{resource.text}</a>\n                                </div>)}\n                                <div className=\"container\">\n                                    <a href={process.env.PUBLIC_URL + \"/sandwich/\" + this.props.sandwich.uid + \"/sandwich-\" + this.props.sandwich.uid + \".zip\"} className=\"btn btn-info\" role=\"button\">.ZIP File</a>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            Suggested Condiments:\n                            {this.props.sandwich.suggested_condiments ? this.props.sandwich.suggested_condiments.map((uid) => <div className=\"col-sm\" key={uid}>\n                                <CondimentCard uid={uid} />\n                            </div>) :\n                            <div className=\"col\">None</div>}\n                        </div>\n                    </div>\n\n                    <div className=\"col-3\">\n                        <NutritionFacts sandwichData={[this.props.sandwich]} />\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nSandwichPage.propTypes = {\n    sandwich: PropTypes.object.isRequired,\n}\n\nexport default SandwichPage;","var curricula_presets = {\n    \"curricula\": [\n    {\n        \"uid\": 1,\n        \"title\": \"Preset 1\",\n        \"sequence\": [1,2,3],\n    },\n    {\n        \"uid\": 2,\n        \"title\": \"Preset 2\",\n        \"sequence\": [3,2,5],\n    }],\n};\n\nexport default curricula_presets;","var data = {\n    \"all_modules\": [\n        {\n            \"uid\": 1,\n            \"title\": \"Cities of the Future\",\n            \"short_description\": \"Students envision what their communities will look like in the future, and create demonstrations that incorporate automation.\",\n            \"tags\": [\n                \"algorithms\",\n                \"Scratch\",\n                \"plugged\"\n            ],\n            \"resources\": [\n                {\n                    \"url\": \"/sandwich/1/image.png\",\n                    \"text\": \"Sandwich picture.\",\n                },\n                {\n                    \"url\": \"/sandwich/1/test.pdf\",\n                    \"text\": \"Here's a PDF!\",\n                }\n            ],\n            \"suggested_condiments\": [1,2],\n        },\n        {\n            \"uid\": 2,\n            \"title\": \"Creativity & AI\",\n            \"tags\": [\n                \"algorithms\",\n                \"Scratch\",\n                \"Teachable Machines\"\n            ],\n            \"resources\": [],\n            \"suggested_condiments\": [2],\n\n        },\n        {\n            \"uid\": 3,\n            \"title\": \"Debugging Detective\",\n            \"tags\": [\n                \"debugging\",\n                \"Scratch\",\n                \"human skills\"\n            ],\n            \"resources\": [],\n            \"suggested_condiments\": [1,3],\n        },\n        {\n            \"uid\": 4,\n            \"title\": \"DAILY AI\",\n            \"tags\": [\n                \"AI\"\n            ],\n            \"resources\": [],\n            \"suggested_condiments\": [1],\n        },\n        {\n            \"uid\": 5,\n            \"title\": \"Design Thinking Bootcamp\",\n            \"tags\": [\n                \"human skills\"\n            ],\n            \"resources\": [],\n        },\n        {\n            \"uid\": 6,\n            \"title\": \"Robot Race\",\n            \"tags\": [\n                \"debugging\",\n                \"Scratch\",\n                \"human skills\"\n            ],\n            \"resources\": [],\n            \"suggested_condiments\": [3],\n        },\n        {\n            \"uid\": 7,\n            \"title\": \"Seafloor Cleanup\",\n            \"tags\": [\n                \"debugging\",\n                \"Scratch\",\n                \"human skills\"\n            ],\n            \"resources\": [],\n        }\n    ]\n};\n\nexport default data;\n","import React, { Component } from 'react';\nimport './Sandwich.css';\n\nimport {\n    NavLink\n} from \"react-router-dom\";\n\n\nimport PropTypes from 'prop-types';\n\nclass Sandwich extends React.Component {\n    render() {\n        return (\n            <div className=\"Sandwich-container\" >\n                <h3>{this.props.data.title}</h3>\n                <p><em>{this.props.data.short_description}</em></p>\n                <p>Tags: {this.props.data.tags.toString()}</p>\n                <NavLink to={\"/sandwich/\"+this.props.data.uid}>See More</NavLink>\n                <p>UID: {this.props.data.uid}</p>\n            </div>\n        )\n    }\n}\n\nSandwich.propTypes = {\n    data: PropTypes.object.isRequired,\n}\n\nSandwich.defaultProps = {\n    data: {\n        \"uid\": -1,\n        \"title\": \"N/A\",\n        \"tags\": []\n    }\n}\n\nexport default Sandwich;","import React from 'react';\n\nexport default React.createContext({}); ","import React, { Component } from \"react\";\n\nimport curricula_presets from '../../data/preset_curricula';\nimport data from \"../../data/all_modules\"\n\nimport Sandwich from \"../modules/Sandwich\";\nimport AppContext from \"../context/app_context\";\n\nimport { Link } from \"react-router-dom\";\n\nclass PresetCurricula extends React.Component {\n\n    getSandwichData(uid) {\n        let sandwiches = data.all_modules;\n        for (let i = 0; i < sandwiches.length; i++) {\n            if (sandwiches[i].uid === uid) {\n                return sandwiches[i];\n            }\n        }\n\n        throw new Error(\"module uid not found in data! (uid: \" + uid + \")\");\n    }\n\n    getCurriculaData(module_uid) {\n        let curricula = curricula_presets.curricula;\n        for (let i = 0; i < curricula.length; i++) {\n            if (curricula[i].uid === module_uid) {\n                return curricula[i];\n            }\n        }\n\n        throw new Error(\"curricula uid: not found in curricula_presets.js\");\n    }\n\n    loadPresetCurriculaInUserCurricula(module_uid) {\n        console.log(\"module_uid: \" + module_uid);\n        let presetCurricula = this.getCurriculaData(module_uid);\n\n        // this.context.clearUserCurriculum();\n        for (let i = 0; i < presetCurricula.sequence.length; i++) {\n            // for (let i = 0; i < 2; i++) {\n            let sandwichUID = presetCurricula.sequence[i];\n            console.log(\"Loading curricula preset uid=%s into slot=%s.\", sandwichUID, i);\n            this.context.updateSandwichInUserCurriculum(i, this.getSandwichData(sandwichUID))\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row Page-title\">\n                    <div className=\"col-sm\">\n                        <h1>Preset Curricula</h1>\n                    </div>\n                </div>\n                {curricula_presets.curricula.map((curricula) =>\n                    <div key={curricula.uid}>\n                        <div className=\"row\">\n                            <h3>{curricula.title}</h3>\n                            <Link to=\"/builder\">\n                                <button\n                                    className=\"btn btn-info\"\n                                    onClick={() => {\n                                        this.loadPresetCurriculaInUserCurricula(curricula.uid);\n                                    }}> Use this! </button>\n                            </Link>\n                        </div>\n                        <div className=\"row\">\n                            {\n                                curricula.sequence.map((uid) =>\n                                    <div key={uid} className=\"col\">\n                                        <Sandwich\n                                            data={this.getSandwichData(uid)}\n                                        />\n                                    </div>)\n                            }\n                        </div>\n                    </div>\n                )}\n            </div>\n        )\n    }\n}\n\nPresetCurricula.contextType = AppContext;\n\nexport default PresetCurricula;","import \"../../styles.css\"\n\nfunction Home() {\n    return (\n        <>\n            <h1 className=\"Page-title\">Welcome to the home page</h1>\n            <div>\n                On this website you'll be able to:\n                <ul>\n                    <li>Browse all available sandwich modules</li>\n                    <li>Browse preset curricula</li>\n                    <li>Create your own curricula</li>\n                </ul>\n            </div>\n        </>\n    );\n\n}\n\nexport default Home;","const ItemTypes = {\n    SANDWICH: 'sandwich',\n};\n\nexport default ItemTypes; ","import React, { Component } from 'react';\nimport './DraggableSandwich.css';\n\nimport PropTypes from 'prop-types';\n\nimport ItemTypes from \"../../constants\";\n\nimport { useDrag } from 'react-dnd';\n\nimport {\n    NavLink\n} from \"react-router-dom\";\n\n// Draggable component that displays a 'thumbnail' card for the given sandwich object.\nfunction DraggableSandwich(props) {\n    const [{isDragging}, drag] = useDrag({\n        item: { type: ItemTypes.SANDWICH },\n        collect: monitor => ({\n            isDragging: !!monitor.isDragging(),\n        }),\n        canDrag: () => props.canDrag,\n        begin: () => {\n            return props.data;\n        },\n        end: (item, monitor) => {\n            console.log(\"DraggableSandwich: END DRAG. didDrop=%s; dropResult=%s.\", monitor.didDrop(), monitor.getDropResult());\n        },\n        });\n\n    return (\n        <div className={\"Draggable-sandwich-container \" + (props.canDrag ? \"enabled\" : \"disabled\")}\n            ref={drag}\n            style={{\n                opacity: isDragging ? 0.5 : 1,\n                cursor: 'move',\n            }}\n        >\n            <h3>{props.data.title}</h3>\n            <p>UID: {props.data.uid}</p>\n            <p>Tags: {props.data.tags.toString()}</p>\n            <NavLink to={\"/sandwich/\"+props.data.uid}>See More</NavLink>\n        </div>\n    )\n}\n\nDraggableSandwich.propTypes = {\n    data: PropTypes.object.isRequired,\n    canDrag: PropTypes.bool.isRequired,\n}\n\nDraggableSandwich.defaultProps = {\n    data: {\n        \"uid\": -1,\n        \"title\": \"N/A\",\n        \"tags\": []\n    }\n}\n\nexport default DraggableSandwich;","import React, { Component } from \"react\";\nimport DraggableSandwich from \"./DraggableSandwich\";\nimport Sandwich from \"./Sandwich\";\nimport PropTypes from 'prop-types';\n\nclass FilterableSandwichContainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.onFilterTextChanged = this.onFilterTextChanged.bind(this);\n\n        this.state = {\n            sandwichIndicesToShow: [...Array(this.props.sandwichData.all_modules.length).keys()], // indices into sandwichData, indicating which sandwiches should be displayed\n        };\n    }\n\n    isSandwichMatching(data, searchText) {\n        searchText = searchText.toLowerCase();\n        // check tags for match\n        if (data.tags.join(\" \").toLowerCase().includes(searchText)) {\n            return true;\n        }\n\n        // check title for match\n        if (data.title.toLowerCase().includes(searchText)) {\n            return true;\n        }\n\n        // TODO: add more matching conditions\n        return false;\n    }\n\n    onFilterTextChanged(e) {\n        const searchText = e.target.value;\n        let newSandwichIndicesToShow = []\n\n        // if empty search text, show all results\n        console.log(\"searchText: %s\", searchText)\n        if (searchText.trim() === \"\") {\n            console.log(\"show all\");\n         \n            newSandwichIndicesToShow = [...Array(this.props.sandwichData.all_modules.length).keys()]; \n            this.setState({sandwichIndicesToShow: newSandwichIndicesToShow});\n            return;\n        }\n\n\n        this.props.sandwichData.all_modules.forEach((value, index) => {\n            if (this.isSandwichMatching(value, searchText)) {\n                newSandwichIndicesToShow.push(index);\n            }\n        });\n\n        this.setState({sandwichIndicesToShow: newSandwichIndicesToShow});\n    }\n\n    render() {\n        let filteredModules = this.props.sandwichData.all_modules.filter((value, index) => {\n            return this.state.sandwichIndicesToShow.includes(index);\n        });\n\n        if (this.props.draggableMode) {\n            return (\n                <>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-sm-2\">\n                                Filter:\n                            </div>\n                            <div className=\"col-sm-8\">\n                                <input id=\"searchField\" type=\"text\" className=\"form-control\" placeholder=\"Add search terms!\" onChange={this.onFilterTextChanged}/>\n                            </div>\n                        </div>\n    \n                        {filteredModules.map((module) => {\n                            let sandwichDiv = <div className=\"col-sm\" key={module.uid}>\n                                    <DraggableSandwich\n                                        data={module}\n                                        canDrag={!this.props.isSandwichDraggable(module.uid)}\n                                    />\n                                </div>;\n                                return sandwichDiv;\n                        }\n                        )}\n                    </div>\n                </>\n            )\n\n\n        } else {\n            return (\n                <>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-sm-2\">\n                                Filter:\n                            </div>\n                            <div className=\"col-sm-8\">\n                                <input id=\"searchField\" type=\"text\" className=\"form-control\" placeholder=\"Add search terms!\" onChange={this.onFilterTextChanged}/>\n                            </div>\n                        </div>\n    \n                        {filteredModules.map((module) =>\n                            <div key={module.uid} className=\"row\">\n                                <div className=\"col-sm\">\n                                    <Sandwich\n                                        data={module}\n                                    />\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                </>\n            )\n        }\n    }\n}\n\nFilterableSandwichContainer.propTypes = {\n    sandwichData: PropTypes.object.isRequired,\n    draggableMode: PropTypes.bool.isRequired,\n    // TODO: this whole draggable flow is a candidate for refactoring\n    isSandwichDraggable: PropTypes.func, // a function that determines whether the sandwich with the given uid is draggable\n}\n\n\nexport default FilterableSandwichContainer;","import React, { Component } from \"react\";\nimport Sandwich from '../modules/Sandwich';\nimport FilterableSandwichContainer from \"../modules/FilterableSandwichContainer\";\n\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\nimport \"./../../styles.css\"\n\nimport data from \"../../data/all_modules\";\n\nclass AllModules extends React.Component {\n    render() {\n        return (\n            <DndProvider backend={HTML5Backend}>\n                <>\n                    <div className=\"Page-title\">\n                        <h1>Browse All Sandwiches</h1>\n                    </div>\n                    <div>\n                        <FilterableSandwichContainer\n                            sandwichData={data}\n                            draggableMode={false}\n                        />\n                    </div>\n                </>\n            </DndProvider>\n        )\n    }\n}\n\nexport default AllModules;","import React, { Component } from \"react\";\nimport CondimentCard from \"./CondimentCard\";\nimport PropTypes from 'prop-types';\n\n// TODO(bdnwang): Later on, consider whether we should share code with\n// FilterableSandwichContainer via a higher-order-component \"FilterableContainer\" \n// or something.\nclass FilterableCondimentContainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.onFilterTextChanged = this.onFilterTextChanged.bind(this);\n\n        this.state = {\n            indicesToShow: [...Array(this.props.data.condiments.length).keys()], // indices into sandwichData, indicating which values should be displayed\n        };\n    }\n\n    isMatching(data, searchText) {\n        searchText = searchText.toLowerCase();\n        // check tags for match\n        if (data.tags.join(\" \").toLowerCase().includes(searchText)) {\n            return true;\n        }\n\n        // check title for match\n        if (data.title.toLowerCase().includes(searchText)) {\n            return true;\n        }\n\n        // TODO: add more matching conditions\n        return false;\n    }\n\n    onFilterTextChanged(e) {\n        const searchText = e.target.value;\n        let newIndicesToShow = []\n\n        // if empty search text, show all results\n        console.log(\"searchText: %s\", searchText)\n        if (searchText.trim() === \"\") {\n            console.log(\"show all\");\n         \n            newIndicesToShow = [...Array(this.props.data.condiments.length).keys()]; \n            this.setState({indicesToShow: newIndicesToShow});\n            return;\n        }\n\n\n        this.props.data.condiments.forEach((value, index) => {\n            if (this.isMatching(value, searchText)) {\n                newIndicesToShow.push(index);\n            }\n        });\n\n        this.setState({indicesToShow: newIndicesToShow});\n    }\n\n    render() {\n        let filteredModules = this.props.data.condiments.filter((value, index) => {\n            return this.state.indicesToShow.includes(index);\n        });\n\n       \n        return (\n            <>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-sm-2\">\n                            Filter:\n                        </div>\n                        <div className=\"col-sm-8\">\n                            <input id=\"searchField\" type=\"text\" className=\"form-control\" placeholder=\"Add search terms!\" onChange={this.onFilterTextChanged}/>\n                        </div>\n                    </div>\n\n                    {filteredModules.map((module) =>\n                        <div key={module.uid} className=\"row\">\n                            <div className=\"col-sm\">\n                                <CondimentCard uid={module.uid}/>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nFilterableCondimentContainer.propTypes = {\n    data: PropTypes.object.isRequired,\n}\n\n\nexport default FilterableCondimentContainer;","import React, { Component } from \"react\";\nimport FilterableCondimentContainer from \"../modules/FilterableCondimentContainer\";\n\n\nimport \"./../../styles.css\"\n\nimport data from \"../../data/all_condiments\";\n\nclass AllCondiments extends React.Component {\n    render() {\n        return (\n                <>\n                    <div className=\"Page-title\">\n                        <h1>Browse All Condiments</h1>\n                    </div>\n                    <div>\n                        <FilterableCondimentContainer\n                            data={data}\n                        />\n                    </div>\n                </>\n        )\n    }\n}\n\nexport default AllCondiments;","import React, { Component, useState } from 'react';\nimport './SandwichHolder.css';\n\nimport PropTypes from 'prop-types';\n\nimport ItemTypes from \"../../constants\";\n\nimport { DropTarget } from 'react-dnd';\n\nimport {\n    NavLink\n} from \"react-router-dom\";\n\nimport AppContext from \"../context/app_context\";\n\n// Represents a sandwich spot in the user's curriculum.\n// Takes an index into the curriculum sandwich list as a prop.\nclass SandwichHolder extends React.Component {\n    render() {\n\n        // Grab the props injected by React DnD\n        const { connectDropTarget } = this.props;\n\n        const heldSandwich = this.context.curriculumSandwiches[this.props.index];\n       \n        if (this.context.isSandwichSlotEmpty(this.props.index)) {\n            return connectDropTarget(<div className=\"Sandwich-holder-empty\"\n                style={{\n                    cursor: 'move',\n                }}\n            >\n                <h1>+</h1>\n                <em>(add a sandwich!)</em>\n            </div>);\n        } else {\n            return connectDropTarget(\n                <div className=\"Sandwich-holder\"\n                    style={{\n                        cursor: 'move',\n                    }}\n                >\n                    <h1>#{this.props.index}</h1>\n                    <h3>{heldSandwich.title}</h3>\n                    <p>UID: {heldSandwich.uid}</p>\n                    <p>Tags: <em>{heldSandwich.tags.toString()}</em></p>\n                    {(heldSandwich.uid !== -1) && <NavLink to={\"/sandwich/\" + heldSandwich.uid}>See More</NavLink>}<br />\n                    <button type=\"button\" className=\"btn btn-warning\" onClick={() => this.context.deleteSandwichFromUserCurriculum(this.props.index)}>Remove</button>\n                </div>\n            );\n        }\n    }\n}\n\nSandwichHolder.propTypes = {\n    index: PropTypes.number.isRequired,\n}\n\nSandwichHolder.contextType = AppContext;\n\n// React DnD configuration\n\nconst sandwichTarget = {\n    drop(props, monitor, component) {\n        console.log(\"SandwichHolder: DROP\");\n        let data = monitor.getItem();\n        console.log(\"Data: %o\", data);\n        component.context.updateSandwichInUserCurriculum(props.index, data);\n    }\n}\n\nfunction collect(connect, monitor) {\n    return {\n        connectDropTarget: connect.dropTarget(),\n    }\n}\n\n\nexport default DropTarget(ItemTypes.SANDWICH, sandwichTarget, collect)(SandwichHolder);","import React, { Component } from \"react\";\nimport SandwichHolder from \"../modules/SandwichHolder\";\nimport NutritionFacts from \"../modules/NutritionFacts\";\n\nimport PropTypes from 'prop-types';\n\nimport AppContext from \"../context/app_context\";\nimport data from \"../../data/all_modules\"\nimport FilterableSandwichContainer from \"../modules/FilterableSandwichContainer\";\n\n// Displays the state of the user's curriculum sandwiches, along with \n// a filterable list of all sandwiches. \n// Sandwiches from the list can be dragged and dropped into the user's \n// curriculum slots to modify the curriculum.\nclass CurriculumBuilder extends React.Component {\n    render() {\n        const holderList = []\n        for (let i = 0; i < this.props.numSlots; i++) {\n            holderList.push(\n                <div className=\"col-sm\" key={i}>\n                    <SandwichHolder\n                        index={i}/>\n                </div>)\n        }\n\n        return (\n            <>\n                <div className=\"row\">\n                    <div className=\"col\">\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-9\">\n                        <div className=\"row\">\n                            {holderList}\n                        </div>\n                    </div>\n                    <div className=\"col-3\">\n                                <NutritionFacts sandwichData={this.context.curriculumSandwiches} />\n                    </div>\n                </div>\n                <button type=\"button\" className=\"btn btn-danger\" value=\"Clear Curriculum\" onClick={this.context.clearUserCurriculum}>\n                    Clear Curriculum\n                </button>\n                <hr />\n                <FilterableSandwichContainer\n                    sandwichData={data}\n                    draggableMode={true}\n                    isSandwichDraggable={this.context.isSandwichInUserCurriculum} />\n            </>\n        )\n    }\n\n}\n\nCurriculumBuilder.propTypes = {\n}\n\nCurriculumBuilder.contextType = AppContext;\n\nexport default CurriculumBuilder;\n","import React, { Component } from \"react\";\n\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\nimport \"./../../styles.css\"\n\nimport CurriculumBuilder from \"../modules/CurriculumBuilder\";\n\nclass BuildYourOwn extends React.Component {\n    render() {\n        return (\n            <DndProvider backend={HTML5Backend}>\n                <>\n                    <div className=\"col-sm Page-title\">\n                        <h1>Build Your Own Module</h1>\n                    </div>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                        </div>\n                        <CurriculumBuilder numSlots=\"3\"/>\n                    </div>\n                </>\n            </DndProvider>\n        )\n    }\n}\n\nexport default BuildYourOwn;","import './App.css';\nimport './../styles.css';\n\nimport React, { Component } from 'react';\n\nimport Navbar from './modules/Navbar';\nimport SandwichPage from './pages/SandwichPage';\nimport PresetCurricula from './pages/PresetCurricula';\n\nimport Home from './pages/Home';\nimport AllModules from './pages/AllModules';\nimport AllCondiments from './pages/AllCondiments';\nimport BuildYourOwn from \"./pages/BuildYourOwn\";\n\nimport data from \"../data/all_modules\";\nimport AppContext from \"./context/app_context\";\n\nimport {\n  Route,\n  Switch,\n} from \"react-router-dom\";\n\nconst EMPTY_SANDWICH_DATA = {};\n\nfunction setElementInCurriculumSandwiches(index, newValue) {\n  return (previousState, currentProps) => {\n    let newCurriculumSandwiches = previousState.curriculumSandwiches;\n    newCurriculumSandwiches[index] = newValue;\n    return { ... previousState, curriculumSandwiches: newCurriculumSandwiches};\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.clearUserCurriculum = this.clearUserCurriculum.bind(this);\n    this.isSandwichInUserCurriculum = this.isSandwichInUserCurriculum.bind(this);\n    this.deleteSandwichFromUserCurriculum = this.deleteSandwichFromUserCurriculum.bind(this);\n    this.updateSandwichInUserCurriculum = this.updateSandwichInUserCurriculum.bind(this);\n    this.isSandwichSlotEmpty = this.isSandwichSlotEmpty.bind(this);\n\n    // App-wide state propagated via React Context\n    this.state = {\n      curriculumSlots: 3,\n      curriculumSandwiches: [],\n    }\n\n    for (let i = 0; i < this.state.curriculumSlots; i++) {\n      this.state.curriculumSandwiches.push({});\n    }\n\n  }\n\n  // Must be careful with how we go about modifying the app-wide state\n  // because these mutators are called multiple times in quick succession.\n  // Because setState is asynchronous, if we don't use the reducer-esque API to\n  // modifying state (where we pass setState a function that transforms previousState and props into new state))\n  // then we risk losing changes in the batch.\n  // Good explanation: https://medium.com/@wereHamster/beware-react-setstate-is-asynchronous-ce87ef1a9cf3\n  clearUserCurriculum() {\n    for (let i = 0; i < this.state.curriculumSlots; i++) {\n      this.deleteSandwichFromUserCurriculum(i);\n    }\n  }\n\n  isSandwichInUserCurriculum(uid) {\n    for (let i = 0; i < this.state.curriculumSlots; i++) {\n      if (this.state.curriculumSandwiches[i].uid === uid) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  isSandwichSlotEmpty(index) {\n    console.log(\"isSandwichSlotEmpty(): \" + (Object.keys(this.state.curriculumSandwiches[index]).length === 0));\n    return Object.keys(this.state.curriculumSandwiches[index]).length === 0;\n  }\n\n  deleteSandwichFromUserCurriculum(index) {\n    this.updateSandwichInUserCurriculum(index, EMPTY_SANDWICH_DATA);\n  }\n\n  updateSandwichInUserCurriculum(index, newData) {\n    // Since we are actually modifying the state with thsi operation\n    // We use the reducer-y setState() interface\n    this.setState(setElementInCurriculumSandwiches(index, newData));\n  }\n\n  render() {\n    return (\n      <AppContext.Provider value={{\n        curriculumSlots: this.state.curriculumSlots,\n        curriculumSandwiches: this.state.curriculumSandwiches,\n        clearUserCurriculum: this.clearUserCurriculum,\n        isSandwichInUserCurriculum: this.isSandwichInUserCurriculum,\n        deleteSandwichFromUserCurriculum: this.deleteSandwichFromUserCurriculum,\n        updateSandwichInUserCurriculum: this.updateSandwichInUserCurriculum,\n        isSandwichSlotEmpty: this.isSandwichSlotEmpty,\n      }}>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            Ethical AI for Computational Action\n        </header>\n          <Navbar />\n          <Switch>\n            <Route path=\"/home\">\n              <Home />\n            </Route>\n\n\n            <Route path=\"/builder\">\n              <BuildYourOwn />\n            </Route>\n\n\n            <Route path=\"/presets\">\n              <PresetCurricula />\n            </Route>\n\n            <Route path=\"/all\">\n              <AllModules />\n            </Route>\n\n            <Route path=\"/condiments\">\n              <AllCondiments />\n            </Route>\n\n\n            {\n              // TODO: generate Routes for each module page\n              data.all_modules.map(module => {\n                return <Route key={module.uid} path={\"/sandwich/\" + module.uid}>\n                  <SandwichPage sandwich={module} />\n                </Route>\n              })\n            }\n\n            <Route path=\"/\">\n              <h1 className=\"Page-title\">404 - Page not found!</h1>\n            </Route>\n\n          </Switch>\n        </div>\n      </AppContext.Provider>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}