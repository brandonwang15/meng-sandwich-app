{"version":3,"sources":["components/modules/Sandwich.js","components/modules/Navbar.js","components/pages/SandwichPage.js","components/pages/Home.js","constants.js","components/modules/DraggableSandwich.js","data/all_modules.js","components/pages/AllModules.js","components/modules/SandwichHolder.js","components/modules/NutritionFacts.js","components/modules/CurriculumBuilder.js","components/pages/BuildYourOwn.js","components/App.js","reportWebVitals.js","index.js"],"names":["Sandwich","className","this","props","data","title","uid","tags","toString","React","Component","defaultProps","Navbar","to","SandwichPage","class","sandwich","join","Home","ItemTypes","SANDWICH","DraggableSandwich","useDrag","item","type","collect","monitor","isDragging","begin","end","console","log","didDrop","getDropResult","drag","ref","style","opacity","cursor","AllModules","DndProvider","backend","HTML5Backend","all_modules","map","module","SandwichHolder","useDrop","accept","drop","getItem","onSandwichUpdate","index","sandwichData","value","onClick","clearSandwich","NutritionFacts","sandwiches","allTags","Set","forEach","sw","tag","add","Array","from","numSandwiches","wich","getCoveredTags","emptySandwich","CurriculumBuilder","handleSandwichHolderUpdate","bind","clearSandwichHolder","clearAll","state","i","numSlots","push","indexToClear","indexToUpdate","newData","updatedSandwichData","j","setState","holderList","BuildYourOwn","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fec798a5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Sandwich.css';\n\nimport PropTypes from 'prop-types';\n\nclass Sandwich extends React.Component {\n    render() {\n        return (\n            <div className=\"Sandwich-container\" >\n                <h3>Title: {this.props.data.title}</h3>\n                <p>UID: {this.props.data.uid}</p>\n                <p>Tags: {this.props.data.tags.toString()}</p>\n            </div>\n        )\n    }\n}\n\nSandwich.propTypes = {\n    data: PropTypes.object.isRequired,\n}\n\nSandwich.defaultProps = {\n    data: {\n        \"uid\": -1,\n        \"title\": \"N/A\",\n        \"tags\": []\n    }\n}\n\nexport default Sandwich;","import './Navbar.css';\nimport React, { Component } from \"react\";\nimport {\n    BrowserRouter as Router,\n    NavLink\n} from \"react-router-dom\";\n\nclass Navbar extends React.Component {\n    // TODO: figure out how to get NavLinks working\n    render() {\n        return (\n                <div className=\"Navbar\">\n                    <nav>\n                    <ul>\n                        <NavLink to=\"/home\">Home</NavLink> \n                        {' '}|{' '}\n                        <NavLink to=\"/builder\">Build Your Curriculum</NavLink>\n                        {' '}|{' '}\n                        <NavLink to=\"/presets\">Preset Curriculum</NavLink>\n                        {' '}|{' '}\n                        <NavLink to=\"/all\">All Modules</NavLink>\n                    </ul>\n                    </nav>\n\n                </div>\n        )\n    }\n}\n\nexport default Navbar;","import React, { Component } from \"react\";\n\nimport PropTypes from 'prop-types';\n\nclass SandwichPage extends React.Component {\n    render() {\n\n        return (\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <h1>{this.props.sandwich.title}</h1>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    Tags: {this.props.sandwich.tags.join(\", \")}\n                </div>\n                <div class=\"row\">\n                    TODO: PUT MORE MODULE INFO HERE.\n                </div>\n                <div class=\"row\">\n                    ex) links, resources, etc\n                </div>\n            </div>\n        )\n    }\n}\n\nSandwichPage.propTypes = {\n    sandwich: PropTypes.object.isRequired,\n}\n\nexport default SandwichPage;","function Home() {\n    return (\n        <>\n            <h1>Welcome to the home page</h1>\n            <div>\n                On this website you'll be able to:\n                <ul>\n                    <li>Browse all available sandwich modules</li>\n                    <li>Browse preset curricula</li>\n                    <li>Create your own curricula</li>\n                </ul>\n            </div>\n        </>\n    );\n\n}\n\nexport default Home;","const ItemTypes = {\n    SANDWICH: 'sandwich',\n};\n\nexport default ItemTypes; ","import React, { Component } from 'react';\nimport './Sandwich.css';\n\nimport PropTypes from 'prop-types';\n\nimport ItemTypes from \"../../constants\";\n\nimport { useDrag } from 'react-dnd';\n\nimport {\n    NavLink\n} from \"react-router-dom\";\n\nfunction DraggableSandwich(props) {\n    const [{isDragging}, drag] = useDrag({\n        item: { type: ItemTypes.SANDWICH },\n        collect: monitor => ({\n            isDragging: !!monitor.isDragging(),\n        }),\n        begin: () => {\n            return props.data;\n        },\n        end: (item, monitor) => {\n            console.log(\"DraggableSandwich: END DRAG. didDrop=%s; dropResult=%s.\", monitor.didDrop(), monitor.getDropResult());\n        },\n        });\n\n    return (\n        <div className=\"Sandwich-container\"\n            ref={drag}\n            style={{\n                opacity: isDragging ? 0.5 : 1,\n                cursor: 'move',\n            }}\n        >\n            <h3>Title: {props.data.title}</h3>\n            <p>UID: {props.data.uid}</p>\n            <p>Tags: {props.data.tags.toString()}</p>\n            <NavLink to={\"/sandwich/\"+props.data.uid}>See More</NavLink>\n        </div>\n    )\n}\n\nDraggableSandwich.propTypes = {\n    data: PropTypes.object.isRequired,\n}\n\nDraggableSandwich.defaultProps = {\n    data: {\n        \"uid\": -1,\n        \"title\": \"N/A\",\n        \"tags\": []\n    }\n}\n\nexport default DraggableSandwich;","var data = {\n    \"all_modules\": [\n        {\n            \"uid\": 1,\n            \"title\": \"Cities of the Future\",\n            \"tags\": [\n                \"algorithms\",\n                \"Scratch\",\n                \"plugged\"\n            ]\n        },\n        {\n            \"uid\": 2,\n            \"title\": \"Creativity & AI\",\n            \"tags\": [\n                \"algorithms\",\n                \"Scratch\",\n                \"Teachable Machines\"\n            ]\n        },\n        {\n            \"uid\": 3,\n            \"title\": \"Debugging Detective\",\n            \"tags\": [\n                \"debugging\",\n                \"Scratch\",\n                \"human skills\"\n            ]\n        },\n        {\n            \"uid\": 4,\n            \"title\": \"Debugging Detective\",\n            \"tags\": [\n                \"debugging\",\n                \"Scratch\",\n                \"human skills\"\n            ]\n        },\n        {\n            \"uid\": 5,\n            \"title\": \"Debugging Detective\",\n            \"tags\": [\n                \"debugging\",\n                \"Scratch\",\n                \"human skills\"\n            ]\n        },\n        {\n            \"uid\": 6,\n            \"title\": \"Debugging Detective\",\n            \"tags\": [\n                \"debugging\",\n                \"Scratch\",\n                \"human skills\"\n            ]\n        },\n        {\n            \"uid\": 7,\n            \"title\": \"Debugging Detective\",\n            \"tags\": [\n                \"debugging\",\n                \"Scratch\",\n                \"human skills\"\n            ]\n        }\n    ]\n};\n\nexport default data;\n","import React, { Component } from \"react\";\nimport DraggableSandwich from '../modules/DraggableSandwich';\n\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\nimport data from \"../../data/all_modules\";\n\nclass AllModules extends React.Component {\n    render() {\n        return (\n            <DndProvider backend={HTML5Backend}>\n                <>\n                    <h1>All Modules page</h1>\n                    <div>\n                        TODO: modules list goes here.\n                        All Modules:\n                    {data.all_modules.map((module) =>\n                        <DraggableSandwich\n                            key={module.uid}\n                            data={module}\n                        />\n                    )}\n                    </div>\n                    <div>\n\n\n                    </div>\n                </>\n            </DndProvider>\n        )\n    }\n}\n\nexport default AllModules;","import React, { Component, useState } from 'react';\nimport './SandwichHolder.css';\n\nimport PropTypes from 'prop-types';\n\nimport ItemTypes from \"../../constants\";\n\nimport { useDrop } from 'react-dnd';\nimport Sandwich from './Sandwich';\n\nimport {\n    NavLink\n} from \"react-router-dom\";\n\nfunction SandwichHolder(props) {\n\n    // The sandwich data is stored as component state now, since\n    // we need to update it from within the component in response to \n    // drop events\n    // const defaultData = {\n    //     \"uid\": -1,\n    //     \"title\": \"N/A\",\n    //     \"tags\": []\n    // };\n    // const [data, setData] = useState(defaultData);\n\n    // Configure the drag-and-drop handling\n    const [{ isDragging }, drag] = useDrop({\n        accept: ItemTypes.SANDWICH,\n        // collect: monitor => ({\n        //     isDragging: !!monitor.isDragging(),\n        // }),\n        drop: (item, monitor) => {\n            console.log(\"SandwichHolder: DROP\");\n            let data = monitor.getItem();\n            console.log(\"Data: %o\", data);\n            props.onSandwichUpdate(props.index, data);\n        },\n    });\n\n    return (\n        <div className=\"Sandwich-holder\"\n            ref={drag}\n            style={{\n                opacity: isDragging ? 0.5 : 1,\n                cursor: 'move',\n            }}\n        >\n            <h1>#{props.index}</h1>\n            <h3>Title: {props.sandwichData.title}</h3>\n            <p>UID: {props.sandwichData.uid}</p>\n            <p>Tags: {props.sandwichData.tags.toString()}</p>\n            {(props.sandwichData.uid !== -1) && <NavLink to={\"/sandwich/\" + props.sandwichData.uid}>See More</NavLink>}<br/>\n            <input type=\"button\" value=\"Remove\" onClick={() => props.clearSandwich(props.index)} />\n        </div>\n    )\n}\n\nSandwichHolder.propTypes = {\n    index: PropTypes.number.isRequired,\n    sandwichData: PropTypes.object.isRequired,\n    onSandwichUpdate: PropTypes.func.isRequired,\n    clearSandwich: PropTypes.func.isRequired,\n}\n\nexport default SandwichHolder;","import React, { Component } from \"react\";\nimport './NutritionFacts.js'\nimport PropTypes from 'prop-types';\n\nclass NutritionFacts extends React.Component {\n    \n    // returns set of tags as a list\n    getCoveredTags(sandwiches) {\n        let allTags = new Set();\n\n        sandwiches.forEach(sw => {\n            sw.tags.forEach(tag => allTags.add(tag));\n        });\n\n        return Array.from(allTags);\n    }\n\n    render() {\n        let numSandwiches = 0;\n\n        this.props.sandwichData.forEach((wich) => {\n            if (wich.uid !== -1) {\n                numSandwiches++;\n            }\n        });\n\n\n        return (<div class=\"container border border-primary\">\n            <div class=\"row\">\n                <div class=\"col-sm\">\n                    <h1>Nutrition Facts</h1>\n                </div>\n            </div>\n            <div class=\"row border\">\n                <div class=\"col-sm\">\n                    <h3>Content Type:</h3>\n                </div>\n                <div class=\"col-sm\">\n                    <h3>Curriculum Coverage:</h3>\n                </div>\n            </div>\n            <div class=\"row border\">\n                <div class=\"col-sm\">\n                    # of modules:\n                </div>\n                <div class=\"col-sm\">\n                    {numSandwiches}\n                </div>\n            </div>\n            <div class=\"row border\">\n                <div class=\"col-sm\">\n                    Tags covered\n                </div>\n                <div class=\"col-sm\">\n                    {this.getCoveredTags(this.props.sandwichData).join(', ')}\n                </div>\n            </div>\n            \n        </div>)\n    }\n}\n\nNutritionFacts.propTypes = {\n    sandwichData: PropTypes.object.isRequired,\n}\n\nexport default NutritionFacts;","import React, { Component } from \"react\";\nimport SandwichHolder from \"../modules/SandwichHolder\";\nimport NutritionFacts from \"../modules/NutritionFacts\";\nimport PropTypes from 'prop-types';\n\nconst emptySandwich = {\n    \"uid\": -1,\n    \"title\": \"N/A\",\n    \"tags\": []\n};\n\nclass CurriculumBuilder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // bind class methods\n        this.handleSandwichHolderUpdate = this.handleSandwichHolderUpdate.bind(this);\n        this.clearSandwichHolder = this.clearSandwichHolder.bind(this);\n        this.clearAll = this.clearAll.bind(this);\n\n        this.state = {\n            sandwichData: [],\n        };\n\n        for (let i = 0; i < props.numSlots; i++){\n            this.state.sandwichData.push(emptySandwich);\n        }\n    }\n\n    // TODO: figure out why this only clears the last holder\n    clearAll() {\n        for(let i = 0; i < this.props.numSlots; i++) {\n            this.clearSandwichHolder(i);\n        }\n    }\n\n    clearSandwichHolder(indexToClear) {\n        console.log(\"CALLED CLEAR with %s\", indexToClear);\n        this.handleSandwichHolderUpdate(indexToClear, emptySandwich);\n    }\n\n    handleSandwichHolderUpdate(indexToUpdate, newData) {\n        const updatedSandwichData = this.state.sandwichData.map((data, j) => {\n            if (j === indexToUpdate) {\n                console.log(\"updated %s\", indexToUpdate);\n                return newData;\n            } else {\n                return data;\n            }          \n        });\n\n        this.setState({sandwichData: updatedSandwichData});\n    }\n\n    render() {\n        const holderList = []\n        for (let i = 0; i < this.props.numSlots; i++) {\n            holderList.push(\n                <div class=\"col-sm\">\n                    <SandwichHolder key={i} index={i} onSandwichUpdate={this.handleSandwichHolderUpdate} sandwichData={this.state.sandwichData[i]} clearSandwich={this.clearSandwichHolder}/>\n                </div>)\n            }\n\n        return (\n            <>\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        Your curriculum:\n                                <NutritionFacts sandwichData={this.state.sandwichData}/>\n                    </div>\n                </div>\n                <input type=\"button\" value=\"TODO: Clear All\" onClick={this.clearAll}/>\n                <br />\n                <div class=\"row\">\n                    {holderList}\n                </div>\n            </>\n        )\n    }\n\n}\n\nCurriculumBuilder.propTypes = {\n    numSlots: PropTypes.number.isRequired,\n}\n\nexport default CurriculumBuilder;\n","import React, { Component } from \"react\";\n\nimport DraggableSandwich from \"../modules/DraggableSandwich\";\n\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\nimport CurriculumBuilder from \"../modules/CurriculumBuilder\";\n\nimport data from \"../../data/all_modules\"\n\nclass BuildYourOwn extends React.Component {\n    render() {\n        return (\n            <DndProvider backend={HTML5Backend}>\n                <>\n                    <div class=\"container\">\n                        <div class=\"row\">\n                            <div class=\"col-sm\">\n                                <h1>Build Your Own Module</h1>\n                                <hr />\n                            </div>\n                        </div>\n                        <CurriculumBuilder numSlots=\"3\"/>\n                    </div>\n                    <hr />\n                    <div class=\"container\">\n                        <div class=\"row\">\n                            {data.all_modules.map((module, index) => {\n                                let sandwichDiv = <div class=\"col-sm\">\n                                    <DraggableSandwich\n                                        key={module.uid}\n                                        data={module}\n                                    />\n                                </div>;\n                                return sandwichDiv;\n                            }\n                            )}\n                        </div>\n                    </div>\n                </>\n            </DndProvider>\n        )\n    }\n}\n\nexport default BuildYourOwn;","import './App.css';\nimport Sandwich from './modules/Sandwich';\nimport Navbar from './modules/Navbar';\nimport SandwichPage from './pages/SandwichPage';\n\nimport Home from './pages/Home';\nimport AllModules from './pages/AllModules';\nimport BuildYourOwn from \"./pages/BuildYourOwn\";\n\nimport data from \"../data/all_modules\";\n\n\nimport {\n  Route,\n  Switch,\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        Ethical AI for Computational Action\n      </header>\n      <Navbar/>\n      <Switch>\n        <Route path=\"/home\">\n          <Home />\n        </Route> \n\n\n        <Route path=\"/builder\">\n          <BuildYourOwn/>\n        </Route>\n\n        <Route path=\"/all\">\n          <AllModules/>\n        </Route>\n        \n        {\n          // TODO: generate Routes for each module page\n          data.all_modules.map(module => {\n            return <Route path={\"/sandwich/\"+module.uid}>\n              <SandwichPage sandwich={module}/>\n            </Route>\n          })\n        }\n\n        <Route path=\"/\">\n          <h1>404</h1>\n        </Route>\n\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}