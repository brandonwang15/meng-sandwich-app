{"version":3,"sources":["components/modules/Sandwich.js","components/modules/Navbar.js","components/pages/SandwichPage.js","components/pages/Home.js","constants.js","components/modules/DraggableSandwich.js","components/modules/FilterableSandwichContainer.js","data/all_modules.js","components/pages/AllModules.js","components/modules/SandwichHolder.js","components/modules/NutritionFacts.js","components/modules/CurriculumBuilder.js","components/pages/BuildYourOwn.js","components/App.js","reportWebVitals.js","index.js"],"names":["Sandwich","className","this","props","data","title","short_description","tags","toString","to","uid","React","Component","defaultProps","Navbar","SandwichPage","class","sandwich","join","resources","map","resource","href","process","url","text","role","Home","ItemTypes","SANDWICH","DraggableSandwich","useDrag","item","type","collect","monitor","isDragging","canDrag","begin","end","console","log","didDrop","getDropResult","drag","ref","style","opacity","cursor","FilterableSandwichContainer","onFilterTextChanged","bind","state","sandwichIndicesToShow","Array","sandwichData","all_modules","length","keys","searchText","toLowerCase","includes","e","target","value","newSandwichIndicesToShow","trim","setState","forEach","index","isSandwichMatching","push","filteredModules","filter","id","placeholder","onChange","module","AllModules","DndProvider","backend","HTML5Backend","SandwichHolder","useDrop","accept","drop","getItem","onSandwichUpdate","isEmpty","onClick","clearSandwich","NutritionFacts","sandwiches","allTags","Set","sw","Object","tag","add","from","numSandwiches","wich","getCoveredTags","emptySandwich","CurriculumBuilder","handleSandwichHolderUpdate","clearSandwichHolder","clearAll","isSandwichSelected","i","numSlots","indexToClear","indexToUpdate","newData","updatedSandwichData","j","holderList","BuildYourOwn","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9e88c99.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Sandwich.css';\n\nimport {\n    NavLink\n} from \"react-router-dom\";\n\n\nimport PropTypes from 'prop-types';\n\nclass Sandwich extends React.Component {\n    render() {\n        return (\n            <div className=\"Sandwich-container\" >\n                <h3>{this.props.data.title}</h3>\n                <p><em>{this.props.data.short_description}</em></p>\n                <p>Tags: {this.props.data.tags.toString()}</p>\n                <NavLink to={\"/sandwich/\"+this.props.data.uid}>See More</NavLink>\n                <p>UID: {this.props.data.uid}</p>\n            </div>\n        )\n    }\n}\n\nSandwich.propTypes = {\n    data: PropTypes.object.isRequired,\n}\n\nSandwich.defaultProps = {\n    data: {\n        \"uid\": -1,\n        \"title\": \"N/A\",\n        \"tags\": []\n    }\n}\n\nexport default Sandwich;","import './Navbar.css';\nimport React, { Component } from \"react\";\nimport {\n    BrowserRouter as Router,\n    NavLink\n} from \"react-router-dom\";\n\nclass Navbar extends React.Component {\n    // TODO: figure out how to get NavLinks working\n    render() {\n        return (\n                <div className=\"Navbar\">\n                    <nav>\n                    <ul>\n                        <NavLink to=\"/home\">Home</NavLink> \n                        {' '}|{' '}\n                        <NavLink to=\"/builder\">Build Your Curriculum</NavLink>\n                        {' '}|{' '}\n                        <NavLink to=\"/presets\">Preset Curriculum</NavLink>\n                        {' '}|{' '}\n                        <NavLink to=\"/all\">All Modules</NavLink>\n                    </ul>\n                    </nav>\n\n                </div>\n        )\n    }\n}\n\nexport default Navbar;","import React, { Component } from \"react\";\n\nimport PropTypes from 'prop-types';\n\nclass SandwichPage extends React.Component {\n    render() {\n\n        return (\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        <h1>{this.props.sandwich.title}</h1>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    Tags: {this.props.sandwich.tags.join(\", \")}\n                </div>\n                <div class=\"row\">\n                    Blurb: {this.props.sandwich.short_description}\n                </div>\n                <div class=\"row\">\n                    Grade versions:\n                </div>\n                <div class=\"row\">\n                    Resources:\n                    {this.props.sandwich.resources.map((resource) => <div class=\"container\">\n                        <a href={process.env.PUBLIC_URL+resource.url}>{resource.text}</a>\n                    </div>)}\n                    <div class=\"container\">\n                            <a href={process.env.PUBLIC_URL+\"/sandwich/\"+this.props.sandwich.uid+\"/sandwich-\"+this.props.sandwich.uid+\".zip\"} class=\"btn btn-info\" role=\"button\">.ZIP File</a>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    Nutrition Facts:\n                </div>\n\n                <div class=\"row\">\n                    Related Modules:\n                </div>\n            </div>\n        )\n    }\n}\n\nSandwichPage.propTypes = {\n    sandwich: PropTypes.object.isRequired,\n}\n\nexport default SandwichPage;","import \"../../styles.css\"\n\nfunction Home() {\n    return (\n        <>\n            <h1 class=\"Page-title\">Welcome to the home page</h1>\n            <div>\n                On this website you'll be able to:\n                <ul>\n                    <li>Browse all available sandwich modules</li>\n                    <li>Browse preset curricula</li>\n                    <li>Create your own curricula</li>\n                </ul>\n            </div>\n        </>\n    );\n\n}\n\nexport default Home;","const ItemTypes = {\n    SANDWICH: 'sandwich',\n};\n\nexport default ItemTypes; ","import React, { Component } from 'react';\nimport './DraggableSandwich.css';\n\nimport PropTypes from 'prop-types';\n\nimport ItemTypes from \"../../constants\";\n\nimport { useDrag } from 'react-dnd';\n\nimport {\n    NavLink\n} from \"react-router-dom\";\n\nfunction DraggableSandwich(props) {\n    const [{isDragging}, drag] = useDrag({\n        item: { type: ItemTypes.SANDWICH },\n        collect: monitor => ({\n            isDragging: !!monitor.isDragging(),\n        }),\n        canDrag: () => props.canDrag,\n        begin: () => {\n            return props.data;\n        },\n        end: (item, monitor) => {\n            console.log(\"DraggableSandwich: END DRAG. didDrop=%s; dropResult=%s.\", monitor.didDrop(), monitor.getDropResult());\n        },\n        });\n\n    return (\n        <div className={\"Draggable-sandwich-container \" + (props.canDrag ? \"enabled\" : \"disabled\")}\n            ref={drag}\n            style={{\n                opacity: isDragging ? 0.5 : 1,\n                cursor: 'move',\n            }}\n        >\n            <h3>{props.data.title}</h3>\n            <p>UID: {props.data.uid}</p>\n            <p>Tags: {props.data.tags.toString()}</p>\n            <NavLink to={\"/sandwich/\"+props.data.uid}>See More</NavLink>\n        </div>\n    )\n}\n\nDraggableSandwich.propTypes = {\n    data: PropTypes.object.isRequired,\n    canDrag: PropTypes.bool.isRequired,\n}\n\nDraggableSandwich.defaultProps = {\n    data: {\n        \"uid\": -1,\n        \"title\": \"N/A\",\n        \"tags\": []\n    }\n}\n\nexport default DraggableSandwich;","import React, { Component } from \"react\";\nimport DraggableSandwich from \"./DraggableSandwich\";\nimport Sandwich from \"./Sandwich\";\nimport PropTypes from 'prop-types';\n\nclass FilterableSandwichContainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.onFilterTextChanged = this.onFilterTextChanged.bind(this);\n\n        this.state = {\n            sandwichIndicesToShow: [...Array(this.props.sandwichData.all_modules.length).keys()], // indices into sandwichData, indicating which sandwiches should be displayed\n        };\n\n        \n\n    }\n\n    isSandwichMatching(data, searchText) {\n        searchText = searchText.toLowerCase();\n        // check tags for match\n        if (data.tags.join(\" \").toLowerCase().includes(searchText)) {\n            return true;\n        }\n\n        // check title for match\n        if (data.title.toLowerCase().includes(searchText)) {\n            return true;\n        }\n\n        // TODO: add more matching conditions\n        return false;\n    }\n\n    onFilterTextChanged(e) {\n        const searchText = e.target.value;\n        let newSandwichIndicesToShow = []\n\n        // if empty search text, show all results\n        console.log(\"searchText: %s\", searchText)\n        if (searchText.trim() === \"\") {\n            console.log(\"show all\");\n         \n            newSandwichIndicesToShow = [...Array(this.props.sandwichData.all_modules.length).keys()]; \n            this.setState({sandwichIndicesToShow: newSandwichIndicesToShow});\n            return;\n        }\n\n\n        this.props.sandwichData.all_modules.forEach((value, index) => {\n            if (this.isSandwichMatching(value, searchText)) {\n                newSandwichIndicesToShow.push(index);\n            }\n        });\n\n        this.setState({sandwichIndicesToShow: newSandwichIndicesToShow});\n    }\n\n    render() {\n        let filteredModules = this.props.sandwichData.all_modules.filter((value, index) => {\n            return this.state.sandwichIndicesToShow.includes(index);\n        });\n\n        return (\n            <>\n                <div class=\"container\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-2\">\n                            Filter:\n                        </div>\n                        <div class=\"col-sm-8\">\n                            <input id=\"searchField\" type=\"text\" class=\"form-control\" placeholder=\"Add search terms!\" onChange={this.onFilterTextChanged}/>\n                        </div>\n                    </div>\n\n                    {filteredModules.map((module) =>\n                        <div class=\"row\">\n                            <div class=\"col-sm\">\n                                <Sandwich\n                                    key={module.uid}\n                                    data={module}\n                                />\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </>\n        )\n    }\n}\n\nFilterableSandwichContainer.propTypes = {\n    sandwichData: PropTypes.object.isRequired,\n}\n\n\nexport default FilterableSandwichContainer;","var data = {\n    \"all_modules\": [\n        {\n            \"uid\": 1,\n            \"title\": \"Cities of the Future\",\n            \"short_description\": \"Students envision what their communities will look like in the future, and create demonstrations that incorporate automation.\",\n            \"tags\": [\n                \"algorithms\",\n                \"Scratch\",\n                \"plugged\"\n            ],\n            \"resources\": [\n                {\n                    \"url\": \"/sandwich/1/image.png\",\n                    \"text\": \"Sandwich picture.\",\n                },\n                {\n                    \"url\": \"/sandwich/1/test.pdf\",\n                    \"text\": \"Here's a PDF!\",\n                }\n            ]\n        },\n        {\n            \"uid\": 2,\n            \"title\": \"Creativity & AI\",\n            \"tags\": [\n                \"algorithms\",\n                \"Scratch\",\n                \"Teachable Machines\"\n            ],\n            \"resources\": [],\n        },\n        {\n            \"uid\": 3,\n            \"title\": \"Debugging Detective\",\n            \"tags\": [\n                \"debugging\",\n                \"Scratch\",\n                \"human skills\"\n            ],\n            \"resources\": [],\n        },\n        {\n            \"uid\": 4,\n            \"title\": \"DAILY AI\",\n            \"tags\": [\n                \"AI\"\n            ],\n            \"resources\": [],\n        },\n        {\n            \"uid\": 5,\n            \"title\": \"Design Thinking Bootcamp\",\n            \"tags\": [\n                \"human skills\"\n            ],\n            \"resources\": [],\n        },\n        {\n            \"uid\": 6,\n            \"title\": \"Robot Race\",\n            \"tags\": [\n                \"debugging\",\n                \"Scratch\",\n                \"human skills\"\n            ],\n            \"resources\": [],\n        },\n        {\n            \"uid\": 7,\n            \"title\": \"Seafloor Cleanup\",\n            \"tags\": [\n                \"debugging\",\n                \"Scratch\",\n                \"human skills\"\n            ],\n            \"resources\": [],\n        }\n    ]\n};\n\nexport default data;\n","import React, { Component } from \"react\";\nimport Sandwich from '../modules/Sandwich';\nimport FilterableSandwichContainer from \"../modules/FilterableSandwichContainer\";\n\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\nimport \"./../../styles.css\"\n\nimport data from \"../../data/all_modules\";\n\nclass AllModules extends React.Component {\n    render() {\n        return (\n            <DndProvider backend={HTML5Backend}>\n                <>\n                    <div class=\"Page-title\">\n                        <h1>Browse All Sandwiches</h1>\n                    </div>\n                    <div>\n                        <FilterableSandwichContainer sandwichData={data}/>\n                    </div>\n                </>\n            </DndProvider>\n        )\n    }\n}\n\nexport default AllModules;","import React, { Component, useState } from 'react';\nimport './SandwichHolder.css';\n\nimport PropTypes from 'prop-types';\n\nimport ItemTypes from \"../../constants\";\n\nimport { useDrop } from 'react-dnd';\n\nimport {\n    NavLink\n} from \"react-router-dom\";\n\nfunction SandwichHolder(props) {\n\n    // The sandwich data is stored as component state now, since\n    // we need to update it from within the component in response to \n    // drop events\n    // const defaultData = {\n    //     \"uid\": -1,\n    //     \"title\": \"N/A\",\n    //     \"tags\": []\n    // };\n    // const [data, setData] = useState(defaultData);\n\n    // Configure the drag-and-drop handling\n    const [{ isDragging }, drag] = useDrop({\n        accept: ItemTypes.SANDWICH,\n        // collect: monitor => ({\n        //     isDragging: !!monitor.isDragging(),\n        // }),\n        drop: (item, monitor) => {\n            console.log(\"SandwichHolder: DROP\");\n            let data = monitor.getItem();\n            console.log(\"Data: %o\", data);\n            props.onSandwichUpdate(props.index, data);\n        },\n    });\n    if (props.isEmpty) {\n        return <div className=\"Sandwich-holder-empty\"\n            ref={drag}\n            style={{\n                opacity: isDragging ? 0.5 : 1,\n                cursor: 'move',\n            }}\n        >\n            <h1>+</h1>\n            <em>(add a sandwich!)</em>\n        </div>\n    } else {\n        return (\n            <div className=\"Sandwich-holder\"\n                ref={drag}\n                style={{\n                    opacity: isDragging ? 0.5 : 1,\n                    cursor: 'move',\n                }}\n            >\n                <h1>#{props.index}</h1>\n                <h3>{props.sandwichData.title}</h3>\n                <p>UID: {props.sandwichData.uid}</p>\n                <p>Tags: <em>{props.sandwichData.tags.toString()}</em></p>\n                {(props.sandwichData.uid !== -1) && <NavLink to={\"/sandwich/\" + props.sandwichData.uid}>See More</NavLink>}<br />\n                <input type=\"button\" value=\"Remove\" onClick={() => props.clearSandwich(props.index)} />\n            </div>\n        )\n    }\n\n}\n\nSandwichHolder.propTypes = {\n    index: PropTypes.number.isRequired,\n    sandwichData: PropTypes.object.isRequired,\n    onSandwichUpdate: PropTypes.func.isRequired,\n    clearSandwich: PropTypes.func.isRequired,\n    isEmpty: PropTypes.bool.isRequired,\n}\n\nexport default SandwichHolder;","import React, { Component } from \"react\";\nimport './NutritionFacts.js'\nimport PropTypes from 'prop-types';\n\nclass NutritionFacts extends React.Component {\n    \n    // returns set of tags as a list\n    getCoveredTags(sandwiches) {\n        let allTags = new Set();\n\n        sandwiches.forEach(sw => {\n            if (Object.keys(sw).length !== 0) {\n                sw.tags.forEach(tag => allTags.add(tag));\n            }\n        });\n\n        return Array.from(allTags);\n    }\n\n    render() {\n        let numSandwiches = 0;\n\n        this.props.sandwichData.forEach((wich) => {\n            if (Object.keys(wich).length > 0) {\n                numSandwiches++;\n            }\n        });\n\n\n        return (<div class=\"container border border-primary\">\n            <div class=\"row\">\n                <div class=\"col-sm\">\n                    <h1>Nutrition Facts</h1>\n                </div>\n            </div>\n            <div class=\"row border\">\n                <div class=\"col-sm\">\n                    <h3>Content Type:</h3>\n                </div>\n                <div class=\"col-sm\">\n                    <h3>Curriculum Coverage:</h3>\n                </div>\n            </div>\n            <div class=\"row border\">\n                <div class=\"col-sm\">\n                    # of modules:\n                </div>\n                <div class=\"col-sm\">\n                    {numSandwiches}\n                </div>\n            </div>\n            <div class=\"row border\">\n                <div class=\"col-sm\">\n                    Tags covered\n                </div>\n                <div class=\"col-sm\">\n                    {this.getCoveredTags(this.props.sandwichData).join(', ')}\n                </div>\n            </div>\n            \n        </div>)\n    }\n}\n\nNutritionFacts.propTypes = {\n    sandwichData: PropTypes.object.isRequired,\n}\n\nexport default NutritionFacts;","import React, { Component } from \"react\";\nimport SandwichHolder from \"../modules/SandwichHolder\";\nimport NutritionFacts from \"../modules/NutritionFacts\";\n\nimport PropTypes from 'prop-types';\n\nimport data from \"../../data/all_modules\"\nimport DraggableSandwich from \"../modules/DraggableSandwich\";\nimport FilterableSandwichContainer from \"../modules/FilterableSandwichContainer\";\n\nconst emptySandwich = {};\n\nclass CurriculumBuilder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // bind class methods\n        this.handleSandwichHolderUpdate = this.handleSandwichHolderUpdate.bind(this);\n        this.clearSandwichHolder = this.clearSandwichHolder.bind(this);\n        this.clearAll = this.clearAll.bind(this);\n        this.isSandwichSelected = this.isSandwichSelected.bind(this);\n\n        this.state = {\n            sandwichData: [], // an empty object {}, is always assumed to denote an empty slot\n        };\n\n        for (let i = 0; i < props.numSlots; i++){\n            this.state.sandwichData.push(emptySandwich);\n        }\n    }\n\n    // TODO: figure out why this only clears the last holder\n    clearAll() {\n        for(let i = 0; i < this.props.numSlots; i++) {\n            this.clearSandwichHolder(i);\n        }\n    }\n\n    isSandwichSelected(uid) {\n        for (let i = 0; i < this.props.numSlots; i++) {\n            if (this.state.sandwichData[i].uid === uid) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    clearSandwichHolder(indexToClear) {\n        console.log(\"CALLED CLEAR with %s\", indexToClear);\n        this.handleSandwichHolderUpdate(indexToClear, emptySandwich);\n    }\n\n    handleSandwichHolderUpdate(indexToUpdate, newData) {\n        const updatedSandwichData = this.state.sandwichData.map((data, j) => {\n            if (j === indexToUpdate) {\n                console.log(\"updated %s\", indexToUpdate);\n                return newData;\n            } else {\n                return data;\n            }          \n        });\n\n        this.setState({sandwichData: updatedSandwichData});\n    }\n\n    render() {\n        const holderList = []\n        for (let i = 0; i < this.props.numSlots; i++) {\n            holderList.push(\n                <div class=\"col-sm\">\n                    <SandwichHolder \n                        key={i} \n                        index={i} \n                        isEmpty={Object.keys(this.state.sandwichData[i]).length === 0}\n                        onSandwichUpdate={this.handleSandwichHolderUpdate} \n                        sandwichData={this.state.sandwichData[i]} \n                        clearSandwich={this.clearSandwichHolder}/>\n                </div>)\n            }\n\n        return (\n            <>\n                <div class=\"row\">\n                    <div class=\"col-sm\">\n                        Your curriculum:\n                                <NutritionFacts sandwichData={this.state.sandwichData}/>\n                    </div>\n                </div>\n                <input type=\"button\" value=\"TODO: Clear All\" onClick={this.clearAll}/>\n                <br />\n                <div class=\"row\">\n                    {holderList}\n                </div>\n                <hr />\n                    <div class=\"container\">\n                        <div class=\"row\">\n                            {data.all_modules.map((module, index) => {\n                                let sandwichDiv = <div class=\"col-sm\">\n                                    <DraggableSandwich\n                                        key={module.uid}\n                                        data={module}\n                                        canDrag={!this.isSandwichSelected(module.uid)}\n                                    />\n                                </div>;\n                                return sandwichDiv;\n                            }\n                            )}\n                        </div>\n                    </div>\n            </>\n        )\n    }\n\n}\n\nCurriculumBuilder.propTypes = {\n    numSlots: PropTypes.number.isRequired,\n}\n\nexport default CurriculumBuilder;\n","import React, { Component } from \"react\";\n\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\nimport \"./../../styles.css\"\n\nimport CurriculumBuilder from \"../modules/CurriculumBuilder\";\n\nclass BuildYourOwn extends React.Component {\n    render() {\n        return (\n            <DndProvider backend={HTML5Backend}>\n                <>\n                    <div class=\"col-sm Page-title\">\n                        <h1>Build Your Own Module</h1>\n                    </div>\n                    <div class=\"container\">\n                        <div class=\"row\">\n                        </div>\n                        <CurriculumBuilder numSlots=\"3\"/>\n                    </div>\n                </>\n            </DndProvider>\n        )\n    }\n}\n\nexport default BuildYourOwn;","import './App.css';\nimport './../styles.css';\nimport Sandwich from './modules/Sandwich';\nimport Navbar from './modules/Navbar';\nimport SandwichPage from './pages/SandwichPage';\n\nimport Home from './pages/Home';\nimport AllModules from './pages/AllModules';\nimport BuildYourOwn from \"./pages/BuildYourOwn\";\n\nimport data from \"../data/all_modules\";\n\n\nimport {\n  Route,\n  Switch,\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        Ethical AI for Computational Action\n      </header>\n      <Navbar/>\n      <Switch>\n        <Route path=\"/home\">\n          <Home />\n        </Route> \n\n\n        <Route path=\"/builder\">\n          <BuildYourOwn/>\n        </Route>\n\n        <Route path=\"/all\">\n          <AllModules/>\n        </Route>\n        \n        {\n          // TODO: generate Routes for each module page\n          data.all_modules.map(module => {\n            return <Route key={module.uid} path={\"/sandwich/\"+module.uid}>\n              <SandwichPage sandwich={module}/>\n            </Route>\n          })\n        }\n\n        <Route path=\"/\">\n          <h1 class=\"Page-title\">404</h1>\n        </Route>\n\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}