{"version":3,"sources":["components/modules/Sandwich.js","components/modules/Navbar.js","components/modules/NutritionFacts.js","components/pages/SandwichPage.js","components/pages/Home.js","constants.js","components/modules/DraggableSandwich.js","components/modules/FilterableSandwichContainer.js","data/all_modules.js","components/pages/AllModules.js","components/context/app_context.js","components/modules/SandwichHolder.js","components/modules/CurriculumBuilder.js","components/pages/BuildYourOwn.js","components/App.js","reportWebVitals.js","index.js"],"names":["Sandwich","className","this","props","data","title","short_description","tags","toString","to","uid","React","Component","defaultProps","Navbar","NutritionFacts","sandwiches","allTags","Set","forEach","sw","Object","keys","length","tag","add","Array","from","numSandwiches","sandwichData","wich","class","style","getCoveredTags","join","SandwichPage","sandwich","resources","map","resource","href","process","url","text","role","Home","ItemTypes","SANDWICH","DraggableSandwich","useDrag","item","type","collect","monitor","isDragging","canDrag","begin","end","console","log","didDrop","getDropResult","drag","ref","opacity","cursor","FilterableSandwichContainer","onFilterTextChanged","bind","state","sandwichIndicesToShow","all_modules","searchText","toLowerCase","includes","e","target","value","newSandwichIndicesToShow","trim","setState","index","isSandwichMatching","push","filteredModules","filter","draggableMode","id","placeholder","onChange","module","isSandwichDraggable","AllModules","DndProvider","backend","HTML5Backend","createContext","SandwichHolder","connectDropTarget","heldSandwich","context","curriculumSandwiches","isSandwichSlotEmpty","onClick","deleteSandwichFromUserCurriculum","contextType","AppContext","sandwichTarget","drop","component","getItem","updateSandwichInUserCurriculum","DropTarget","connect","dropTarget","CurriculumBuilder","holderList","i","numSlots","clearUserCurriculum","isSandwichInUserCurriculum","BuildYourOwn","EMPTY_SANDWICH_DATA","App","curriculumSlots","newData","updatedSandwichData","j","Provider","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f578d1e3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Sandwich.css';\n\nimport {\n    NavLink\n} from \"react-router-dom\";\n\n\nimport PropTypes from 'prop-types';\n\nclass Sandwich extends React.Component {\n    render() {\n        return (\n            <div className=\"Sandwich-container\" >\n                <h3>{this.props.data.title}</h3>\n                <p><em>{this.props.data.short_description}</em></p>\n                <p>Tags: {this.props.data.tags.toString()}</p>\n                <NavLink to={\"/sandwich/\"+this.props.data.uid}>See More</NavLink>\n                <p>UID: {this.props.data.uid}</p>\n            </div>\n        )\n    }\n}\n\nSandwich.propTypes = {\n    data: PropTypes.object.isRequired,\n}\n\nSandwich.defaultProps = {\n    data: {\n        \"uid\": -1,\n        \"title\": \"N/A\",\n        \"tags\": []\n    }\n}\n\nexport default Sandwich;","import './Navbar.css';\nimport React, { Component } from \"react\";\nimport {\n    BrowserRouter as Router,\n    NavLink\n} from \"react-router-dom\";\n\nclass Navbar extends React.Component {\n    // TODO: figure out how to get NavLinks working\n    render() {\n        return (\n                <div className=\"Navbar\">\n                    <nav>\n                    <ul>\n                        <NavLink to=\"/home\">Home</NavLink> \n                        {' '}|{' '}\n                        <NavLink to=\"/builder\">Build Your Curriculum</NavLink>\n                        {' '}|{' '}\n                        <NavLink to=\"/presets\">Preset Curriculum</NavLink>\n                        {' '}|{' '}\n                        <NavLink to=\"/all\">All Modules</NavLink>\n                    </ul>\n                    </nav>\n\n                </div>\n        )\n    }\n}\n\nexport default Navbar;","import React, { Component } from \"react\";\nimport './NutritionFacts.js';\nimport './NutritionFacts.css';\nimport PropTypes from 'prop-types';\n\nclass NutritionFacts extends React.Component {\n    \n    // returns set of tags as a list\n    getCoveredTags(sandwiches) {\n        let allTags = new Set();\n\n        sandwiches.forEach(sw => {\n            if (Object.keys(sw).length !== 0) {\n                sw.tags.forEach(tag => allTags.add(tag));\n            }\n        });\n\n        return Array.from(allTags);\n    }\n\n    render() {\n        let numSandwiches = 0;\n\n        this.props.sandwichData.forEach((wich) => {\n            if (Object.keys(wich).length > 0) {\n                numSandwiches++;\n            }\n        });\n\n\n        return (<div class=\"container border border-nutrition-outline\">\n            <div class=\"row border-bottom border-nutrition-hr-thick\">\n                <div class=\"col-sm border-bottom\">\n                    <h3>Nutrition Facts</h3>\n                </div>\n            </div>\n            <div class=\"row border-bottom border-nutrition-hr-med\">\n                <div class=\"col-9\">\n                    # of modules:\n                </div>\n                <div class=\"col-3\">\n                    {numSandwiches}\n                </div>\n            </div>\n            <div class=\"row border-bottom border-nutrition-hr-thin text-left\">\n                <div class=\"col-12\">\n                    Tags covered:\n                </div>\n                <div class=\"col-12\" style={{\"font-size\": \"12px\"}}>\n                    <em>\n                        {this.getCoveredTags(this.props.sandwichData).join(', ')}\n                    </em>\n                </div>\n            </div>\n            <div class=\"row border-bottom border-nutrition-hr-thin text-left\">\n                <div class=\"col-9\">\n                    Artificial Intelligence\n                </div>\n                <div class=\"col-3\">\n                    75%\n                </div>\n            </div>\n            <div class=\"row border-bottom border-nutrition-hr-thin text-left\">\n                <div class=\"col-9\">\n                    Computational Thinking\n                </div>\n                <div class=\"col-3\">\n                    90%\n                </div>\n            </div>\n            <div class=\"row border-bottom border-nutrition-hr-med text-left\">\n                <div class=\"col-9\">\n                    Design Thinking\n                </div>\n                <div class=\"col-3\">\n                    50%\n                </div>\n            </div>\n            <div class=\"row border-bottom border-nutrition-hr-thin text-left small-text\">\n                <div class=\"col-9\">\n                    Creativity\n                </div>\n                <div class=\"col-3\">\n                    Yes\n                </div>\n            </div>\n            <div class=\"row border-bottom border-nutrition-hr-thin text-left small-text\">\n                <div class=\"col-9\">\n                    Collaboration\n                </div>\n                <div class=\"col-3\">\n                    Yes\n                </div>\n            </div>\n            <div class=\"row border-nutrition-hr-thin text-left small-text\">\n                <div class=\"col-9\">\n                    Reflection\n                </div>\n                <div class=\"col-3\">\n                    Yes\n                </div>\n            </div>\n            \n        </div>)\n    }\n}\n\nNutritionFacts.propTypes = {\n    sandwichData: PropTypes.object.isRequired,\n}\n\nexport default NutritionFacts;","import \"./../../styles.css\"\nimport React, { Component } from \"react\";\n\nimport NutritionFacts from \"../modules/NutritionFacts\"\n\nimport PropTypes from 'prop-types';\n\nclass SandwichPage extends React.Component {\n    render() {\n\n        return (\n            <div class=\"container\">\n                <div class=\"row Page-title\">\n                    <div class=\"col-sm\">\n                        <h1>{this.props.sandwich.title}</h1>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-9 text-left\">\n\n                        <div class=\"row\">\n                            Tags: {this.props.sandwich.tags.join(\", \")}\n                        </div>\n                        <div class=\"row\">\n                            Blurb: {this.props.sandwich.short_description}\n                        </div>\n                        <div class=\"row\">\n                            Grade versions:\n                        </div>\n                        <div class=\"row\">\n                            Related Modules:\n                        </div>\n                        <div class=\"row text-center\">\n                            <div class=\"col\">\n                                <h4> Resources:</h4>\n                                {this.props.sandwich.resources.map((resource) => <div class=\"container\">\n                                    <a href={process.env.PUBLIC_URL + resource.url}>{resource.text}</a>\n                                </div>)}\n                                <div class=\"container\">\n                                    <a href={process.env.PUBLIC_URL + \"/sandwich/\" + this.props.sandwich.uid + \"/sandwich-\" + this.props.sandwich.uid + \".zip\"} class=\"btn btn-info\" role=\"button\">.ZIP File</a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"col-3\">\n                        <NutritionFacts sandwichData={[this.props.sandwich]} />\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nSandwichPage.propTypes = {\n    sandwich: PropTypes.object.isRequired,\n}\n\nexport default SandwichPage;","import \"../../styles.css\"\n\nfunction Home() {\n    return (\n        <>\n            <h1 class=\"Page-title\">Welcome to the home page</h1>\n            <div>\n                On this website you'll be able to:\n                <ul>\n                    <li>Browse all available sandwich modules</li>\n                    <li>Browse preset curricula</li>\n                    <li>Create your own curricula</li>\n                </ul>\n            </div>\n        </>\n    );\n\n}\n\nexport default Home;","const ItemTypes = {\n    SANDWICH: 'sandwich',\n};\n\nexport default ItemTypes; ","import React, { Component } from 'react';\nimport './DraggableSandwich.css';\n\nimport PropTypes from 'prop-types';\n\nimport ItemTypes from \"../../constants\";\n\nimport { useDrag } from 'react-dnd';\n\nimport {\n    NavLink\n} from \"react-router-dom\";\n\n// Draggable component that displays a 'thumbnail' card for the given sandwich object.\nfunction DraggableSandwich(props) {\n    const [{isDragging}, drag] = useDrag({\n        item: { type: ItemTypes.SANDWICH },\n        collect: monitor => ({\n            isDragging: !!monitor.isDragging(),\n        }),\n        canDrag: () => props.canDrag,\n        begin: () => {\n            return props.data;\n        },\n        end: (item, monitor) => {\n            console.log(\"DraggableSandwich: END DRAG. didDrop=%s; dropResult=%s.\", monitor.didDrop(), monitor.getDropResult());\n        },\n        });\n\n    return (\n        <div className={\"Draggable-sandwich-container \" + (props.canDrag ? \"enabled\" : \"disabled\")}\n            ref={drag}\n            style={{\n                opacity: isDragging ? 0.5 : 1,\n                cursor: 'move',\n            }}\n        >\n            <h3>{props.data.title}</h3>\n            <p>UID: {props.data.uid}</p>\n            <p>Tags: {props.data.tags.toString()}</p>\n            <NavLink to={\"/sandwich/\"+props.data.uid}>See More</NavLink>\n        </div>\n    )\n}\n\nDraggableSandwich.propTypes = {\n    data: PropTypes.object.isRequired,\n    canDrag: PropTypes.bool.isRequired,\n}\n\nDraggableSandwich.defaultProps = {\n    data: {\n        \"uid\": -1,\n        \"title\": \"N/A\",\n        \"tags\": []\n    }\n}\n\nexport default DraggableSandwich;","import React, { Component } from \"react\";\nimport DraggableSandwich from \"./DraggableSandwich\";\nimport Sandwich from \"./Sandwich\";\nimport PropTypes from 'prop-types';\n\nclass FilterableSandwichContainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.onFilterTextChanged = this.onFilterTextChanged.bind(this);\n\n        this.state = {\n            sandwichIndicesToShow: [...Array(this.props.sandwichData.all_modules.length).keys()], // indices into sandwichData, indicating which sandwiches should be displayed\n        };\n\n        \n\n    }\n\n    isSandwichMatching(data, searchText) {\n        searchText = searchText.toLowerCase();\n        // check tags for match\n        if (data.tags.join(\" \").toLowerCase().includes(searchText)) {\n            return true;\n        }\n\n        // check title for match\n        if (data.title.toLowerCase().includes(searchText)) {\n            return true;\n        }\n\n        // TODO: add more matching conditions\n        return false;\n    }\n\n    onFilterTextChanged(e) {\n        const searchText = e.target.value;\n        let newSandwichIndicesToShow = []\n\n        // if empty search text, show all results\n        console.log(\"searchText: %s\", searchText)\n        if (searchText.trim() === \"\") {\n            console.log(\"show all\");\n         \n            newSandwichIndicesToShow = [...Array(this.props.sandwichData.all_modules.length).keys()]; \n            this.setState({sandwichIndicesToShow: newSandwichIndicesToShow});\n            return;\n        }\n\n\n        this.props.sandwichData.all_modules.forEach((value, index) => {\n            if (this.isSandwichMatching(value, searchText)) {\n                newSandwichIndicesToShow.push(index);\n            }\n        });\n\n        this.setState({sandwichIndicesToShow: newSandwichIndicesToShow});\n    }\n\n    render() {\n        let filteredModules = this.props.sandwichData.all_modules.filter((value, index) => {\n            return this.state.sandwichIndicesToShow.includes(index);\n        });\n\n        if (this.props.draggableMode) {\n            return (\n                <>\n                    <div class=\"container\">\n                        <div class=\"row\">\n                            <div class=\"col-sm-2\">\n                                Filter:\n                            </div>\n                            <div class=\"col-sm-8\">\n                                <input id=\"searchField\" type=\"text\" class=\"form-control\" placeholder=\"Add search terms!\" onChange={this.onFilterTextChanged}/>\n                            </div>\n                        </div>\n    \n                        {filteredModules.map((module) => {\n                            let sandwichDiv = <div class=\"col-sm\">\n                                    <DraggableSandwich\n                                        key={module.uid}\n                                        data={module}\n                                        canDrag={!this.props.isSandwichDraggable(module.uid)}\n                                    />\n                                </div>;\n                                return sandwichDiv;\n                        }\n                        )}\n                    </div>\n                </>\n            )\n\n\n        } else {\n            return (\n                <>\n                    <div class=\"container\">\n                        <div class=\"row\">\n                            <div class=\"col-sm-2\">\n                                Filter:\n                            </div>\n                            <div class=\"col-sm-8\">\n                                <input id=\"searchField\" type=\"text\" class=\"form-control\" placeholder=\"Add search terms!\" onChange={this.onFilterTextChanged}/>\n                            </div>\n                        </div>\n    \n                        {filteredModules.map((module) =>\n                            <div class=\"row\">\n                                <div class=\"col-sm\">\n                                    <Sandwich\n                                        key={module.uid}\n                                        data={module}\n                                    />\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                </>\n            )\n        }\n    }\n}\n\nFilterableSandwichContainer.propTypes = {\n    sandwichData: PropTypes.object.isRequired,\n    draggableMode: PropTypes.bool.isRequired,\n    // TODO: this whole draggable flow is a candidate for refactoring\n    isSandwichDraggable: PropTypes.func, // a function that determines whether the sandwich with the given uid is draggable\n}\n\n\nexport default FilterableSandwichContainer;","var data = {\n    \"all_modules\": [\n        {\n            \"uid\": 1,\n            \"title\": \"Cities of the Future\",\n            \"short_description\": \"Students envision what their communities will look like in the future, and create demonstrations that incorporate automation.\",\n            \"tags\": [\n                \"algorithms\",\n                \"Scratch\",\n                \"plugged\"\n            ],\n            \"resources\": [\n                {\n                    \"url\": \"/sandwich/1/image.png\",\n                    \"text\": \"Sandwich picture.\",\n                },\n                {\n                    \"url\": \"/sandwich/1/test.pdf\",\n                    \"text\": \"Here's a PDF!\",\n                }\n            ]\n        },\n        {\n            \"uid\": 2,\n            \"title\": \"Creativity & AI\",\n            \"tags\": [\n                \"algorithms\",\n                \"Scratch\",\n                \"Teachable Machines\"\n            ],\n            \"resources\": [],\n        },\n        {\n            \"uid\": 3,\n            \"title\": \"Debugging Detective\",\n            \"tags\": [\n                \"debugging\",\n                \"Scratch\",\n                \"human skills\"\n            ],\n            \"resources\": [],\n        },\n        {\n            \"uid\": 4,\n            \"title\": \"DAILY AI\",\n            \"tags\": [\n                \"AI\"\n            ],\n            \"resources\": [],\n        },\n        {\n            \"uid\": 5,\n            \"title\": \"Design Thinking Bootcamp\",\n            \"tags\": [\n                \"human skills\"\n            ],\n            \"resources\": [],\n        },\n        {\n            \"uid\": 6,\n            \"title\": \"Robot Race\",\n            \"tags\": [\n                \"debugging\",\n                \"Scratch\",\n                \"human skills\"\n            ],\n            \"resources\": [],\n        },\n        {\n            \"uid\": 7,\n            \"title\": \"Seafloor Cleanup\",\n            \"tags\": [\n                \"debugging\",\n                \"Scratch\",\n                \"human skills\"\n            ],\n            \"resources\": [],\n        }\n    ]\n};\n\nexport default data;\n","import React, { Component } from \"react\";\nimport Sandwich from '../modules/Sandwich';\nimport FilterableSandwichContainer from \"../modules/FilterableSandwichContainer\";\n\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\nimport \"./../../styles.css\"\n\nimport data from \"../../data/all_modules\";\n\nclass AllModules extends React.Component {\n    render() {\n        return (\n            <DndProvider backend={HTML5Backend}>\n                <>\n                    <div class=\"Page-title\">\n                        <h1>Browse All Sandwiches</h1>\n                    </div>\n                    <div>\n                        <FilterableSandwichContainer\n                            sandwichData={data}\n                            draggableMode={false}\n                        />\n                    </div>\n                </>\n            </DndProvider>\n        )\n    }\n}\n\nexport default AllModules;","import React from 'react';\n\nexport default React.createContext({}); ","import React, { Component, useState } from 'react';\nimport './SandwichHolder.css';\n\nimport PropTypes from 'prop-types';\n\nimport ItemTypes from \"../../constants\";\n\nimport { DropTarget } from 'react-dnd';\n\nimport {\n    NavLink\n} from \"react-router-dom\";\n\nimport AppContext from \"../context/app_context\";\n\n// Represents a sandwich spot in the user's curriculum.\n// Takes an index into the curriculum sandwich list as a prop.\nclass SandwichHolder extends React.Component {\n    render() {\n\n        // Grab the props injected by React DnD\n        const { connectDropTarget } = this.props;\n\n        const heldSandwich = this.context.curriculumSandwiches[this.props.index];\n       \n        if (this.context.isSandwichSlotEmpty(this.props.index)) {\n            return connectDropTarget(<div className=\"Sandwich-holder-empty\"\n                style={{\n                    cursor: 'move',\n                }}\n            >\n                <h1>+</h1>\n                <em>(add a sandwich!)</em>\n            </div>);\n        } else {\n            return connectDropTarget(\n                <div className=\"Sandwich-holder\"\n                    style={{\n                        cursor: 'move',\n                    }}\n                >\n                    <h1>#{this.props.index}</h1>\n                    <h3>{heldSandwich.title}</h3>\n                    <p>UID: {heldSandwich.uid}</p>\n                    <p>Tags: <em>{heldSandwich.tags.toString()}</em></p>\n                    {(heldSandwich.uid !== -1) && <NavLink to={\"/sandwich/\" + heldSandwich.uid}>See More</NavLink>}<br />\n                    <input type=\"button\" value=\"Remove\" onClick={() => this.context.deleteSandwichFromUserCurriculum(this.props.index)} />\n                </div>\n            );\n        }\n    }\n}\n\nSandwichHolder.propTypes = {\n    index: PropTypes.number.isRequired,\n}\n\nSandwichHolder.contextType = AppContext;\n\n// React DnD configuration\n\nconst sandwichTarget = {\n    drop(props, monitor, component) {\n        console.log(\"SandwichHolder: DROP\");\n        let data = monitor.getItem();\n        console.log(\"Data: %o\", data);\n        component.context.updateSandwichInUserCurriculum(props.index, data);\n    }\n}\n\nfunction collect(connect, monitor) {\n    return {\n        connectDropTarget: connect.dropTarget(),\n    }\n}\n\n\nexport default DropTarget(ItemTypes.SANDWICH, sandwichTarget, collect)(SandwichHolder);","import React, { Component } from \"react\";\nimport SandwichHolder from \"../modules/SandwichHolder\";\nimport NutritionFacts from \"../modules/NutritionFacts\";\n\nimport PropTypes from 'prop-types';\n\nimport AppContext from \"../context/app_context\";\nimport data from \"../../data/all_modules\"\nimport FilterableSandwichContainer from \"../modules/FilterableSandwichContainer\";\n\n// Displays the state of the user's curriculum sandwiches, along with \n// a filterable list of all sandwiches. \n// Sandwiches from the list can be dragged and dropped into the user's \n// curriculum slots to modify the curriculum.\nclass CurriculumBuilder extends React.Component {\n    render() {\n        const holderList = []\n        for (let i = 0; i < this.props.numSlots; i++) {\n            holderList.push(\n                <div class=\"col-sm\">\n                    <SandwichHolder\n                        key={i}\n                        index={i}/>\n                </div>)\n        }\n\n        return (\n            <>\n                <div class=\"row\">\n                    <div class=\"col\">\n                    </div>\n                </div>\n                <input type=\"button\" value=\"TODO: Clear All\" onClick={this.context.clearUserCurriculum} />\n                <br />\n                <div class=\"row\">\n                    <div class=\"col-9\">\n                        <div class=\"row\">\n                            {holderList}\n                        </div>\n                    </div>\n                    <div class=\"col-3\">\n                                <NutritionFacts sandwichData={this.context.curriculumSandwiches} />\n                    </div>\n                </div>\n                <hr />\n                <FilterableSandwichContainer\n                    sandwichData={data}\n                    draggableMode={true}\n                    isSandwichDraggable={this.context.isSandwichInUserCurriculum} />\n            </>\n        )\n    }\n\n}\n\nCurriculumBuilder.propTypes = {\n}\n\nCurriculumBuilder.contextType = AppContext;\n\nexport default CurriculumBuilder;\n","import React, { Component } from \"react\";\n\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\nimport \"./../../styles.css\"\n\nimport CurriculumBuilder from \"../modules/CurriculumBuilder\";\n\nclass BuildYourOwn extends React.Component {\n    render() {\n        return (\n            <DndProvider backend={HTML5Backend}>\n                <>\n                    <div class=\"col-sm Page-title\">\n                        <h1>Build Your Own Module</h1>\n                    </div>\n                    <div class=\"container\">\n                        <div class=\"row\">\n                        </div>\n                        <CurriculumBuilder numSlots=\"3\"/>\n                    </div>\n                </>\n            </DndProvider>\n        )\n    }\n}\n\nexport default BuildYourOwn;","import './App.css';\nimport './../styles.css';\n\nimport React, { Component } from 'react';\n\nimport Sandwich from './modules/Sandwich';\nimport Navbar from './modules/Navbar';\nimport SandwichPage from './pages/SandwichPage';\n\nimport Home from './pages/Home';\nimport AllModules from './pages/AllModules';\nimport BuildYourOwn from \"./pages/BuildYourOwn\";\n\nimport data from \"../data/all_modules\";\nimport AppContext from \"./context/app_context\";\n\nimport {\n  Route,\n  Switch,\n} from \"react-router-dom\";\n\nconst EMPTY_SANDWICH_DATA = {};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.clearUserCurriculum = this.clearUserCurriculum.bind(this);\n    this.isSandwichInUserCurriculum = this.isSandwichInUserCurriculum.bind(this);\n    this.deleteSandwichFromUserCurriculum = this.deleteSandwichFromUserCurriculum.bind(this);\n    this.updateSandwichInUserCurriculum = this.updateSandwichInUserCurriculum.bind(this);\n    this.isSandwichSlotEmpty = this.isSandwichSlotEmpty.bind(this);\n\n    // App-wide state propagated via React Context\n    this.state = {\n      curriculumSlots: 3,\n      curriculumSandwiches: [],\n    }\n\n    for (let i = 0; i < this.state.curriculumSlots; i++) {\n      this.state.curriculumSandwiches.push({});\n    }\n\n  }\n\n  clearUserCurriculum() {\n    for (let i = 0; i < this.state.curriculumSlots; i++) {\n      this.deleteSandwichFromUserCurriculum(i);\n    }\n  }\n\n  isSandwichInUserCurriculum(uid) {\n    for (let i = 0; i < this.state.curriculumSlots; i++) {\n      if (this.state.curriculumSandwiches[i].uid === uid) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  isSandwichSlotEmpty(index) {\n    console.log(\"isSandwichSlotEmpty(): \" + (Object.keys(this.state.curriculumSandwiches[index]).length === 0));\n    return Object.keys(this.state.curriculumSandwiches[index]).length === 0;\n  }\n\n  deleteSandwichFromUserCurriculum(index) {\n    this.updateSandwichInUserCurriculum(index, EMPTY_SANDWICH_DATA);\n  }\n\n  updateSandwichInUserCurriculum(index, newData) {\n    const updatedSandwichData = this.state.curriculumSandwiches.map((data, j) => {\n      if (j === index) {\n        console.log(\"updated %s\", index);\n        return newData;\n      } else {\n        return data;\n      }\n    });\n\n    this.setState({ curriculumSandwiches: updatedSandwichData });\n  }\n\n  render() {\n    return (\n      <AppContext.Provider value={{\n        curriculumSlots: this.state.curriculumSlots,\n        curriculumSandwiches: this.state.curriculumSandwiches,\n        clearUserCurriculum: this.clearUserCurriculum,\n        isSandwichInUserCurriculum: this.isSandwichInUserCurriculum,\n        deleteSandwichFromUserCurriculum: this.deleteSandwichFromUserCurriculum,\n        updateSandwichInUserCurriculum: this.updateSandwichInUserCurriculum,\n        isSandwichSlotEmpty: this.isSandwichSlotEmpty,\n      }}>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            Ethical AI for Computational Action\n        </header>\n          <Navbar />\n          <Switch>\n            <Route path=\"/home\">\n              <Home />\n            </Route>\n\n\n            <Route path=\"/builder\">\n              <BuildYourOwn />\n            </Route>\n\n            <Route path=\"/all\">\n              <AllModules />\n            </Route>\n\n            {\n              // TODO: generate Routes for each module page\n              data.all_modules.map(module => {\n                return <Route key={module.uid} path={\"/sandwich/\" + module.uid}>\n                  <SandwichPage sandwich={module} />\n                </Route>\n              })\n            }\n\n            <Route path=\"/\">\n              <h1 class=\"Page-title\">404 - Page not found!</h1>\n            </Route>\n\n          </Switch>\n        </div>\n      </AppContext.Provider>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}